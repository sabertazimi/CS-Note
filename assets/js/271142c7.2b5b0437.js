"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[8208],{9505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"Web/React/ReactRouterBasicNotes","title":"React Router Basic Notes","description":"Router and Route","source":"@site/notes/Web/React/ReactRouterBasicNotes.md","sourceDirName":"Web/React","slug":"/Web/React/ReactRouterBasicNotes","permalink":"/awesome-notes/Web/React/ReactRouterBasicNotes","draft":false,"unlisted":false,"editUrl":"https://github.com/sabertazimi/awesome-notes/edit/main/notes/Web/React/ReactRouterBasicNotes.md","tags":[{"inline":true,"label":"Web","permalink":"/awesome-notes/tags/web"},{"inline":true,"label":"React","permalink":"/awesome-notes/tags/react"},{"inline":true,"label":"Router","permalink":"/awesome-notes/tags/router"}],"version":"current","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1734246257000,"frontMatter":{"author":"Sabertazimi","authorTitle":"Web Developer","authorURL":"https://github.com/sabertazimi","authorImageURL":"https://github.com/sabertazimi.png","tags":["Web","React","Router"]},"sidebar":"tutorialSidebar","previous":{"title":"React Hooks Notes","permalink":"/awesome-notes/Web/React/ReactHooksNotes"},"next":{"title":"Redux Basic Notes","permalink":"/awesome-notes/Web/React/ReduxBasicNotes"}}');var r=t(5105),s=t(842);const a={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","React","Router"]},i="React Router Basic Notes",c={},l=[{value:"Router and Route",id:"router-and-route",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Nested Route",id:"nested-route",level:3},{value:"Private Route",id:"private-route",level:3},{value:"URL Params",id:"url-params",level:3},{value:"Component Props",id:"component-props",level:3},{value:"Link and URL Props",id:"link-and-url-props",level:3},{value:"Clean URLs",id:"clean-urls",level:3},{value:"Change Route",id:"change-route",level:3},{value:"Deployment",id:"deployment",level:2},{value:"Relative Path",id:"relative-path",level:3},{value:"Webpack Dev Server",id:"webpack-dev-server",level:3},{value:"Express Config",id:"express-config",level:3},{value:"Nginx Config",id:"nginx-config",level:3},{value:"React Router Internals",id:"react-router-internals",level:2},{value:"Route Component",id:"route-component",level:3},{value:"Link Component",id:"link-component",level:3},{value:"Redirect Component",id:"redirect-component",level:3},{value:"Router Hooks",id:"router-hooks",level:3},{value:"Reference",id:"reference",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"react-router-basic-notes",children:"React Router Basic Notes"})}),"\n",(0,r.jsx)(n.h2,{id:"router-and-route",children:"Router and Route"}),"\n",(0,r.jsx)(n.p,{children:"parent routes are active when child routes are active"}),"\n",(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \'react-router-dom\'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path="/" component={Home} />\n          <Route\n            exact\n            path="/tags"\n            render={() => {\n              return <Redirect to="/tags/all" />\n            }}\n          />\n          <Route path="/tags/:tagName" component={Tags} />\n          <Route path="/posts/:mdFile" component={Post} />\n          <Route path="/book" component={Book} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nested-route",children:"Nested Route"}),"\n",(0,r.jsxs)(n.p,{children:["Key Notes: In component of parent route, should render ",(0,r.jsx)(n.code,{children:"{this.props.children}"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \'react-router-dom\'\n\nrender(\n  <Router>\n    <Route path="/" component={App}>\n      <Route path="/repos" component={Repos}>\n        <Route path="/repos/:userName/:repoName" component={Repo} />\n      </Route>\n    </Route>\n  </Router>,\n  document.getElementById(\'app\')\n)\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In ",(0,r.jsx)(n.code,{children:"App.js"}),": ",(0,r.jsx)(n.code,{children:"render() { return (<div>... {this.props.children}</ div>); }"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["In ",(0,r.jsx)(n.code,{children:"Repos.js"}),": ",(0,r.jsx)(n.code,{children:"render() { return (<div>... {this.props.children}</ div>); }"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"private-route",children:"Private Route"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Redirect, Route } from 'react-router-dom'\n\ninterface Props {\n  location: string\n}\n\nexport default function PrivateRoute({\n  component,\n  toAuth,\n  ...rest\n}: {\n  component: React.Component<Props>\n  toAuth: string\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props: Props) => (\n        auth.isAuthenticated() === true\n          ? (<Component {...props} />)\n          : (\n              <Redirect\n                to={{\n                  pathname: toAuth,\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            ))}\n    />\n  )\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"url-params",children:"URL Params"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Route } from 'react-router-dom'\n\nexport default function App() {\n  return <Route path=\"/repos/:userName/:repoName\" component={Repo} />\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// In Repo.js\nexport default function Repo() {\n  return (\n    <div>\n      <div>{this.props.params.userName}</div>\n      <div>{this.props.params.repoName}</div>\n    </div>\n  )\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"component-props",children:"Component Props"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"subRoutes."}),"\n",(0,r.jsx)(n.li,{children:"id/size."}),"\n",(0,r.jsx)(n.li,{children:"etc...."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Route } from 'react-router-dom'\n\ninterface Props {}\n\nexport default function RenderRoute({\n  component,\n}: {\n  component: React.Component<Props>\n}) {\n  return <Route render={props => <Component {...props} />} />\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"link-and-url-props",children:"Link and URL Props"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import Component from './Component'\n\nexport default function App() {\n  const { ...state } = this.props.location.state\n\n  return (\n    <Component\n      to={{\n        pathname: url,\n        state,\n      }}\n    />\n  )\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clean-urls",children:"Clean URLs"}),"\n",(0,r.jsxs)(n.p,{children:["Switch from ",(0,r.jsx)(n.code,{children:"hashHistory"})," to ",(0,r.jsx)(n.code,{children:"browserHistory"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"change-route",children:"Change Route"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onEnter = { () => store.dispatch(createRouteAction(params))}"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Return ",(0,r.jsx)(n.code,{children:"<Redirect />"})," conditionally and ",(0,r.jsx)(n.code,{children:"withRouter"})," wrapper (",(0,r.jsx)(n.code,{children:"this.props.history.push('nextURL')"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Redirect } from 'react-router-dom'\n\nclass Login {\n  login = () => {\n    // 1. login\n    // 2. setState and pushHistory (500ms delay)\n    auth.login(() => {\n      const { from } = this.props.location.state || { from: { pathname: '/' } }\n      this.setState({ redirect: true })\n      this.props.history.push(from)\n    }, 500)\n  }\n\n  render() {\n    const { redirect } = this.state\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n\n    if (redirect)\n      return <Redirect to={from} />\n\n    return (\n      <div>\n        <button type=\"button\" onClick={this.login}>Login</button>\n      </div>\n    )\n  }\n}\n\n// apply `history` object to props of `Login` component\nconst LoginWithRouter = withRouter(Login)\nexport default LoginWithRouter\n"})}),"\n",(0,r.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,r.jsx)(n.h3,{id:"relative-path",children:"Relative Path"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'export default function App() {\n  const history = useHistory()\n  return (\n    <ConnectedRouter history={history} basename="/react-boilerplate">\n      <Switch>\n        <Route exact path={`${process.env.PUBLIC_URL}/`} component={Home} />\n        <Route path={`${process.env.PUBLIC_URL}/about`} component={About} />\n        <Route\n          path={`${process.env.PUBLIC_URL}/404`}\n          render={() => <Redirect to={`${process.env.PUBLIC_URL}/`} />}\n        />\n      </Switch>\n    </ConnectedRouter>\n  )\n}\n\nfunction Header() {\n  return (\n    <div>\n      <NavLink to={`${process.env.PUBLIC_URL}/`}>Home</NavLink>\n      <NavLink to={`${process.env.PUBLIC_URL}/about`}>About</NavLink>\n    </div>\n  )\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"webpack-dev-server",children:"Webpack Dev Server"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"publicPath: '/'"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"historyApiFallback: true"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const path = require('node:path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n  entry: './app/index.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'index_bundle.js',\n    publicPath: '/',\n  },\n  module: {\n    rules: [\n      { test: /\\.(js)$/, use: 'babel-loader' },\n      { test: /\\.css$/, use: ['style-loader', 'css-loader'] },\n    ],\n  },\n  devServer: {\n    historyApiFallback: true,\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: 'app/index.html',\n    }),\n  ],\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"express-config",children:"Express Config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"app.use(express.static(path.resolve(__dirname, 'build')))\n\n// always serve index.html for any request\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, 'build', 'index.html'))\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"nginx-config",children:"Nginx Config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nginx",children:"# always serve index.html for any request (react-router for single page application)\nroot /var/www/blog/html/build;\nindex index.html;\nserver_name blog.sabertazimi.cn;\n\nlocation / {\n   try_files $uri /index.html;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"react-router-internals",children:"React Router Internals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<Route>"})," instances listen to ",(0,r.jsx)(n.code,{children:"popstate"})," event to ",(0,r.jsx)(n.code,{children:"forceUpdate"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["When click ",(0,r.jsx)(n.code,{children:"<Link>"}),"/",(0,r.jsx)(n.code,{children:"<Redirect>"}),", ",(0,r.jsx)(n.code,{children:"historyPush"})," or ",(0,r.jsx)(n.code,{children:"historyReplace"})," get called,\n",(0,r.jsx)(n.code,{children:"<Route>"})," instances re-match and re-render."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const instances = []\n\nconst register = comp => instances.push(comp)\nconst unregister = comp => instances.splice(instances.indexOf(comp), 1)\n\nfunction historyPush(path) {\n  window.history.pushState({}, null, path)\n  instances.forEach(instance => instance.forceUpdate())\n}\n\nfunction historyReplace(path) {\n  window.history.replaceState({}, null, path)\n  instances.forEach(instance => instance.forceUpdate())\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"route-component",children:"Route Component"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"function matchPath(pathname, options) {\n  const { exact = false, path } = options\n\n  if (!path) {\n    return {\n      path: null,\n      url: pathname,\n      isExact: true,\n    }\n  }\n\n  const match = new RegExp(`^${path}`).exec(pathname)\n\n  if (!match) {\n    // There wasn't a match.\n    return null\n  }\n\n  const url = match[0]\n  const isExact = pathname === url\n\n  if (exact && !isExact) {\n    // There was a match, but it wasn't\n    // an exact match as specified by\n    // the exact prop.\n\n    return null\n  }\n\n  return {\n    path,\n    url,\n    isExact,\n  }\n}\n\ninterface Props {\n  path: string\n  exact: boolean\n  component: Function\n  render: Function\n}\n\nclass Route extends Component<Props> {\n  UNSAFE_componentWillMount() {\n    window.addEventListener('popstate', this.handlePop)\n    register(this)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('popstate', this.handlePop)\n    unregister(this)\n  }\n\n  handlePop = () => {\n    this.forceUpdate()\n  }\n\n  render() {\n    const { path, exact, component, render } = this.props\n\n    const match = matchPath(window.location.pathname, { path, exact })\n\n    if (!match)\n      return null\n\n    if (component)\n      return React.createElement(component, { match })\n\n    if (render)\n      return render({ match })\n\n    return null\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"link-component",children:"Link Component"}),"\n",(0,r.jsxs)(n.p,{children:["Whenever a ",(0,r.jsx)(n.code,{children:"<Link>"})," is clicked and the location changes,\neach ",(0,r.jsx)(n.code,{children:"<Route>"})," will be aware of that and re-match and re-render with ",(0,r.jsx)(n.code,{children:"instances"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"interface Props {\n  to: string\n  children: ReactElement\n}\n\nclass Link extends Component<Props> {\n  handleClick = (event) => {\n    const { replace, to } = this.props\n    event.preventDefault()\n\n    replace ? historyReplace(to) : historyPush(to)\n  }\n\n  render() {\n    const { to, children } = this.props\n\n    return (\n      <a href={to} onClick={this.handleClick}>\n        {children}\n      </a>\n    )\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"redirect-component",children:"Redirect Component"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"class Redirect extends Component {\n  // eslint-disable-next-line react/no-default-props\n  static defaultProps = {\n    push: false,\n  }\n\n  componentDidMount() {\n    const { to, push } = this.props\n\n    push ? historyPush(to) : historyReplace(to)\n  }\n\n  render() {\n    return null\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"router-hooks",children:"Router Hooks"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"/**\n * @see https://github.com/ashok-khanna/react-snippets\n */\n\nimport { useEffect, useState } from 'react'\n\nexport default function Router({ routes, defaultComponent }) {\n  // state to track URL and force component to re-render on change\n  const [currentPath, setCurrentPath] = useState(window.location.pathname)\n\n  useEffect(() => {\n    const onLocationChange = () => {\n      // update path state to current window URL\n      setCurrentPath(window.location.pathname)\n    }\n\n    // listen for popstate event\n    window.addEventListener('popstate', onLocationChange)\n\n    // clean up event listener\n    return () => {\n      window.removeEventListener('popstate', onLocationChange)\n    }\n  }, [])\n  return (\n    routes.find(({ path, component }) => path === currentPath)?.component\n    || defaultComponent\n  )\n}\n\nexport function Link({ className, href, children }: {\n  className: string\n  href: string\n  children: ReactElement\n}) {\n  const onClick = (event) => {\n    // if ctrl or meta key are held on click,\n    // allow default behavior of opening link in new tab\n    if (event.metaKey || event.ctrlKey)\n      return\n\n    // prevent full page reload\n    event.preventDefault()\n\n    // update url\n    window.history.pushState({}, '', href)\n\n    // communicate to Routes that URL has changed\n    const navEvent = new PopStateEvent('popstate')\n    window.dispatchEvent(navEvent)\n  }\n\n  return (\n    <a className={className} href={href} onClick={onClick}>\n      {children}\n    </a>\n  )\n}\n\nfunction navigate(href) {\n  // update url\n  window.history.pushState({}, '', href)\n\n  // communicate to Routes that URL has changed\n  const navEvent = new PopStateEvent('popstate')\n  window.dispatchEvent(navEvent)\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/playlist?list=PLqrUy7kON1mfJ1cQfJJ1FiULLNngvlFTD",children:"React Router Tutorial"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},842:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(8101);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);