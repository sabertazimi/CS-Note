"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[6997],{1556:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Web/JavaScript/TypeScriptBasicNotes","title":"TypeScript Basic Notes","description":"TypeScript Toolchain","source":"@site/notes/Web/JavaScript/TypeScriptBasicNotes.md","sourceDirName":"Web/JavaScript","slug":"/Web/JavaScript/TypeScriptBasicNotes","permalink":"/awesome-notes/Web/JavaScript/TypeScriptBasicNotes","draft":false,"unlisted":false,"editUrl":"https://github.com/sabertazimi/awesome-notes/edit/main/notes/Web/JavaScript/TypeScriptBasicNotes.md","tags":[{"inline":true,"label":"Web","permalink":"/awesome-notes/tags/web"},{"inline":true,"label":"JavaScript","permalink":"/awesome-notes/tags/java-script"},{"inline":true,"label":"TypeScript","permalink":"/awesome-notes/tags/type-script"}],"version":"current","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1734246257000,"frontMatter":{"author":"Sabertazimi","authorTitle":"Web Developer","authorURL":"https://github.com/sabertazimi","authorImageURL":"https://github.com/sabertazimi.png","tags":["Web","JavaScript","TypeScript"]},"sidebar":"tutorialSidebar","previous":{"title":"JavaScript Testing Notes","permalink":"/awesome-notes/Web/JavaScript/JavaScriptTestingNotes"},"next":{"title":"Network Basic Notes","permalink":"/awesome-notes/Web/Network/NetworkBasicNotes"}}');var r=s(5105),i=s(842);const l={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","JavaScript","TypeScript"]},a="TypeScript Basic Notes",o={},c=[{value:"TypeScript Toolchain",id:"typescript-toolchain",level:2},{value:"TypeScript Installation",id:"typescript-installation",level:3},{value:"TypeScript Configuration",id:"typescript-configuration",level:3},{value:"Webpack Configuration",id:"webpack-configuration",level:3},{value:"ESLint Configuration",id:"eslint-configuration",level:3},{value:"Jest Configuration",id:"jest-configuration",level:3},{value:"TypeScript DefinitelyTyped",id:"typescript-definitelytyped",level:3},{value:"TypeScript Compiler Performance",id:"typescript-compiler-performance",level:3},{value:"TypeScript Project Reference",id:"typescript-project-reference",level:3},{value:"TypeScript Monorepo Configuration",id:"typescript-monorepo-configuration",level:3},{value:"Modules",id:"modules",level:2},{value:"Globals Definition",id:"globals-definition",level:3},{value:"Library Definition",id:"library-definition",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Module Resolution",id:"module-resolution",level:3},{value:"Classic Module Resolution",id:"classic-module-resolution",level:4},{value:"Node Module Resolution",id:"node-module-resolution",level:4},{value:"Basic Types",id:"basic-types",level:2},{value:"Enum Types",id:"enum-types",level:2},{value:"Number Enum",id:"number-enum",level:3},{value:"String Enum",id:"string-enum",level:3},{value:"Enum Parameters",id:"enum-parameters",level:3},{value:"Enum Flags",id:"enum-flags",level:3},{value:"Enum Index Signature",id:"enum-index-signature",level:3},{value:"Enum Internals",id:"enum-internals",level:3},{value:"Function",id:"function",level:2},{value:"Function Interface",id:"function-interface",level:3},{value:"Arrow Function",id:"arrow-function",level:3},{value:"Function Overload",id:"function-overload",level:3},{value:"Rest Parameters",id:"rest-parameters",level:3},{value:"Function Types Design",id:"function-types-design",level:3},{value:"Interface",id:"interface",level:2},{value:"Interface Function",id:"interface-function",level:3},{value:"Interface Implementation",id:"interface-implementation",level:3},{value:"Interface Extension",id:"interface-extension",level:3},{value:"Overridden Properties",id:"overridden-properties",level:4},{value:"Interface Merging",id:"interface-merging",level:4},{value:"Interface and Type Alias",id:"interface-and-type-alias",level:3},{value:"Type Modifiers",id:"type-modifiers",level:2},{value:"Member Access Modifiers",id:"member-access-modifiers",level:3},{value:"Readonly Type Modifier",id:"readonly-type-modifier",level:3},{value:"Call Signature",id:"call-signature",level:2},{value:"Call Signature Type",id:"call-signature-type",level:3},{value:"Call Signature Property",id:"call-signature-property",level:3},{value:"Index Signature",id:"index-signature",level:2},{value:"Index Signature Type Check",id:"index-signature-type-check",level:3},{value:"Select Index Types",id:"select-index-types",level:3},{value:"Symbol Index Types",id:"symbol-index-types",level:3},{value:"Template Literal Index Types",id:"template-literal-index-types",level:3},{value:"Indexed Access Types",id:"indexed-access-types",level:3},{value:"Literal Types",id:"literal-types",level:2},{value:"Template Literal Types",id:"template-literal-types",level:2},{value:"Basic Template Literal Types",id:"basic-template-literal-types",level:3},{value:"Intrinsic Template Literal Types",id:"intrinsic-template-literal-types",level:3},{value:"Advanced Template Literal Types",id:"advanced-template-literal-types",level:3},{value:"Mapped Template Literal Types",id:"mapped-template-literal-types",level:3},{value:"Template Literal Keys",id:"template-literal-keys",level:4},{value:"Remapping Mapped Type Keys",id:"remapping-mapped-type-keys",level:4},{value:"Union Types",id:"union-types",level:2},{value:"Basic Union",id:"basic-union",level:3},{value:"Discriminated Union",id:"discriminated-union",level:3},{value:"Intersection Types",id:"intersection-types",level:2},{value:"Generic Types",id:"generic-types",level:2},{value:"Generic Function",id:"generic-function",level:3},{value:"Generic Parameters",id:"generic-parameters",level:3},{value:"Generic Class",id:"generic-class",level:3},{value:"Generic Type Alias",id:"generic-type-alias",level:3},{value:"Generic Discriminated Union",id:"generic-discriminated-union",level:3},{value:"Explicit Generic Types",id:"explicit-generic-types",level:3},{value:"Default Generic Types",id:"default-generic-types",level:3},{value:"Constrained Generic Types",id:"constrained-generic-types",level:3},{value:"Generic Types Programming",id:"generic-types-programming",level:3},{value:"Conditional Types",id:"conditional-types",level:2},{value:"Basic Conditional Types",id:"basic-conditional-types",level:3},{value:"Nested Conditional Types",id:"nested-conditional-types",level:3},{value:"Index Conditional Types",id:"index-conditional-types",level:3},{value:"Mapped Conditional Types",id:"mapped-conditional-types",level:3},{value:"Distributive Conditional Types",id:"distributive-conditional-types",level:3},{value:"Moving Types",id:"moving-types",level:2},{value:"Typeof Types",id:"typeof-types",level:3},{value:"Keyof Types",id:"keyof-types",level:3},{value:"Mapped Types",id:"mapped-types",level:2},{value:"Builtin Mapped Types",id:"builtin-mapped-types",level:3},{value:"Basic Mapped Types",id:"basic-mapped-types",level:3},{value:"Union Mapped Types",id:"union-mapped-types",level:3},{value:"Key Mapped Types",id:"key-mapped-types",level:3},{value:"Function Mapped Types",id:"function-mapped-types",level:3},{value:"Custom Mapped Types",id:"custom-mapped-types",level:3},{value:"Utility Types",id:"utility-types",level:2},{value:"Null Types",id:"null-types",level:3},{value:"Boolean Types",id:"boolean-types",level:3},{value:"Primitive Types",id:"primitive-types",level:3},{value:"Promise Types",id:"promise-types",level:3},{value:"Proxy Types",id:"proxy-types",level:3},{value:"Recursive Types",id:"recursive-types",level:3},{value:"Nominal Brand Types",id:"nominal-brand-types",level:3},{value:"Lodash Types",id:"lodash-types",level:3},{value:"Type Inference",id:"type-inference",level:2},{value:"Type Guard",id:"type-guard",level:2},{value:"In Type Guard",id:"in-type-guard",level:3},{value:"Instance Type Guard",id:"instance-type-guard",level:3},{value:"TypeOf Type Guard",id:"typeof-type-guard",level:3},{value:"Discriminated Union Type Guard",id:"discriminated-union-type-guard",level:3},{value:"Never Type Guard",id:"never-type-guard",level:3},{value:"Exhaustiveness Check",id:"exhaustiveness-check",level:3},{value:"Excess Property Check",id:"excess-property-check",level:3},{value:"Type Predicate Signature",id:"type-predicate-signature",level:3},{value:"Type Assertion",id:"type-assertion",level:2},{value:"As Assertion",id:"as-assertion",level:3},{value:"Const Assertion",id:"const-assertion",level:3},{value:"Assertion Signature",id:"assertion-signature",level:3},{value:"Decorators",id:"decorators",level:2},{value:"Decorators Pros",id:"decorators-pros",level:3},{value:"Legacy Stage 2 Decorators",id:"legacy-stage-2-decorators",level:3},{value:"Class Decorators",id:"class-decorators",level:4},{value:"Class Properties Decorators",id:"class-properties-decorators",level:4},{value:"Method Parameters Decorators",id:"method-parameters-decorators",level:4},{value:"Methods Decorators",id:"methods-decorators",level:4},{value:"Modern Stage 3 Decorators",id:"modern-stage-3-decorators",level:3},{value:"Decorators Execution Order",id:"decorators-execution-order",level:3},{value:"Reflect Metadata",id:"reflect-metadata",level:3},{value:"Type System",id:"type-system",level:2},{value:"Covariant",id:"covariant",level:3},{value:"Contravariant",id:"contravariant",level:3},{value:"Type Gymnastics",id:"type-gymnastics",level:3},{value:"Type Gymnastics Programming",id:"type-gymnastics-programming",level:4},{value:"Type Gymnastics Tools",id:"type-gymnastics-tools",level:4},{value:"Type Gymnastics Examples",id:"type-gymnastics-examples",level:4},{value:"Type Gymnastics Reference",id:"type-gymnastics-reference",level:4},{value:"TypeScript Internals",id:"typescript-internals",level:2},{value:"TypeScript Compiler",id:"typescript-compiler",level:3},{value:"TypeScript Scanner",id:"typescript-scanner",level:4},{value:"TypeScript Parser",id:"typescript-parser",level:4},{value:"TypeScript Binder",id:"typescript-binder",level:4},{value:"TypeScript Checker",id:"typescript-checker",level:4},{value:"TypeScript Emitter",id:"typescript-emitter",level:4},{value:"TypeScript Internals API",id:"typescript-internals-api",level:3},{value:"TypeScript Reference",id:"typescript-reference",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"typescript-basic-notes",children:"TypeScript Basic Notes"})}),"\n",(0,r.jsx)(n.h2,{id:"typescript-toolchain",children:"TypeScript Toolchain"}),"\n",(0,r.jsx)(n.h3,{id:"typescript-installation",children:"TypeScript Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i -D typescript\nnpm i -D react react-dom @types/node @types/react @types/react-dom\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescript-configuration",children:"TypeScript Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx tsconfig.json\nnpx tsc --init\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i -D @tsconfig/create-react-app\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Basic ",(0,r.jsx)(n.a,{href:"https://www.typescriptlang.org/tsconfig",children:(0,r.jsx)(n.code,{children:"tsconfig"})}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/tsconfig/bases",children:(0,r.jsx)(n.code,{children:"extends"})}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@tsconfig/recommended/tsconfig.json"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@tsconfig/create-react-app/tsconfig.json"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@tsconfig/node16/tsconfig.json"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@tsconfig/deno/tsconfig.json"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"include"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"exclude"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"buildOptions"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"compilerOptions"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"watchOptions"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsNode"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "include": ["./src/**/*"],\n  "exclude": ["node_modules", "build", "dist", "coverage"],\n  "compilerOptions": {\n    /* \u57fa\u672c\u9009\u9879 */\n    "target": "es2022", // \'ES3\', \'ES5\', \'ES2015\', \'ES2016\', \'ES2017\', or \'ESNEXT\'\n    "module": "NodeNext", // \u6307\u5b9a\u4f7f\u7528\u6a21\u5757: \'commonjs\', \'amd\', \'system\', \'umd\' or \'es2015\'\n    "lib": ["es2022"], // \u6307\u5b9a\u8981\u5305\u542b\u5728\u7f16\u8bd1\u4e2d\u7684\u5e93\u6587\u4ef6\n    "allowJs": true, // \u5141\u8bb8\u7f16\u8bd1 javascript \u6587\u4ef6\n    "checkJs": true, // \u62a5\u544a javascript \u6587\u4ef6\u4e2d\u7684\u9519\u8bef\n    "jsx": "react", // \'preserve\', \'react-native\', or \'react\'\n    "declaration": true, // \u751f\u6210\u76f8\u5e94\u7684 \'.d.ts\' \u6587\u4ef6\n    "outFile": "./", // \u5c06\u8f93\u51fa\u6587\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a\u6587\u4ef6\n    "outDir": "./dist/", // \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\n    "rootDir": "./", // \u7528\u6765\u63a7\u5236\u8f93\u51fa\u76ee\u5f55\u7ed3\u6784 --outDir.\n    "removeComments": true, // \u5220\u9664\u7f16\u8bd1\u540e\u7684\u6240\u6709\u7684\u6ce8\u91ca\n    "noEmit": true, // \u4e0d\u751f\u6210\u8f93\u51fa\u6587\u4ef6\n    "importHelpers": true, // \u4ece tslib \u5bfc\u5165\u8f85\u52a9\u5de5\u5177\u51fd\u6570\n    "isolatedModules": true, // \u5c06\u6bcf\u4e2a\u6587\u4ef6\u505a\u4e3a\u5355\u72ec\u7684\u6a21\u5757 (\u4e0e \'ts.transpileModule\' \u7c7b\u4f3c)\n    "resolveJsonModule": true,\n\n    /* \u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5\u9009\u9879 */\n    "strict": true, // \u542f\u7528\u6240\u6709\u4e25\u683c\u7c7b\u578b\u68c0\u67e5\u9009\u9879\n    "noImplicitAny": true, // \u5728\u8868\u8fbe\u5f0f\u548c\u58f0\u660e\u4e0a\u6709\u9690\u542b\u7684 any\u7c7b\u578b\u65f6\u62a5\u9519\n    "strictNullChecks": true, // \u542f\u7528\u4e25\u683c\u7684 null \u68c0\u67e5\n    "noImplicitThis": true, // \u5f53 this \u8868\u8fbe\u5f0f\u503c\u4e3a any \u7c7b\u578b\u7684\u65f6\u5019\uff0c\u751f\u6210\u4e00\u4e2a\u9519\u8bef\n    "alwaysStrict": true, // \u4ee5\u4e25\u683c\u6a21\u5f0f\u68c0\u67e5\u6bcf\u4e2a\u6a21\u5757\uff0c\u5e76\u5728\u6bcf\u4e2a\u6587\u4ef6\u91cc\u52a0\u5165 \'use strict\'\n    "skipLibCheck": true,\n\n    /* \u989d\u5916\u7684\u68c0\u67e5 */\n    "noUnusedLocals": true, // \u6709\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u65f6\uff0c\u629b\u51fa\u9519\u8bef\n    "noUnusedParameters": true, // \u6709\u672a\u4f7f\u7528\u7684\u53c2\u6570\u65f6\uff0c\u629b\u51fa\u9519\u8bef\n    "noImplicitReturns": true, // \u5e76\u4e0d\u662f\u6240\u6709\u51fd\u6570\u91cc\u7684\u4ee3\u7801\u90fd\u6709\u8fd4\u56de\u503c\u65f6\uff0c\u629b\u51fa\u9519\u8bef\n    "noFallthroughCasesInSwitch": true, // \u62a5\u544a switch \u8bed\u53e5\u7684 fallthrough \u9519\u8bef\n    "noUncheckedIndexedAccess": true,\n\n    /* \u6a21\u5757\u89e3\u6790\u9009\u9879 */\n    "moduleResolution": "NodeNext", // \u9009\u62e9\u6a21\u5757\u89e3\u6790\u7b56\u7565\uff1a \'node\' (Node.js) or \'classic\'\n    "moduleDetection": "force",\n    "esModuleInterop": true,\n    "baseUrl": "./", // \u7528\u4e8e\u89e3\u6790\u975e\u76f8\u5bf9\u6a21\u5757\u540d\u79f0\u7684\u57fa\u76ee\u5f55\n    "paths": {\n      "@components": ["src/components"],\n      "@components/*": ["src/components/*"],\n      "@config": ["src/config"],\n      "@config/*": ["src/config/*"],\n      "@hooks": ["src/hooks"],\n      "@hooks/*": ["src/hooks/*"],\n      "@images": ["src/images"],\n      "@images/*": ["src/images/*"],\n      "@layouts": ["src/layouts"],\n      "@layouts/*": ["src/layouts/*"],\n      "@pages": ["src/pages"],\n      "@pages/*": ["src/pages/*"],\n      "@styles": ["src/styles"],\n      "@styles/*": ["src/styles/*"],\n      "@templates": ["src/templates"],\n      "@templates/*": ["src/templates/*"],\n      "@types": ["src/types"],\n      "@types/*": ["src/types/*"]\n    }, // \u6a21\u5757\u540d\u5230\u57fa\u4e8e baseUrl \u7684\u8def\u5f84\u6620\u5c04\u7684\u5217\u8868\n    "rootDirs": [], // \u6839\u6587\u4ef6\u5939\u5217\u8868\uff0c\u5176\u7ec4\u5408\u5185\u5bb9\u8868\u793a\u9879\u76ee\u8fd0\u884c\u65f6\u7684\u7ed3\u6784\u5185\u5bb9\n    "typeRoots": [], // \u5305\u542b\u7c7b\u578b\u58f0\u660e\u7684\u6587\u4ef6\u5217\u8868\n    "types": [], // \u9700\u8981\u5305\u542b\u7684\u7c7b\u578b\u58f0\u660e\u6587\u4ef6\u540d\u5217\u8868\n    "allowSyntheticDefaultImports": true, // \u5141\u8bb8\u4ece\u6ca1\u6709\u8bbe\u7f6e\u9ed8\u8ba4\u5bfc\u51fa\u7684\u6a21\u5757\u4e2d\u9ed8\u8ba4\u5bfc\u5165\u3002\n\n    /* Source Map Options */\n    "sourceMap": true,\n    "sourceRoot": "./", // \u6307\u5b9a\u8c03\u8bd5\u5668\u5e94\u8be5\u627e\u5230 TypeScript \u6587\u4ef6\u800c\u4e0d\u662f\u6e90\u6587\u4ef6\u7684\u4f4d\u7f6e\n    "mapRoot": "./", // \u6307\u5b9a\u8c03\u8bd5\u5668\u5e94\u8be5\u627e\u5230\u6620\u5c04\u6587\u4ef6\u800c\u4e0d\u662f\u751f\u6210\u6587\u4ef6\u7684\u4f4d\u7f6e\n    "inlineSourceMap": true, // \u751f\u6210\u5355\u4e2a source map \u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u5c06 source maps \u751f\u6210\u4e0d\u540c\u7684\u6587\u4ef6\n    "inlineSources": true // \u5c06\u4ee3\u7801\u4e0e source map \u751f\u6210\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"webpack-configuration",children:"Webpack Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i -D typescript ts-loader source-map-loader\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const path = require('node:path')\n\nmodule.exports = {\n  entry: './src/index.tsx',\n  output: {\n    filename: '[name].bundle.js',\n    path: path.resolve(__dirname, 'dist'),\n  },\n  devtool: 'source-map',\n  resolve: {\n    extensions: ['.js', '.json', '.ts', '.tsx'],\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(ts|tsx)$/,\n        loader: 'ts-loader',\n      },\n      { enforce: 'pre', test: /\\.js$/, loader: 'source-map-loader' },\n    ],\n  },\n  externals: {\n    'react': 'React',\n    'react-dom': 'ReactDOM',\n  },\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"eslint-configuration",children:"ESLint Configuration"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/typescript-eslint/typescript-eslint",children:"ESLint for TypeScript"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx eslint --init\n"})}),"\n",(0,r.jsx)(n.h3,{id:"jest-configuration",children:"Jest Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i -D jest typescript ts-jest @types/jest\nnpx ts-jest config:init\nnpx jest\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescript-definitelytyped",children:"TypeScript DefinitelyTyped"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Library (",(0,r.jsx)(n.code,{children:"npm"})," package):\n",(0,r.jsx)(n.code,{children:"@types/*"})," should be ",(0,r.jsx)(n.code,{children:"dependencies"}),",\nconsumers can bring in type definitions used within."]}),"\n",(0,r.jsxs)(n.li,{children:["Application:\n",(0,r.jsx)(n.code,{children:"@types/*"})," should be ",(0,r.jsx)(n.code,{children:"devDependencies"}),",\ntype definitions are just development-time tool."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"typescript-compiler-performance",children:"TypeScript Compiler Performance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Faster tools: ",(0,r.jsx)(n.code,{children:"swc"}),"/",(0,r.jsx)(n.code,{children:"rome"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Multithread: ",(0,r.jsx)(n.code,{children:"ts-loader"})," + ",(0,r.jsx)(n.code,{children:"fork-ts-checker-plugin"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Project references (",(0,r.jsx)(n.code,{children:"tsc -b"})," build mode):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Find ",(0,r.jsx)(n.code,{children:"tsconfig"})," referenced projects."]}),"\n",(0,r.jsx)(n.li,{children:"Detect if they are up-to-date."}),"\n",(0,r.jsx)(n.li,{children:"Build out-of-date projects in correct order."}),"\n",(0,r.jsxs)(n.li,{children:["Build provided ",(0,r.jsx)(n.code,{children:"tsconfig"})," if itself or any dependencies have changed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Skip type checking (sometimes)."}),"\n",(0,r.jsxs)(n.li,{children:["Load ",(0,r.jsx)(n.code,{children:"@types/"})," by need (",(0,r.jsx)(n.code,{children:"include"}),"/",(0,r.jsx)(n.code,{children:"exclude"}),"/",(0,r.jsx)(n.code,{children:"compilerOptions.types"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsc --listFiles"})," \u5217\u51fa\u7f16\u8bd1\u65f6\u5305\u542b\u6587\u4ef6\u5217\u8868,\n",(0,r.jsx)(n.code,{children:"tsc --traceResolution"})," \u5217\u51fa\u7f16\u8bd1\u65f6\u5305\u542b\u6587\u4ef6\u539f\u56e0."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"typescript-project-reference",children:"TypeScript Project Reference"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/project-references.html",children:"Project Reference"}),"\nfor ",(0,r.jsx)(n.code,{children:"TypeScript"})," compile and build ",(0,r.jsx)(n.a,{href:"https://github.com/typescript-cheatsheets/speed",children:"Speed"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"typescript-monorepo-configuration",children:"TypeScript Monorepo Configuration"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://2ality.com/2021/07/simple-monorepos.html",children:"TypeScript Monorepo"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"NPM workspaces."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TypeScript"})," references."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"modules",children:"Modules"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://microsoft.github.io/TypeSearch",children:"Module types search"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Declaration Type"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Namespace"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Namespace"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Class"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Enum"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Interface"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Type Alias"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Function"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Variable"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"}}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"X"})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value"})," means truly output JavaScript."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"globals-definition",children:"Globals Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "include": ["./src/**/*", "globals.d.ts", "index.d.ts"]\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare module '*.css'\n// => import * as foo from './some/file.css';\n\ndeclare module '*.png' {\n  const value: unknown\n  export = value\n}\n// => import logo from './logo.png';\n// <img src={logo as string} />\n\ndeclare module '*.jpg' {\n  const value: unknown\n  export = value\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"globals.d.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// npm i -D @types/react @types/react-dom\ndeclare global {\n  namespace JSX {\n    interface Element extends React.ReactElement<any, any> {}\n    interface ElementClass extends React.Component<any> {\n      render: () => React.ReactNode\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"library-definition",children:"Library Definition"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"lib.d.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "target": "es5",\n    "lib": ["es6", "dom"]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"namespace",children:"Namespace"}),"\n",(0,r.jsx)(n.p,{children:"Namespace aliases:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import polygons = Shapes.Polygons\n\nnamespace Shapes {\n  export namespace Polygons {\n    export class Triangle {}\n    export class Square {}\n  }\n}\n\nconst sq = new polygons.Square() // Same as 'new Shapes.Polygons.Square()'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Library namespace declaration\nwith ",(0,r.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/declaration-merging.html#merging-namespaces-with-classes-functions-and-enums",children:"declaration merging"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export = React\nexport as namespace React\n\ndeclare namespace React {\n  type ElementType<P = any> =\n    | {\n      [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K]\n        ? K\n        : never\n    }[keyof JSX.IntrinsicElements]\n    | ComponentType<P>\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"namespace"})," compiles to ",(0,r.jsx)(n.code,{children:"IIFE"})," pattern:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"namespace Utility {\n  export function log(msg) {\n    console.log(msg)\n  }\n  export function error(msg) {\n    console.log(msg)\n  }\n}\n\n;(function (Utility) {\n  Utility.log = log\n  Utility.log = error\n})(Utility || (Utility = {}))\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"No Namespace",type:"caution",children:[(0,r.jsxs)(n.p,{children:["Unless authoring DefinitelyTyped type definitions for existing package,\n",(0,r.jsx)(n.strong,{children:"do not use namespaces"}),"."]}),(0,r.jsx)(n.p,{children:"Namespaces do not match up to modern JavaScript module semantics,\ntheir automatic member assignments can make code confusing to read."})]}),"\n",(0,r.jsx)(n.h3,{id:"module-resolution",children:"Module Resolution"}),"\n",(0,r.jsx)(n.h4,{id:"classic-module-resolution",children:"Classic Module Resolution"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"import { a } from './module'"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/folder/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/folder/module.d.ts"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"import { a } from 'module'"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/folder/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/folder/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/module.d.ts"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"node-module-resolution",children:"Node Module Resolution"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"const x = require('./module')"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module/package.json"})," + ",(0,r.jsx)(n.code,{children:'{ "types": "lib/mainModule.ts" }'}),"\n= ",(0,r.jsx)(n.code,{children:"/root/src/module/lib/mainModule.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module/index.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module/index.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/module/index.d.ts"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"const x = require('module')"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module/package.json"})," (if it specifies a ",(0,r.jsx)(n.code,{children:"types"})," property)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/@types/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module/index.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module/index.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/src/node_modules/module/index.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module/package.json"})," (if it specifies a ",(0,r.jsx)(n.code,{children:"types"})," property)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/@types/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module/index.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module/index.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/root/node_modules/module/index.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module/package.json"})," (if it specifies a ",(0,r.jsx)(n.code,{children:"types"})," property)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/@types/module.d.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module/index.ts"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module/index.tsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/node_modules/module/index.d.ts"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"basic-types",children:"Basic Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"boolean"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"string"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"array"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tuple"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fixed number"})," of elements whose types are known."]}),"\n",(0,r.jsxs)(n.li,{children:["Variable length ",(0,r.jsx)(n.code,{children:"array"})," types aren\u2019t assignable to ",(0,r.jsx)(n.code,{children:"tuple"})," types."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"enum"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"void"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"any"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"unknown"}),": \u4efb\u4f55\u7c7b\u578b\u90fd\u80fd\u5206\u914d\u7ed9 ",(0,r.jsx)(n.code,{children:"unknown"}),", \u4f46 ",(0,r.jsx)(n.code,{children:"unknown"})," \u4e0d\u80fd\u5206\u914d\u7ed9\u5176\u4ed6\u57fa\u672c\u7c7b\u578b."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"never"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"switch"})," default case guard (exhaustiveness check)."]}),"\n",(0,r.jsxs)(n.li,{children:["Reduce ",(0,r.jsx)(n.code,{children:"never"})," intersection type."]}),"\n",(0,r.jsxs)(n.li,{children:["Ignored in union type:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"mapped conditional type."}),"\n",(0,r.jsx)(n.li,{children:"distributive conditional type."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let num: number\nlet str: string\nlet bool: boolean\nlet boolArray: boolean[]\nlet tuple: [string, number]\nlet power: any\n\n// \u8d4b\u503c\u4efb\u610f\u7c7b\u578b\npower = '123'\npower = 123\n\n// \u5b83\u4e5f\u517c\u5bb9\u4efb\u4f55\u7c7b\u578b\npower = num\nnum = power\n\nfunction log(message: string): void {\n  console.log(message)\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function unknownColor(x: never): never {\n  throw new Error('unknown color')\n}\n\ntype Color = 'red' | 'green' | 'blue'\n\nfunction getColorName(c: Color): string {\n  switch (c) {\n    case 'red':\n      return 'is red'\n    case 'green':\n      return 'is green'\n    default:\n      return unknownColor(c)\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"enum-types",children:"Enum Types"}),"\n",(0,r.jsx)(n.h3,{id:"number-enum",children:"Number Enum"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum CardSuit {\n  Clubs = 1,\n  Diamonds, // 2\n  Hearts, // 3\n  Spades, // 4\n}\n\n// \u7b80\u5355\u7684\u4f7f\u7528\u679a\u4e3e\u7c7b\u578b\nlet Card = CardSuit.Clubs\n\n// \u7c7b\u578b\u5b89\u5168\nCard = 'not a member of card suit' // Error: string \u4e0d\u80fd\u8d4b\u503c\u7ed9 `CardSuit` \u7c7b\u578b\n"})}),"\n",(0,r.jsx)(n.h3,{id:"string-enum",children:"String Enum"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum EvidenceTypeEnum {\n  UNKNOWN = '',\n  PASSPORT_VISA = 'passport_visa',\n  PASSPORT = 'passport',\n  SIGHTED_STUDENT_CARD = 'sighted_tertiary_edu_id',\n  SIGHTED_KEYPASS_CARD = 'sighted_keypass_card',\n  SIGHTED_PROOF_OF_AGE_CARD = 'sighted_proof_of_age_card',\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enum-parameters",children:"Enum Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum Weekday {\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n  Sunday,\n}\n\nnamespace Weekday {\n  export function isBusinessDay(day: Weekday) {\n    switch (day) {\n      case Weekday.Saturday:\n      case Weekday.Sunday:\n        return false\n      default:\n        return true\n    }\n  }\n}\n\nconst mon = Weekday.Monday\nconst sun = Weekday.Sunday\n\nconsole.log(Weekday.isBusinessDay(mon)) // true\nconsole.log(Weekday.isBusinessDay(sun))\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enum-flags",children:"Enum Flags"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum AnimalFlags {\n  None = 0,\n  HasClaws = 1 << 0,\n  CanFly = 1 << 1,\n  EatsFish = 1 << 2,\n  Endangered = 1 << 3,\n\n  EndangeredFlyingClawedFishEating = HasClaws | CanFly | EatsFish | Endangered,\n}\n\ninterface Animal {\n  flags: AnimalFlags\n  [key: string]: any\n}\n\nfunction printAnimalAbilities(animal: Animal) {\n  const animalFlags = animal.flags\n  if (animalFlags & AnimalFlags.HasClaws)\n    console.log('animal has claws')\n\n  if (animalFlags & AnimalFlags.CanFly)\n    console.log('animal can fly')\n\n  if (animalFlags === AnimalFlags.None)\n    console.log('nothing')\n}\n\nconst animal = { flags: AnimalFlags.None }\nprintAnimalAbilities(animal) // nothing\nanimal.flags |= AnimalFlags.HasClaws\nprintAnimalAbilities(animal) // animal has claws\nanimal.flags &= ~AnimalFlags.HasClaws\nprintAnimalAbilities(animal) // nothing\nanimal.flags |= AnimalFlags.HasClaws | AnimalFlags.CanFly\nprintAnimalAbilities(animal) // animal has claws, animal can fly\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enum-index-signature",children:"Enum Index Signature"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"keyof typeof EnumType"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum ColorPalette {\n  red = '#f03e3e',\n  pink = '#d7336c',\n  grape = '#ae3ec9',\n  violet = '#7048e8',\n  indigo = '#4263eb',\n  blue = '#1890ff',\n  cyan = '#1098ad',\n  teal = '#0ca678',\n  green = '#37b24d',\n  lime = '#74b816',\n  yellow = '#f59f00',\n  orange = '#f76707',\n}\n\nfunction hashString(name = '') {\n  return name.length\n}\n\nfunction getColorByName(name = ''): string {\n  const palette = Object.keys(ColorPalette)\n  const colorIdx = hashString(name) % palette.length\n  const paletteIdx = palette[colorIdx] as keyof typeof ColorPalette\n  return ColorPalette[paletteIdx]\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enum-internals",children:"Enum Internals"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"const"})," enums don\u2019t have representation at runtime,\nits member values are used directly."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Source code:\nconst enum NoYes {\n  No,\n  Yes,\n}\n\nfunction toGerman(value: NoYes) {\n  switch (value) {\n    case NoYes.No:\n      return 'Neither'\n    case NoYes.Yes:\n      return 'Ja'\n  }\n}\n\n// Compiles to:\nfunction toGerman(value) {\n  switch (value) {\n    case 'No' /* No */:\n      return 'Neither'\n    case 'Yes' /* Yes */:\n      return 'Ja'\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Non-const enums are objects:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Source code:\nenum Tristate {\n  False,\n  True,\n  Unknown,\n}\n\n// Compiles to:\nlet Tristate\n;(function (Tristate) {\n  Tristate[(Tristate.False = 0)] = 'False'\n  Tristate[(Tristate.True = 1)] = 'True'\n  Tristate[(Tristate.Unknown = 2)] = 'Unknown'\n})(Tristate || (Tristate = {}))\n\nconsole.log(Tristate[0]) // 'False'\nconsole.log(Tristate.False) // 0\nconsole.log(Tristate[Tristate.False]) // 'False' because `Tristate.False == 0`\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum NoYes {\n  No = 'NO!',\n  Yes = 'YES!',\n}\n\nlet NoYes\n;(function (NoYes) {\n  NoYes.No = 'NO!'\n  NoYes.Yes = 'YES!'\n})(NoYes || (NoYes = {}))\n"})}),"\n",(0,r.jsx)(n.h2,{id:"function",children:"Function"}),"\n",(0,r.jsx)(n.h3,{id:"function-interface",children:"Function Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface ReturnString {\n  (): string\n}\n\ndeclare const foo: ReturnString\n\nconst bar = foo() // bar \u88ab\u63a8\u65ad\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Complex {\n  (foo: string, bar?: number, ...others: boolean[]): number\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Overloaded {\n  (foo: string): string\n  (foo: number): number\n}\n\n// \u5b9e\u73b0\u63a5\u53e3\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\nfunction stringOrNumber(foo: number): number\nfunction stringOrNumber(foo: string): string\nfunction stringOrNumber(foo: any): any {\n  if (typeof foo === 'number')\n    return foo * foo\n  else if (typeof foo === 'string')\n    return `hello ${foo}`\n}\n\nconst overloaded: Overloaded = stringOrNumber\n\n// \u4f7f\u7528\nconst str = overloaded('') // str \u88ab\u63a8\u65ad\u4e3a 'string'\nconst num = overloaded(123) // num \u88ab\u63a8\u65ad\u4e3a 'number'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["WangCai ",(0,r.jsx)(n.code,{children:"extends"})," Dog ",(0,r.jsx)(n.code,{children:"extends"})," Animal.\nAnimal => WangCai \u662f Dog => Dog \u7684\u5b50\u7c7b\u578b:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u517c\u5bb9\u662f\u53cd\u5411\u7684, \u79f0\u4e4b\u4e3a\u9006\u53d8."}),"\n",(0,r.jsx)(n.li,{children:"\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u517c\u5bb9\u662f\u6b63\u5411\u7684, \u79f0\u4e4b\u4e3a\u534f\u53d8."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"arrow-function",children:"Arrow Function"}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u4e00\u4e2a\u4ee5 number \u7c7b\u578b\u4e3a\u53c2\u6570\uff0c\u4ee5 string \u7c7b\u578b\u4e3a\u8fd4\u56de\u503c\u7684\u51fd\u6570\u4e2d:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const simple: (foo: number) => string = foo => foo.toString()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"function-overload",children:"Function Overload"}),"\n",(0,r.jsx)(n.p,{children:"\u51fd\u6570\u7b7e\u540d\u7684\u7c7b\u578b\u91cd\u8f7d:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u591a\u4e2a\u91cd\u8f7d\u7b7e\u540d\u548c\u4e00\u4e2a\u5b9e\u73b0\u7b7e\u540d."}),"\n",(0,r.jsxs)(n.li,{children:["\u5b9a\u4e49\u4e86\u91cd\u8f7d\u7b7e\u540d, \u5219\u5b9e\u73b0\u7b7e\u540d",(0,r.jsx)(n.strong,{children:"\u5bf9\u5916\u4e0d\u53ef\u89c1"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"\u5b9e\u73b0\u7b7e\u540d\u5fc5\u987b\u517c\u5bb9\u91cd\u8f7d\u7b7e\u540d."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// \u91cd\u8f7d\nfunction padding(all: number)\nfunction padding(topAndBottom: number, leftAndRight: number)\nfunction padding(top: number, right: number, bottom: number, left: number)\nfunction padding(a: number, b?: number, c?: number, d?: number) {\n  if (b === undefined && c === undefined && d === undefined) {\n    b = c = d = a\n  } else if (c === undefined && d === undefined) {\n    c = a\n    d = b\n  }\n  return {\n    top: a,\n    right: b,\n    bottom: c,\n    left: d,\n  }\n}\n\npadding(1) // Okay: all\npadding(1, 1) // Okay: topAndBottom, leftAndRight\npadding(1, 1, 1, 1) // Okay: top, right, bottom, left\npadding(1, 1, 1) // Error: Not a part of the available overloads\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Function Overload",type:"tip",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"TypeScript"})," \u4e2d\u7684\u51fd\u6570\u91cd\u8f7d\u6ca1\u6709\u4efb\u4f55\u8fd0\u884c\u65f6\u5f00\u9500.\n\u5b83\u53ea\u5141\u8bb8\u4f60\u8bb0\u5f55\u5e0c\u671b\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f,\n\u5e76\u4e14\u7f16\u8bd1\u5668\u4f1a\u68c0\u67e5\u5176\u4f59\u4ee3\u7801."]})}),"\n",(0,r.jsx)(n.h3,{id:"rest-parameters",children:"Rest Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Arr = readonly unknown[]\nfunction partialCall<T extends Arr, U extends Arr, R>(\n  f: (...args: [...T, ...U]) => R,\n  ...headArgs: T\n) {\n  return (...tailArgs: U) => f(...headArgs, ...tailArgs)\n}\n\nfunction foo(x: string, y: number, z: boolean) {}\nconst f1 = partialCall(foo, 100)\nconst f2 = partialCall(foo, 'hello', 100, true, 'oops')\nconst f3 = partialCall(foo, 'hello')\n\nf3(123, true)\nf3()\nf3(123, 'hello')\n"})}),"\n",(0,r.jsx)(n.h3,{id:"function-types-design",children:"Function Types Design"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Input types tend to be ",(0,r.jsx)(n.strong,{children:"broader"})," than output types."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional"})," properties and ",(0,r.jsx)(n.strong,{children:"union"})," types are more common in parameter types."]}),"\n",(0,r.jsx)(n.li,{children:"To reuse types between parameters and return types,\nintroduce a canonical form (for return types) and a looser form (for parameters)."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface LngLat {\n  lng: number\n  lat: number\n}\n\ntype LngLatLike = LngLat | { lon: number, lat: number } | [number, number]\n\ninterface Camera {\n  center: LngLat\n  zoom: number\n  bearing: number\n  pitch: number\n}\n\ninterface CameraOptions extends Omit<Partial<Camera>, 'center'> {\n  center?: LngLatLike\n}\n\nfunction createCamera(options: CameraOptions): Camera {\n  return CameraFactory.create(options)\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Name {\n  first: string\n  second: string\n}\n\nlet name: Name\nname = {\n  first: 'John',\n  second: 'Doe',\n}\n\nname = {\n  // Error: 'Second is missing'\n  first: 'John',\n}\n\nname = {\n  // Error: 'Second is the wrong type'\n  first: 'John',\n  second: 1337,\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interface-function",children:"Interface Function"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use a method function for class instances (",(0,r.jsx)(n.code,{children:"this"})," binding to function)."]}),"\n",(0,r.jsx)(n.li,{children:"Use a property function otherwise."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface HasBothFunctionTypes {\n  method: () => string\n  property: () => string\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interface-implementation",children:"Interface Implementation"}),"\n",(0,r.jsx)(n.p,{children:"Implementing interface is purely safety check,\ndoes not copy any interface members onto class definition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Crazy {\n  new (): {\n    hello: number\n  }\n}\n\nclass CrazyClass implements Crazy {\n  constructor() {\n    return { hello: 123 }\n  }\n}\n\n// Because\nconst crazy = new CrazyClass() // crazy would be { hello:123 }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interface-extension",children:"Interface Extension"}),"\n",(0,r.jsx)(n.h4,{id:"overridden-properties",children:"Overridden Properties"}),"\n",(0,r.jsx)(n.p,{children:"Overridden property must be assignable to its base property\n(ensure derived interface assignable to base interface):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface WithNullableName {\n  name: string | null\n}\n\ninterface WithNonNullableName extends WithNullableName {\n  name: string\n}\n\ninterface WithNumericName extends WithNullableName {\n  name: number | string\n}\n// Error: Interface 'WithNumericName' incorrectly\n// extends interface 'WithNullableName'.\n//   Types of property 'name' are incompatible.\n//     Type 'string | number' is not assignable to type 'string | null'.\n//       Type 'number' is not assignable to type 'string'.\n"})}),"\n",(0,r.jsx)(n.h4,{id:"interface-merging",children:"Interface Merging"}),"\n",(0,r.jsxs)(n.p,{children:["Interface merging isn\u2019t used often in day-to-day ",(0,r.jsx)(n.code,{children:"TypeScript"})," development,\nbut useful for augmenting interfaces from\nexternal 3rd-party packages (e.g ",(0,r.jsx)(n.code,{children:"Cypress"}),") or built-in global interfaces (e.g ",(0,r.jsx)(n.code,{children:"Window"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Lib a.d.ts\ninterface Point {\n  x: number\n  y: number\n}\ndeclare const myPoint: Point\n\n// Lib b.d.ts\ninterface Point {\n  z: number\n}\n\n// Your code\nconst z = myPoint.z // Allowed!\n"})}),"\n",(0,r.jsx)(n.p,{children:"Extend 3rd-party module interface:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare module '3rd-party-module' {\n  export interface Interface {\n    foo: { title: string }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interface-and-type-alias",children:"Interface and Type Alias"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Type aliases may not participate in declaration merging, but interfaces can."}),"\n",(0,r.jsx)(n.li,{children:"Interfaces may only be used to declare the shapes of object, not re-name primitives."}),"\n",(0,r.jsx)(n.li,{children:"The key distinction is that a type cannot be re-opened to add new properties,\nan interface which is always extendable."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Window {\n  title: string\n}\n\ninterface Window {\n  ts: TypeScriptAPI\n}\n\nconst src = 'const a = \"Hello World\"'\nwindow.ts.transpileModule(src, {})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"type-modifiers",children:"Type Modifiers"}),"\n",(0,r.jsx)(n.h3,{id:"member-access-modifiers",children:"Member Access Modifiers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"public"}),", ",(0,r.jsx)(n.code,{children:"protected"})," and ",(0,r.jsx)(n.code,{children:"private"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Singleton {\n  private static instance: Singleton\n  private constructor() {\n    // ..\n  }\n\n  public static getInstance() {\n    if (!Singleton.instance)\n      Singleton.instance = new Singleton()\n\n    return Singleton.instance\n  }\n\n  someMethod() {}\n}\n\nconst someThing = new Singleton() // Error: constructor of 'singleton' is private\n\nconst instance = Singleton.getInstance() // do some thing with the instance\n"})}),"\n",(0,r.jsx)(n.h3,{id:"readonly-type-modifier",children:"Readonly Type Modifier"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Foo {\n  readonly bar: number\n  readonly bas: number\n}\n\n// \u521d\u59cb\u5316\nconst foo: Foo = { bar: 123, bas: 456 }\n\n// \u4e0d\u80fd\u88ab\u6539\u53d8\nfoo.bar = 456 // Error: foo.bar \u4e3a\u4ec5\u8bfb\u5c5e\u6027\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," indexable signature:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Foo = Readonly<Record<number, number>>\n\n// \u4f7f\u7528\n\nconst foo: Foo = { 0: 123, 2: 345 }\nconsole.log(foo[0]) // ok (\u8bfb\u53d6)\nfoo[0] = 456 // Error: \u5c5e\u6027\u53ea\u8bfb\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," class properties:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  readonly bar = 1 // OK\n  readonly baz: string\n  constructor() {\n    this.baz = 'hello' // OK\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," generic type:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Foo {\n  bar: number\n  bas: number\n}\n\ntype FooReadonly = Readonly<Foo>\n\nconst foo: Foo = { bar: 123, bas: 456 }\nconst fooReadonly: FooReadonly = { bar: 123, bas: 456 }\n\nfoo.bar = 456 // ok\nfooReadonly.bar = 456 // Error: bar \u5c5e\u6027\u53ea\u8bfb\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.code,{children:"React"})," props:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Something extends React.Component<{ foo: number }, { baz: number }> {\n  someMethod() {\n    this.props.foo = 123 // Error: props \u662f\u4e0d\u53ef\u53d8\u7684\n    this.state.baz = 456 // Error: \u4f60\u5e94\u8be5\u4f7f\u7528 this.setState()\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," is shallow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const dates: readonly Date[] = [new Date()]\ndates.push(new Date()) // Error\ndates[0].setFullYear(2037) // OK\n"})}),"\n",(0,r.jsx)(n.h2,{id:"call-signature",children:"Call Signature"}),"\n",(0,r.jsx)(n.h3,{id:"call-signature-type",children:"Call Signature Type"}),"\n",(0,r.jsxs)(n.p,{children:["Call signature looks similar to a function type,\nbut with a ",(0,r.jsx)(n.code,{children:":"})," colon instead of an ",(0,r.jsx)(n.code,{children:"=>"})," arrow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type FunctionAlias = (input: string) => number\n\ninterface CallSignature {\n  (input: string): number\n}\n\n// Type: (input: string) => number\nconst typedFunctionAlias: FunctionAlias = input => input.length // Ok\n\n// Type: (input: string) => number\nconst typedCallSignature: CallSignature = input => input.length // Ok\n"})}),"\n",(0,r.jsx)(n.h3,{id:"call-signature-property",children:"Call Signature Property"}),"\n",(0,r.jsxs)(n.p,{children:["Call signatures can be used to describe functions\nthat have some ",(0,r.jsx)(n.strong,{children:"additional user-defined property"})," on them:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface FunctionWithCount {\n  count: number\n  (): void\n}\n\nlet hasCallCount: FunctionWithCount\n\nfunction keepsTrackOfCalls() {\n  keepsTrackOfCalls.count += 1\n  console.log(`I've been called ${keepsTrackOfCalls.count} times!`)\n}\n\nkeepsTrackOfCalls.count = 0\n\nhasCallCount = keepsTrackOfCalls // Ok\n\nfunction doesNotHaveCount() {\n  console.log('No idea!')\n}\n\nhasCallCount = doesNotHaveCount\n// Error: Property 'count' is missing in type\n// '() => void' but required in type 'FunctionWithCalls'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"index-signature",children:"Index Signature"}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:"JavaScript"}),",\nimplicitly calls ",(0,r.jsx)(n.code,{children:"toString"})," on any object index signature:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const obj = {\n  toString() {\n    console.log('toString called')\n    return 'Hello'\n  },\n}\n\nconst foo: any = {}\nfoo[obj] = 'World' // toString called\nconsole.log(foo[obj]) // toString called, World\nconsole.log(foo.Hello) // World\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"TypeScript"})," will give an error to prevent beginners from doing such things,\nthrow ",(0,r.jsx)(n.strong,{children:"index signature error"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Element implicitly has an 'any' type\nbecause expression of type 'string' can't be used to index type XXX.\n"})}),"\n",(0,r.jsx)(n.p,{children:"Can fixed with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Record<string, T>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"K extends keyof T"}),": explicit Constrained key type."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// propertyName should be extends keyof T\nfunction getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n  return o[propertyName] // o[propertyName] is of type T[K]\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"index-signature-type-check",children:"Index Signature Type Check"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const x: { foo: number, [x: string]: any }\nx = { foo: 1, baz: 2 } // ok, 'baz' \u5c5e\u6027\u5339\u914d\u4e8e\u7d22\u5f15\u7b7e\u540d\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5f53\u4f60\u58f0\u660e\u4e00\u4e2a\u7d22\u5f15\u7b7e\u540d\u65f6\uff0c\u6240\u6709\u660e\u786e\u7684\u6210\u5458\u90fd\u5fc5\u987b\u7b26\u5408\u7d22\u5f15\u7b7e\u540d:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// ok\ninterface Foo {\n  [key: string]: number\n  x: number\n  y: number\n}\n\n// Error\ninterface Bar {\n  [key: string]: number\n  x: number\n  y: string // Error: y \u5c5e\u6027\u5fc5\u987b\u4e3a number \u7c7b\u578b\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4f7f\u7528\u4ea4\u53c9\u7c7b\u578b\u53ef\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface FieldState {\n  value: string\n}\n\ntype FormState = { isValid: boolean } & Record<string, FieldState>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"select-index-types",children:"Select Index Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Index = 'a' | 'b' | 'c'\ntype FromIndex = { [k in Index]?: number }\n\nconst good: FromIndex = { b: 1, c: 2 }\n\n// Error:\n// `{ b: 1, c: 2, d: 3 }` \u4e0d\u80fd\u5206\u914d\u7ed9 'FromIndex'\n// \u5bf9\u8c61\u5b57\u9762\u91cf\u53ea\u80fd\u6307\u5b9a\u5df2\u77e5\u7c7b\u578b\uff0c'd' \u4e0d\u5b58\u5728 'FromIndex' \u7c7b\u578b\u4e0a\nconst bad: FromIndex = { b: 1, c: 2, d: 3 }\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type FromSomeIndex<K extends string> = { [key in K]: number }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"symbol-index-types",children:"Symbol Index Types"}),"\n",(0,r.jsxs)(n.p,{children:["Since ",(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/pull/44512",children:"typescript v4.4.0"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type SymbolMap<T> = Record<symbol, T>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface PropertyMap {\n  [key: string]: string\n  [key: number]: string\n  [key: symbol]: string\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Colors = Record<symbol, number>\n\nconst red = Symbol('red')\nconst green = Symbol('green')\nconst blue = Symbol('blue')\n\nconst colors: Colors = {}\n\ncolors[red] = 255 // Assignment of a number is allowed\nconst redVal = colors[red] // 'redVal' has the type 'number'\n\ncolors[blue] = 'da ba dee' // Error: Type 'string' is not assignable to type 'number'.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"template-literal-index-types",children:"Template Literal Index Types"}),"\n",(0,r.jsxs)(n.p,{children:["Since ",(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/pull/44512",children:"typescript v4.4.0"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type DataProps = Record<`data-${string}`, string>\n\ninterface OptionsWithDataProps extends Options {\n  // Permit any property starting with 'data-'.\n  [optName: `data-${string}`]: unknown\n}\n\nconst b: OptionsWithDataProps = {\n  'width': 100,\n  'height': 100,\n  'data-blah': true, // Works!\n  'unknown-property': true, // Error! 'unknown-property' wasn't declared in 'OptionsWithDataProps'.\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Thing<T> = Record<'a' | `foo${T}` | symbol, string>\n\ntype StringThing = Thing<string>\n// => { [a: string, [x: `foo${string}`]: string, [x: symbol]: string }\ntype BarThing = Thing<'bar'>\n// => { [a: string, foobar: string, [x: symbol]: string }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"indexed-access-types",children:"Indexed Access Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const MyArray = [\n  { name: 'Alice', age: 15 },\n  { name: 'Bob', age: 23 },\n  { name: 'Eve', age: 38 },\n]\n\ntype Person = (typeof MyArray)[number]\n// type Person = {\n//   name: string;\n//   age: number;\n// }\n\ntype Age = (typeof MyArray)[number]['age']\n// type Age = number\n\ntype Age2 = Person['age']\n// type Age2 = number\n\ninterface UserRoleConfig {\n  visitor: ['up']\n  user: ['view', 'create', 'update']\n  admin: ['view', 'create', 'update', 'delete']\n}\n\ntype Role = UserRoleConfig[keyof UserRoleConfig][number]\n// type Role = 'up' | 'view' | 'create' | 'update' | \"delete\"\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"{ [K in keyof T]: indexedType }[keyof T]"})," \u8fd4\u56de\u952e\u540d (\u952e\u540d\u7ec4\u6210\u7684\u8054\u5408\u7c7b\u578b):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type PickByValueType<T, ValueType> = Pick<\n  T,\n  { [K in keyof T]-?: T[K] extends ValueType ? K : never }[keyof T]\n>\n\ntype OmitByValueType<T, ValueType> = Pick<\n  T,\n  { [K in keyof T]-?: T[K] extends ValueType ? never : K }[keyof T]\n>\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: object extends Pick<T, K> ? never : K\n}[keyof T]\n\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: object extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype FunctionTypeKeys<T extends object> = {\n  [K in keyof T]-?: T[K] extends Function ? K : never\n}[keyof T]\n\ntype Filter<T extends object, ValueType> = {\n  [K in keyof T as ValueType extends T[K] ? K : never]: T[K]\n} // Filter<{name: string; id: number;}, string> => {name: string;}\n\ntype FuncName<T> = {\n  [K in keyof T]: T[K] extends Function ? K : never\n}[keyof T]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"literal-types",children:"Literal Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type CardinalDirection = 'North' | 'East' | 'South' | 'West'\n\nfunction move(distance: number, direction: CardinalDirection) {\n  // ...\n}\n\nmove(1, 'North') // ok\nmove(1, 'Nurth') // Error\n\ntype OneToFive = 1 | 2 | 3 | 4 | 5\ntype Bools = true | false\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Options {\n  width: number\n}\n\nfunction configure(x: Options | 'auto') {\n  // ...\n}\n\nconfigure({ width: 100 })\nconfigure('auto')\nconfigure('automatic')\n// ERROR:\n// Argument of type '\"automatic\"' is not assignable\n// to parameter of type 'Options | \"auto\"'.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"template-literal-types",children:"Template Literal Types"}),"\n",(0,r.jsx)(n.h3,{id:"basic-template-literal-types",children:"Basic Template Literal Types"}),"\n",(0,r.jsx)(n.p,{children:"Based on literal types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'type Brightness = \'dark\' | \'light\'\ntype Color = \'blue\' | \'red\'\ntype BrightnessAndColor = `${Brightness}-${Color}`\n// Equivalent to: "dark-red" | "light-red" | "dark-blue" | "light-blue"\n\nconst colorOk: BrightnessAndColor = \'dark-blue\' // Ok\nconst colorWrongStart: BrightnessAndColor = \'medium-blue\'\n//  ~~~~~~~~~~~~~~~\n// Error: Type \'"medium-blue"\' is not assignable to type\n// \'"dark-blue" | "dark-red" | "light-blue" | "light-red"\'.\nconst colorWrongEnd: BrightnessAndColor = \'light-green\'\n//  ~~~~~~~~~~~~~\n// Error: Type \'"light-green"\' is not assignable to type\n// \'"dark-blue" | "dark-red" | "light-blue" | "light-red"\'.\n'})}),"\n",(0,r.jsx)(n.h3,{id:"intrinsic-template-literal-types",children:"Intrinsic Template Literal Types"}),"\n",(0,r.jsx)(n.p,{children:"4 intrinsic string manipulation types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Uppercase<StringType>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Lowercase<StringType>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Capitalize<StringType>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Uncapitalize<StringType>"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-template-literal-types",children:"Advanced Template Literal Types"}),"\n",(0,r.jsx)(n.p,{children:"Combined with other types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Greeting = `Hello${string}`\nconst matches: Greeting = 'Hello, world!' // Ok\nconst outOfOrder: Greeting = 'World! Hello!'\n//  ~~~~~~~~~~\n// Error: Type '\"World! Hello!\"' is not assignable to type '`Hello ${string}`'.\nconst missingAltogether: Greeting = 'hi'\n//  ~~~~~~~~~~~~~~~~~\n// Error: Type '\"hi\"' is not assignable to type '`Hello ${string}`'.\n\ntype ExtolNumber = `much ${number} wow`\nfunction extol(extolArg: ExtolNumber) {\n  /* ... */\n}\nextol('much 0 wow') // Ok\nextol('much -7 wow') // Ok\nextol('much 9.001 wow') // Ok\nextol('much false wow')\n//    ~~~~~~~~~~~~~~~~\n// Error: Argument of type '\"much false wow\"' is not\n// assignable to parameter of type '`much ${number} wow`'.\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface PropEventSource<Type> {\n  on: <Key extends string & keyof Type>(\n    eventName: `${Key}Changed`,\n    callback: (newValue: Type[Key]) => void\n  ) => void\n}\n\n// Create a \"watched object\" with an 'on' method\n// so that you can watch for changes to properties.\ndeclare function makeWatchedObject<Type>(\n  obj: Type\n): Type & PropEventSource<Type>\n\nconst person = makeWatchedObject({\n  firstName: 'Yi',\n  lastName: 'Long',\n  age: 26,\n})\n\nperson.on('firstNameChanged', (newName) => {\n  // (parameter) newName: string\n  console.log(`new name is ${newName.toUpperCase()}`)\n})\n\nperson.on('ageChanged', (newAge) => {\n  // (parameter) newAge: number\n  if (newAge < 0)\n    console.warn('warning! negative age')\n})\n\n// It's typo-resistent\nperson.on('firstName', () => {})\n// Argument of type '\"firstName\"' is not assignable to\n// parameter of type '\"firstNameChanged\" | \"lastNameChanged\" | \"ageChanged\"'.\n\nperson.on('fstNameChanged', () => {})\n// Argument of type '\"fstNameChanged\"' is not assignable to\n// parameter of type '\"firstNameChanged\" | \"lastNameChanged\" | \"ageChanged\"'.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mapped-template-literal-types",children:"Mapped Template Literal Types"}),"\n",(0,r.jsx)(n.h4,{id:"template-literal-keys",children:"Template Literal Keys"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type DataKey = 'location' | 'name' | 'year'\n\ntype ExistenceChecks = {\n  [K in `check${Capitalize<DataKey>}`]: () => boolean\n}\n// Equivalent to:\n// {\n//   checkLocation: () => boolean;\n//   checkName: () => boolean;\n//   checkYear: () => boolean;\n// }\n\nfunction checkExistence(checks: ExistenceChecks) {\n  checks.checkLocation() // Type: boolean\n  checks.checkName() // Type: boolean\n  checks.checkWrong()\n  //     ~~~~~~~~~~\n  // Error: Property 'checkWrong' does not exist on type 'ExistenceChecks'.\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"remapping-mapped-type-keys",children:"Remapping Mapped Type Keys"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const config = {\n  location: 'unknown',\n  name: 'anonymous',\n  year: 0,\n}\n\ntype LazyValues = {\n  [K in keyof typeof config as `${string & K}Lazy`]: () => Promise<\n    (typeof config)[K]\n  >\n}\n// Equivalent to:\n// {\n//   locationLazy: Promise<string>;\n//   nameLazy: Promise<string>;\n//   yearLazy: Promise<number>;\n// }\n\nasync function withLazyValues(configGetter: LazyValues) {\n  await configGetter.locationLazy // Resultant type: string\n  await configGetter.missingLazy()\n  //                 ~~~~~~~~~~~\n  // Error: Property 'missingLazy' does not exist on type 'LazyValues'.\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"union-types",children:"Union Types"}),"\n",(0,r.jsx)(n.h3,{id:"basic-union",children:"Basic Union"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function formatCommandLine(command: string[] | string) {\n  let line = ''\n\n  if (typeof command === 'string')\n    line = command.trim()\n  else\n    line = command.join(' ').trim()\n\n  // Do stuff with line: string\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"discriminated-union",children:"Discriminated Union"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Square {\n  kind: 'square'\n  size: number\n}\n\ninterface Rectangle {\n  kind: 'rectangle'\n  width: number\n  height: number\n}\n\ninterface Circle {\n  kind: 'circle'\n  radius: number\n}\n\ntype Shape = Square | Rectangle | Circle\n\nfunction area(s: Shape) {\n  switch (s.kind) {\n    case 'square':\n      return s.size * s.size\n    case 'rectangle':\n      return s.width * s.height\n    case 'circle':\n      return Math.PI * s.radius ** 2\n    default: {\n      const _exhaustiveCheck: never = s\n      return _exhaustiveCheck\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"IteratorResult"})," discriminated union:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface IteratorYieldResult<TYield> {\n  done?: false // boolean literal type\n  value: TYield\n}\n\ninterface IteratorReturnResult<TReturn> {\n  done: true // boolean literal type\n  value: TReturn\n}\n\ntype IteratorResult<T, TReturn = any> =\n  | IteratorYieldResult<T>\n  | IteratorReturnResult<TReturn>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Rust-style discriminated union:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Option<T> = Some<T> | None\ninterface Some<T> {\n  kind: 'Some'\n  value: T\n}\ninterface None {\n  kind: 'None'\n}\n\ntype Result<TResult, TError> = Success<TResult> | Failure<TError>\ninterface Success<T> {\n  kind: 'Success'\n  value: T\n}\ninterface Failure<T> {\n  kind: 'Failure'\n  error: T\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Prefer ",(0,r.jsx)(n.code,{children:"Unions of Interfaces"})," to ",(0,r.jsx)(n.code,{children:"Interfaces of Unions"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// BAD design.\ninterface BadLayer {\n  layout: FillLayout | LineLayout | PointLayout\n  paint: FillPaint | LinePaint | PointPaint\n}\n\n// GOOD design.\ninterface FillLayer {\n  type: 'fill'\n  layout: FillLayout\n  paint: FillPaint\n}\n\ninterface LineLayer {\n  type: 'line'\n  layout: LineLayout\n  paint: LinePaint\n}\n\ninterface PointLayer {\n  type: 'point'\n  layout: PointLayout\n  paint: PointPaint\n}\n\ntype GoodLayer = FillLayer | LineLayer | PointLayer\n"})}),"\n",(0,r.jsx)(n.h2,{id:"intersection-types",children:"Intersection Types"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"intersection"})," type \u5177\u6709\u6240\u6709\u7c7b\u578b\u7684\u529f\u80fd:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function extend<T, U>(first: T, second: U): T & U {\n  const result = {} as T & U\n  for (const id in first) {\n    ;(result as T)[id] = first[id]\n  }\n  for (const id in second) {\n    if (!Object.prototype.hasOwnProperty.call(result, id)) {\n      ;(result as U)[id] = second[id]\n    }\n  }\n\n  return result\n}\n\nconst x = extend({ a: 'hello' }, { b: 42 })\n\n// \u73b0\u5728 x \u62e5\u6709\u4e86 a \u5c5e\u6027\u4e0e b \u5c5e\u6027\nconst a = x.a\nconst b = x.b\n"})}),"\n",(0,r.jsx)(n.h2,{id:"generic-types",children:"Generic Types"}),"\n",(0,r.jsx)(n.h3,{id:"generic-function",children:"Generic Function"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function reverse<T>(items: T[]): T[] {\n  const toReturn = []\n  for (let i = items.length - 1; i >= 0; i--)\n    toReturn.push(items[i])\n\n  return toReturn\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generic-parameters",children:"Generic Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Event =\n  | {\n    type: 'LogIn'\n    payload: {\n      userId: string\n    }\n  }\n  | {\n    type: 'SignOut'\n  }\n\nfunction sendEvent<Type extends Event['type']>(\n  ...args: Extract<Event, { type: Type }> extends { payload: infer Payload }\n    ? [type: Type, payload: Payload]\n    : [type: Type]\n) {\n  // Send event ...\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generic-class",children:"Generic Class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// \u521b\u5efa\u4e00\u4e2a\u6cdb\u578b\u7c7b\nclass Queue<T> {\n  private data = []\n  push = (item: T) => this.data.push(item)\n  pop = (): T => this.data.shift()\n}\n\n// \u7b80\u5355\u7684\u4f7f\u7528\nconst queue = new Queue<number>()\nqueue.push(0)\nqueue.push('1') // Error\uff1a\u4e0d\u80fd\u63a8\u5165\u4e00\u4e2a `string`\uff0c\u53ea\u6709 number \u7c7b\u578b\u88ab\u5141\u8bb8\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Listener<T> {\n  (event: T): any\n}\n\ninterface Disposable {\n  dispose: () => any\n}\n\nclass TypedEvent<T> {\n  private listeners: Listener<T>[] = []\n  private listenersOnce: Listener<T>[] = []\n\n  public on = (listener: Listener<T>): Disposable => {\n    this.listeners.push(listener)\n\n    return {\n      dispose: () => this.off(listener),\n    }\n  }\n\n  public once = (listener: Listener<T>): void => {\n    this.listenersOnce.push(listener)\n  }\n\n  public off = (listener: Listener<T>) => {\n    const callbackIndex = this.listeners.indexOf(listener)\n    if (callbackIndex > -1)\n      this.listeners.splice(callbackIndex, 1)\n  }\n\n  public emit = (event: T) => {\n    this.listeners.forEach(listener => listener(event))\n\n    this.listenersOnce.forEach(listener => listener(event))\n    this.listenersOnce = []\n  }\n\n  public pipe = (te: TypedEvent<T>): Disposable => {\n    return this.on(e => te.emit(e))\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generic-type-alias",children:"Generic Type Alias"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type CreatesValue<Input, Output> = (input: Input) => Output\n\n// Type: (input: string) => number\nlet creator: CreatesValue<string, number>\n\ncreator = text => text.length // Ok\n\ncreator = text => text.toUpperCase()\n//                ~~~~~~~~~~~~~~~~~~\n// Error: Type 'string' is not assignable to type 'number'.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generic-discriminated-union",children:"Generic Discriminated Union"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Result<Data> = FailureResult | SuccessfulResult<Data>\n\ninterface FailureResult {\n  error: Error\n  succeeded: false\n}\n\ninterface SuccessfulResult<Data> {\n  data: Data\n  succeeded: true\n}\n\nfunction handleResult(result: Result<string>) {\n  if (result.succeeded) {\n    // Type of result: SuccessfulResult<string>\n    console.log(`We did it! ${result.data}`)\n  } else {\n    // Type of result: FailureResult\n    console.error(`Em... ${result.error}`)\n  }\n\n  console.log(result.data)\n  //                 ~~~~\n  // Error: Property 'data' does not exist on type 'Result<string>'.\n  //   Property 'data' does not exist on type 'FailureResult'.\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"explicit-generic-types",children:"Explicit Generic Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Foo<T> {\n  foo: T\n}\n\nconst FooNumber = Foo as { new (): Foo<number> } // ref 1\n\nfunction id<T>(x: T) {\n  return x\n}\n\nconst idNum = id as { (x: number): number }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"default-generic-types",children:"Default Generic Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Quote<T = string> {\n  value: T\n}\n\nconst explicit: Quote<number> = { value: 123 }\nconst implicit: Quote = {\n  value: 'Be yourself. The world worships the original.',\n}\nconst mismatch: Quote = { value: 123 }\n//                                     ~~~\n// Error: Type 'number' is not assignable to type 'string'.\n\ninterface KeyValuePair<Key, Value = Key> {\n  key: Key\n  value: Value\n}\n\n// Type: KeyValuePair<string, number>\nconst allExplicit: KeyValuePair<string, number> = {\n  key: 'rating',\n  value: 10,\n}\n\n// Type: KeyValuePair<string>\nconst oneDefaulting: KeyValuePair<string> = {\n  key: 'rating',\n  value: 'ten',\n}\n\nconst firstMissing: KeyValuePair = {\n  //            ~~~~~~~~~~~~\n  // Error: Generic type 'KeyValuePair<Key, Value>'\n  // requires between 1 and 2 type arguments.\n  key: 'rating',\n  value: 10,\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"constrained-generic-types",children:"Constrained Generic Types"}),"\n",(0,r.jsx)(n.p,{children:"Constrained union types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Lengthwise {\n  length: number\n}\n\nfunction createList<T extends number | Lengthwise>(): T[] {\n  return [] as T[]\n}\n\nconst numberList = createList<number>() // ok\nconst stringList = createList<string>() // ok\nconst arrayList = createList<any[]>() // ok\nconst boolList = createList<boolean>() // error\n"})}),"\n",(0,r.jsx)(n.p,{children:"Constrained template literal types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type RemoveMapsHelper<T> = T extends `maps:${infer U}` ? U : T\ntype RemoveMaps<T> = {\n  [K in keyof T as RemoveMapsHelper<K>]: T[K]\n}\n\ninterface Data {\n  'maps:longitude': string\n  'maps:latitude': string\n  'awesome': boolean\n}\ntype ShapedData = RemoveMaps<Data>\n// type ShapedData = {\n//   longitude: string;\n//   latitude: string;\n//   awesome: boolean;\n// }\n"})}),"\n",(0,r.jsx)(n.p,{children:"Constrained index types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function getValue<T, Key extends keyof T>(container: T, key: Key) {\n  return container[key]\n}\n\nconst roles = {\n  favorite: 'Fargo',\n  others: ['Almost Famous', 'Burn After Reading', 'NorthLand'],\n}\n\nconst favorite = getValue(roles, 'favorite') // Type: string\nconst others = getValue(roles, 'others') // Type: string[]\nconst missing = getValue(roles, 'extras')\n//                         ~~~~~~~~\n// Error: Argument of type '\"extras\"' is not assignable\n// to parameter of type '\"favorite\" | \"others\"'.\n\nfunction getDeepValue<\n  T,\n  FirstKey extends keyof T,\n  SecondKey extends keyof T[FirstKey],\n>(target: T, firstKey: FirstKey, secondKey: SecondKey): T[FirstKey][SecondKey] {\n  return target[firstKey][secondKey]\n}\n\nconst target = {\n  foo: {\n    a: true,\n    b: 2,\n  },\n  bar: {\n    c: 'cool',\n    d: 2,\n  },\n}\n\nconst result1 = getDeepValue(target, 'foo', 'a') // boolean\nconst result2 = getDeepValue(target, 'bar', 'c') // string\n"})}),"\n",(0,r.jsx)(n.p,{children:"Constrained default types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Props {\n  a1: 'Foo'\n  a2: 'Bar'\n  a3: 'FooBar'\n  b1: 'b1'\n  b2: 'b2'\n  b3: 'b3'\n}\n\ntype ExtractValues<T, Keys extends keyof T = Extract<keyof T, `a${string}`>> = {\n  [K in Keys]: T[K]\n}[Keys]\n\ntype Values = ExtractValues<Props>\n// type Values = 'Foo' | 'Bar' | 'FooBar'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generic-types-programming",children:"Generic Types Programming"}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u7c7b\u578b\u7f16\u7a0b\u91cc, \u6cdb\u578b\u5c31\u662f\u53d8\u91cf:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function pick<T extends object, U extends keyof T>(obj: T, keys: U[]): T[U][] {\n  return keys.map(key => obj[key])\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Generic Golden Rule",type:"tip",children:[(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.a,{href:"https://effectivetypescript.com/2020/08/12/generics-golden-rule",children:["Type ",(0,r.jsx)(n.code,{children:"T"})," parameters should appear twice"]}),":"]}),(0,r.jsxs)(n.p,{children:["If a type parameter only appears in one location,\nstrongly ",(0,r.jsx)(n.strong,{children:"reconsider"})," if actually need it."]})]}),"\n",(0,r.jsx)(n.h2,{id:"conditional-types",children:"Conditional Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Basic conditional types\njust like ",(0,r.jsx)(n.code,{children:"if else"})," statement."]}),"\n",(0,r.jsxs)(n.li,{children:["Nested conditional types\njust like ",(0,r.jsx)(n.code,{children:"switch case"})," statement."]}),"\n",(0,r.jsxs)(n.li,{children:["Distributive conditional types\njust like ",(0,r.jsx)(n.code,{children:"map"})," statement (",(0,r.jsx)(n.code,{children:"loop"})," statement) on ",(0,r.jsx)(n.code,{children:"union"})," type."]}),"\n",(0,r.jsxs)(n.li,{children:["Conditional types make ",(0,r.jsx)(n.code,{children:"TypeScript"})," become real programming type system:\n",(0,r.jsx)(n.code,{children:"TypeScript"})," type system is ",(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/issues/14833",children:"Turing Complete"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-conditional-types",children:"Basic Conditional Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Animal {\n  live: () => void\n}\ninterface Dog extends Animal {\n  woof: () => void\n}\n\ntype Example1 = Dog extends Animal ? number : string\n// => type Example1 = number\n\ntype Example2 = RegExp extends Animal ? number : string\n// => type Example2 = string\n"})}),"\n",(0,r.jsx)(n.h3,{id:"nested-conditional-types",children:"Nested Conditional Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Conditional types can be nested."}),"\n",(0,r.jsx)(n.li,{children:"\u901a\u8fc7\u5d4c\u5957\u6761\u4ef6\u7c7b\u578b, \u53ef\u4ee5\u5c06\u7c7b\u578b\u7ea6\u675f\u6536\u62e2\u5230\u7cbe\u786e\u8303\u56f4."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type TypeName<T> = T extends string\n  ? 'string'\n  : T extends number\n    ? 'number'\n    : T extends boolean\n      ? 'boolean'\n      : T extends undefined\n        ? 'undefined'\n        : T extends Function\n          ? 'function'\n          : 'object'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"index-conditional-types",children:"Index Conditional Types"}),"\n",(0,r.jsx)(n.p,{children:"Conditional types are able to access members of provided types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface QueryOptions {\n  throwIfNotFound: boolean\n}\n\ntype QueryResult<Options extends QueryOptions> =\n  Options['throwIfNotFound'] extends true ? string : string | undefined\n\ndeclare function retrieve<Options extends QueryOptions>(\n  key: string,\n  options?: Options\n): Promise<QueryResult<Options>>\n\n// Returned type: string | undefined\nawait retrieve('1')\n\n// Returned type: string | undefined\nawait retrieve('2', { throwIfNotFound: Math.random() > 0.5 })\n\n// Returned type: string\nawait retrieve('3', { throwIfNotFound: true })\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mapped-conditional-types",children:"Mapped Conditional Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type MakeAllMembersFunctions<T> = {\n  [K in keyof T]: T[K] extends (...args: any[]) => any ? T[K] : () => T[K]\n}\n\ntype MemberFunctions = MakeAllMembersFunctions<{\n  alreadyFunction: () => string\n  notYetFunction: number\n}>\n// Type:\n// {\n//   alreadyFunction: () => string,\n//   notYetFunction: () => number,\n// }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"distributive-conditional-types",children:"Distributive Conditional Types"}),"\n",(0,r.jsx)(n.p,{children:"Type distributivity:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Conditional types in which checked type is ",(0,r.jsx)(n.code,{children:"naked type parameter"})," are called DCT."]}),"\n",(0,r.jsx)(n.li,{children:"DCT are automatically distributed over union types during instantiation."}),"\n",(0,r.jsx)(n.li,{children:"When conditional types act on a generic type,\nthey become distributive when given a union type."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"( A | B | C ) extends T ? X : Y"})," \u76f8\u5f53\u4e8e\n",(0,r.jsx)(n.code,{children:"(A extends T ? X : Y) | (B extends T ? X : Y) | (B extends T ? X : Y)"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"\u6ca1\u6709\u88ab\u989d\u5916\u5305\u88c5\u7684\u8054\u5408\u7c7b\u578b\u53c2\u6570, \u5728\u6761\u4ef6\u7c7b\u578b\u8fdb\u884c\u5224\u5b9a\u65f6\u4f1a\u5c06\u8054\u5408\u7c7b\u578b\u5206\u53d1, \u5206\u522b\u8fdb\u884c\u5224\u65ad."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'// "string" | "function"\ntype T1 = TypeName<string | (() => void)>\n\n// "string" | "object"\ntype T2 = TypeName<string | string[]>\n\n// "object"\ntype T3 = TypeName<string[] | number[]>\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Naked<T> = T extends boolean ? 'Y' : 'N'\ntype Wrapped<T> = [T] extends [boolean] ? 'Y' : 'N'\n\n/*\n * \u5148\u5206\u53d1\u5230 Naked<number> | Naked<boolean>\n * \u7ed3\u679c\u662f \"N\" | \"Y\"\n */\ntype Distributed = Naked<number | boolean>\n\n/*\n * \u4e0d\u4f1a\u5206\u53d1 \u76f4\u63a5\u662f [number | boolean] extends [boolean]\n * \u7ed3\u679c\u662f \"N\"\n */\ntype NotDistributed = Wrapped<number | boolean>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"moving-types",children:"Moving Types"}),"\n",(0,r.jsx)(n.h3,{id:"typeof-types",children:"Typeof Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// \u6355\u83b7\u5b57\u7b26\u4e32\u7684\u7c7b\u578b\u4e0e\u503c\nconst foo = 'Hello World'\n\n// \u4f7f\u7528\u4e00\u4e2a\u6355\u83b7\u7684\u7c7b\u578b\nlet bar: typeof foo\n\n// bar \u4ec5\u80fd\u88ab\u8d4b\u503c 'Hello World'\nbar = 'Hello World' // ok\nbar = 'anything else' // Error\n"})}),"\n",(0,r.jsx)(n.h3,{id:"keyof-types",children:"Keyof Types"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"keyof foo"})," get literal types of ",(0,r.jsx)(n.code,{children:"foo"})," keys (",(0,r.jsx)(n.code,{children:"Object.keys"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const colors = {\n  red: 'red',\n  blue: 'blue',\n}\n\ntype Colors = keyof typeof colors\n\nlet color: Colors // color \u7684\u7c7b\u578b\u662f 'red' | 'blue' (literal types)\ncolor = 'red' // ok\ncolor = 'blue' // ok\ncolor = 'anythingElse' // Error\n"})}),"\n",(0,r.jsx)(n.h2,{id:"mapped-types",children:"Mapped Types"}),"\n",(0,r.jsx)(n.h3,{id:"builtin-mapped-types",children:"Builtin Mapped Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/blob/7d60dc1f5db04cc01cba2e1def292432fa41a7ee/src/lib/es5.d.ts#L1468-L1612",children:"Builtin mapped types"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-mapped-types",children:"Basic Mapped Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Readonly<T> = { readonly [P in keyof T]: T[P] }\ntype Partial<T> = { [P in keyof T]?: T[P] }\ntype ReadonlyPartial<T> = { readonly [P in keyof T]?: T[P] }\ntype Required<T> = { [P in keyof T]-?: T[P] }\ntype Nullable<T> = { [P in keyof T]: T[P] | null }\ntype NonNullable<T> = T extends null | undefined ? never : T\ntype Clone<T> = { [P in keyof T]: T[P] }\ntype Stringify<T> = { [P in keyof T]: string }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"union-mapped-types",children:"Union Mapped Types"}),"\n",(0,r.jsx)(n.p,{children:"With distributive conditional type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Extract<T, U> = T extends U ? T : never\ntype Exclude<T, U> = T extends U ? never : T\n"})}),"\n",(0,r.jsx)(n.h3,{id:"key-mapped-types",children:"Key Mapped Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Pick<T, K extends keyof T> = { [P in K]: T[P] }\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>\ntype Record<K extends keyof any, T> = { [P in K]: T }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"function-mapped-types",children:"Function Mapped Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Parameters<T extends (...args: any) => any> = T extends (\n  ...args: infer P\n) => any\n  ? P\n  : never\n\ntype ConstructorParameters<T extends new (...args: any) => any> =\n  T extends new (...args: infer P) => any ? P : never\n\ntype ReturnType<T extends (...args: any) => any> = T extends (\n  ...args: any[]\n) => infer R\n  ? R\n  : any\n\ntype InstanceType<T extends new (...args: any) => any> = T extends new (\n  ...args: any\n) => infer R\n  ? R\n  : any\n\ntype ThisParameterType<T> = T extends (this: infer U, ...args: any[]) => any\n  ? U\n  : unknown\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-mapped-types",children:"Custom Mapped Types"}),"\n",(0,r.jsx)(n.p,{children:"Combine with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"in keyof"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"readonly"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"-"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"as"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Template literal types."}),"\n",(0,r.jsx)(n.li,{children:"Conditional types."}),"\n",(0,r.jsx)(n.li,{children:"Builtin types."}),"\n",(0,r.jsx)(n.li,{children:"Other mapped types."}),"\n",(0,r.jsx)(n.li,{children:"Other custom types."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Removes 'readonly' attributes from a type's properties\ntype Mutable<T> = {\n  -readonly [K in keyof T]: T[K]\n}\n\ntype DeepImmutable<T> = {\n  readonly [K in keyof T]: keyof T[K] extends undefined ? T[K] : Immutable<T[K]>\n}\n\ninterface LockedAccount {\n  readonly id: string\n  readonly name: string\n}\n\ntype UnlockedAccount = Mutable<LockedAccount>\n// type UnlockedAccount = {\n//   id: string;\n//   name: string;\n// };\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Mapped types via `as` type\ntype Getters<Type> = {\n  [Property in keyof Type as `get${Capitalize<\n    string & Property\n  >}`]: () => Type[Property]\n}\n\ninterface Person {\n  name: string\n  age: number\n  location: string\n}\n\ntype LazyPerson = Getters<Person>\n// type LazyPerson = {\n//   getName: () => string;\n//   getAge: () => number;\n//   getLocation: () => string;\n// }\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Remove the 'kind' property\ntype RemoveKindField<Type> = {\n  [Property in keyof Type as Exclude<Property, 'kind'>]: Type[Property]\n}\n\ninterface Circle {\n  kind: 'circle'\n  radius: number\n}\n\ntype KindlessCircle = RemoveKindField<Circle>\n// type KindlessCircle = {\n//   radius: number;\n// }\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Mapped type via conditional type\ntype ExtractPII<Type> = {\n  [Property in keyof Type]: Type[Property] extends { pii: true } ? true : false\n}\n\ninterface DBFields {\n  id: { format: 'incrementing' }\n  name: { type: string, pii: true }\n}\n\ntype ObjectsNeedingGDPRDeletion = ExtractPII<DBFields>\n// type ObjectsNeedingGDPRDeletion = {\n//   id: false;\n//   name: true;\n// }\n"})}),"\n",(0,r.jsx)(n.h2,{id:"utility-types",children:"Utility Types"}),"\n",(0,r.jsx)(n.h3,{id:"null-types",children:"Null Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Nullish = null | undefined\ntype Nullable<T> = T | null\ntype NonUndefinedable<A> = A extends undefined ? never : A\ntype NonNullable<T> = T extends null | undefined ? never : T\n"})}),"\n",(0,r.jsx)(n.h3,{id:"boolean-types",children:"Boolean Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Falsy = false | '' | 0 | null | undefined\nconst isFalsy = (val: unknown): val is Falsy => !val\n"})}),"\n",(0,r.jsx)(n.h3,{id:"primitive-types",children:"Primitive Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Primitive = string | number | boolean | bigint | symbol | null | undefined\n\nfunction isPrimitive(val: unknown): val is Primitive {\n  if (val === null || val === undefined)\n    return true\n\n  const typeDef = typeof val\n\n  const primitiveNonNullishTypes = [\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol',\n  ]\n\n  return primitiveNonNullishTypes.includes(typeDef)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"promise-types",children:"Promise Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// TypeScript 4.5.\n// Get naked Promise<T> type.\ntype Awaited<T> = T extends Promise<infer U> ? Awaited<U> : T\n\n// A = string.\ntype A = Awaited<Promise<string>>\n\n// B = number.\ntype B = Awaited<Promise<Promise<number>>>\n\n// C = boolean | number.\ntype C = Awaited<boolean | Promise<number>>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Sync<T> = {\n  [K in keyof T]: T[K] extends (...args: any[]) => Promise<infer Result>\n    ? (...args: Parameters<T[K]>) => Result\n    : T[K]\n}\n\ninterface AsyncInterface {\n  compute: (arg: number) => Promise<boolean>\n  createString: () => Promise<string>\n}\n\ntype SyncInterface = Sync<AsyncInterface>\n// type SyncInterface = {\n//     compute: (arg: number) => boolean;\n//     createString: () => String;\n// }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"proxy-types",children:"Proxy Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Proxy<T> {\n  get: () => T\n  set: (value: T) => void\n}\n\ntype Proxify<T> = { [P in keyof T]: Proxy<T[P]> }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"recursive-types",children:"Recursive Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type DeepReadonly<T> = {\n  +readonly [P in keyof T]: T[P] extends object ? DeepReadonly<T[P]> : T[P]\n}\n\ntype DeepMutable<T> = {\n  -readonly [P in keyof T]: T[P] extends object ? DeepMutable<T[P]> : T[P]\n}\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P]\n}\n\ntype DeepRequired<T> = {\n  [P in keyof T]-?: T[P] extends object | undefined ? DeepRequired<T[P]> : T[P]\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"nominal-brand-types",children:"Nominal Brand Types"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/issues/202",children:"Nominal type system"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface FooId extends string {\n  _fooIdBrand: string\n}\n\ninterface BarId extends string {\n  _barIdBrand: string\n}\n\nlet fooId: FooId\nlet barId: BarId\n\n// \u7c7b\u578b\u5b89\u5168\nfooId = barId // error\nbarId = fooId // error\nfooId = barId as FooId // error\nbarId = fooId as BarId // error\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const typeSym = Symbol('type')\nconst valueSym = Symbol('value')\n\ntype Brand<B extends string, T> = T extends\n| undefined\n| null\n| number\n| boolean\n| bigint\n  ? { [typeSym]: B, [valueSym]: T }\n  : T & { [typeSym]: B }\n\ntype Flavor<F extends string, T> = T & {\n  [typeSym]?: F\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"lodash-types",children:"Lodash Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Flatten<Type> = Type extends Array<infer Item> ? Item : Type\n"})}),"\n",(0,r.jsx)(n.h2,{id:"type-inference",children:"Type Inference"}),"\n",(0,r.jsxs)(n.p,{children:["\u7c7b\u578b\u7cfb\u7edf\u5728\u83b7\u5f97\u8db3\u591f\u7684\u4fe1\u606f\u540e,\n\u80fd\u5c06 ",(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/pull/21496",children:(0,r.jsx)(n.code,{children:"infer"})})," \u540e\u8ddf\u968f\u7684\u7c7b\u578b\u53c2\u6570\u63a8\u5bfc\u51fa\u6765,\n\u6700\u540e\u8fd4\u56de\u8fd9\u4e2a\u63a8\u5bfc\u7ed3\u679c:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Parameters<T extends (...args: any) => any> = T extends (\n  ...args: infer P\n) => any\n  ? P\n  : never\n\ntype ConstructorParameters<T extends new (...args: any) => any> =\n  T extends new (...args: infer P) => any ? P : never\n\ntype ReturnType<T extends (...args: any) => any> = T extends (\n  ...args: any[]\n) => infer R\n  ? R\n  : any\n\ntype InstanceType<T extends new (...args: any) => any> = T extends new (\n  ...args: any\n) => infer R\n  ? R\n  : any\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u534f\u53d8\u4f4d\u7f6e\u4e0a, \u82e5\u540c\u4e00\u4e2a\u7c7b\u578b\u53d8\u91cf\u5b58\u5728\u591a\u4e2a\u5019\u9009\u8005, \u5219\u6700\u7ec8\u7684\u7c7b\u578b\u5c06\u88ab\u63a8\u65ad\u4e3a\u8054\u5408\u7c7b\u578b:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type PropertyType<T> = T extends { id: infer U, name: infer U } ? U : never\n\ntype InferType = PropertyType<{\n  id: number\n  name: string\n}>\n// string | number\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u9006\u53d8\u4f4d\u7f6e\u4e0a, \u82e5\u540c\u4e00\u4e2a\u7c7b\u578b\u53d8\u91cf\u5b58\u5728\u591a\u4e2a\u5019\u9009\u8005, \u5219\u6700\u7ec8\u7684\u7c7b\u578b\u5c06\u88ab\u63a8\u65ad\u4e3a\u4ea4\u53c9\u7c7b\u578b:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type PropertyType<T> = T extends {\n  a: (x: infer U) => void\n  b: (x: infer U) => void\n}\n  ? U\n  : never\n\ntype InferType = PropertyType<{\n  a: (x: string) => void\n  b: (x: number) => void\n}>\n// string & number\n\ntype UnionToIntersection<U> = (\n  U extends any ? (arg: U) => void : never\n) extends (arg: infer R) => void\n  ? R\n  : never\n\ntype UnionType = { a: 'a' } | { b: 'b' }\ntype IntersectionType = UnionToIntersection<UnionType>\n// { a: 'a' } & { b: 'b' }\n"})}),"\n",(0,r.jsx)(n.h2,{id:"type-guard",children:"Type Guard"}),"\n",(0,r.jsx)(n.h3,{id:"in-type-guard",children:"In Type Guard"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Fish {\n  swim: () => void\n}\ninterface Bird {\n  fly: () => void\n}\n\nfunction move(animal: Fish | Bird) {\n  if ('swim' in animal)\n    return animal.swim()\n\n  return animal.fly()\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"instance-type-guard",children:"Instance Type Guard"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function logValue(x: Date | string) {\n  if (x instanceof Date)\n    console.log(x.toUTCString())\n  else\n    console.log(x.toUpperCase())\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typeof-type-guard",children:"TypeOf Type Guard"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function fn(x: string | number) {\n  if (typeof x === 'string')\n    return x.length\n  else\n    return x + 1\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function getScore(value: number | string): number {\n  switch (typeof value) {\n    case 'number':\n      // %inferred-type: number\n      return value + 1\n    case 'string':\n      // %inferred-type: string\n      return value.length\n    default:\n      throw new Error(`Unsupported value: ${value}`)\n  }\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function contains(text: string, terms: string | string[]) {\n  const termList = Array.isArray(terms) ? terms : [terms]\n  console.log(termList) // string[]\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"discriminated-union-type-guard",children:"Discriminated Union Type Guard"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Teacher {\n  kind: 'Teacher'\n  teacherId: string\n}\n\ninterface Student {\n  kind: 'Student'\n  studentId: string\n}\n\ntype Attendee = Teacher | Student\n\nfunction getId(attendee: Attendee) {\n  switch (attendee.kind) {\n    case 'Teacher':\n      // %inferred-type: { kind: \"Teacher\"; teacherId: string; }\n      return attendee.teacherId\n    case 'Student':\n      // %inferred-type: { kind: \"Student\"; studentId: string; }\n      return attendee.studentId\n    default:\n      throw new Error('Unsupported type')\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"never-type-guard",children:"Never Type Guard"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"never"})," type is assignable to every type."]}),"\n",(0,r.jsxs)(n.li,{children:["No type is assignable to ",(0,r.jsx)(n.code,{children:"never"})," (except ",(0,r.jsx)(n.code,{children:"never"})," itself)."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Triangle {\n  kind: 'triangle'\n  sideLength: number\n}\n\ntype Shape = Circle | Square | Triangle\n\nfunction getArea(shape: Shape) {\n  switch (shape.kind) {\n    case 'circle':\n      return Math.PI * shape.radius ** 2\n    case 'square':\n      return shape.sideLength ** 2\n    default: {\n      // Type 'Triangle' is not assignable to type 'never'.\n      const _exhaustiveCheck: never = shape\n      return _exhaustiveCheck\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Never and Void",type:"tip",children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5f53\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7a7a\u503c\u65f6, \u5b83\u7684\u8fd4\u56de\u503c\u4e3a ",(0,r.jsx)(n.code,{children:"void"})," \u7c7b\u578b."]}),"\n",(0,r.jsxs)(n.li,{children:["\u5f53\u4e00\u4e2a\u51fd\u6570",(0,r.jsx)(n.strong,{children:"\u6c38\u4e0d\u8fd4\u56de"}),"\u65f6 (\u6216\u8005\u603b\u662f\u629b\u51fa\u9519\u8bef), \u5b83\u7684\u8fd4\u56de\u503c\u4e3a ",(0,r.jsx)(n.code,{children:"never"})," \u7c7b\u578b."]}),"\n",(0,r.jsxs)(n.li,{children:["\u5728 ",(0,r.jsx)(n.code,{children:"strictNullChecking"})," \u4e3a ",(0,r.jsx)(n.code,{children:"false"})," \u65f6, ",(0,r.jsx)(n.code,{children:"void"})," \u7c7b\u578b\u53ef\u4ee5\u88ab\u8d4b\u503c."]}),"\n",(0,r.jsxs)(n.li,{children:["\u9664\u4e86 ",(0,r.jsx)(n.code,{children:"never"})," \u672c\u8eab\u4ee5\u5916, \u5176\u4ed6\u4efb\u4f55\u7c7b\u578b\u4e0d\u80fd\u8d4b\u503c\u7ed9 ",(0,r.jsx)(n.code,{children:"never"}),"."]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function fail(message: string): never {\n  throw new Error(`Invariant failure: ${message}.`)\n}\n\nfunction workWithUnsafeParam(param: unknown) {\n  if (typeof param !== 'string')\n    fail(`Param should be a string, not ${typeof param}`)\n\n  // Here, param is known to be type string\n  param.toUpperCase() // Ok\n}\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"exhaustiveness-check",children:"Exhaustiveness Check"}),"\n",(0,r.jsxs)(n.p,{children:["Exhaustiveness check using ",(0,r.jsx)(n.code,{children:"never"})," in ",(0,r.jsx)(n.code,{children:"switch"})," statement:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class UnsupportedValueError extends Error {\n  constructor(value: never) {\n    super(`Unsupported value: ${value}`)\n  }\n}\n\nfunction toGerman4(value: NoYesStrings): string {\n  switch (value) {\n    case 'Yes':\n      return 'Ja'\n    default:\n      // @ts-expect-error: Argument of type '\"No\"'\n      // is not assignable to parameter of type 'never'. (2345)\n      throw new UnsupportedValueError(value)\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"excess-property-check",children:"Excess Property Check"}),"\n",(0,r.jsx)(n.p,{children:"Excess property check:\ntypes check on assigning object literal to variable/function parameter."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Room {\n  numDoors: number\n  ceilingHeightFt: number\n}\n\nconst r: Room = {\n  numDoors: 1,\n  ceilingHeightFt: 10,\n  elephant: 'present',\n  // Excess property check:\n  // Object literal may only specify known properties,\n  // and 'elephant' does not exist in type 'Room'.\n}\n\nenterRoom({\n  numDoors: 1,\n  ceilingHeightFt: 10,\n  elephant: 'present',\n})\n// Excess property check:\n// Object literal may only specify known properties,\n// and 'elephant' does not exist in type 'Room'.\n\n// Normal structural types check\nconst obj = {\n  numDoors: 1,\n  ceilingHeightFt: 10,\n  elephant: 'present',\n}\n\n// OK\nconst r: Room = obj\n"})}),"\n",(0,r.jsx)(n.h3,{id:"type-predicate-signature",children:"Type Predicate Signature"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"is"})," keyword for ",(0,r.jsx)(n.code,{children:"value"})," type predicate:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Falsy = false | '' | 0 | null | undefined\n\nconst isFalsy = (val: unknown): val is Falsy => !val\n\nconst isDefined = <T>(x: T | undefined): x is T => x !== undefined\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function isNotNullish<T>(value: T): value is NonNullable<T> {\n  return value !== undefined && value !== null\n}\n\n// %inferred-type: (number | null | undefined)[]\nconst mixedValues = [1, undefined, 2, null]\n\n// %inferred-type: number[]\nconst numbers = mixedValues.filter(isNotNullish)\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"/**\n * A partial implementation of the `typeof` operator.\n */\nfunction isTypeof(value: any, typeString: 'boolean'): value is boolean\nfunction isTypeof(value: any, typeString: 'number'): value is number\nfunction isTypeof(value: any, typeString: 'string'): value is string\n\nconst value: unknown = {}\n\nif (isTypeof(value, 'boolean')) {\n  // %inferred-type: boolean\n  console.log(value)\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"type-assertion",children:"Type Assertion"}),"\n",(0,r.jsx)(n.h3,{id:"as-assertion",children:"As Assertion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let foo: any\nconst bar = foo as string // \u73b0\u5728 bar \u7684\u7c7b\u578b\u662f 'string'\n\nfunction handler(event: Event) {\n  const mouseEvent = event as MouseEvent\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"const-assertion",children:"Const Assertion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const v1 = {\n  x: 1,\n  y: 2,\n} // { x: number; y: number; }\n\nconst v2 = {\n  x: 1 as const,\n  y: 2,\n} // { x: 1; y: number; }\n\nconst v3 = {\n  x: 1,\n  y: 2,\n} as const // { readonly x: 1; readonly y: 2; }\n\nconst a1 = [1, 2, 3] // number[]\n\nconst a2 = [1, 2, 3] as const // readonly [1, 2, 3]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Const assertion ",(0,r.jsx)(n.code,{children:"readonly"})," tuples are convenient for function returns\n(returned tuples are often destructured immediately):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Return type: readonly [string, number]\nfunction firstCharAndSizeAsConst(input: string) {\n  return [input[0], input.length] as const\n}\n\n// firstChar type: string\n// size type: number\nconst [firstChar, size] = firstCharAndSizeAsConst('Sabertaz')\n"})}),"\n",(0,r.jsx)(n.h3,{id:"assertion-signature",children:"Assertion Signature"}),"\n",(0,r.jsx)(n.p,{children:"Boolean assertion signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function assert(condition: any, msg?: string): asserts condition {\n  if (!condition)\n    throw new AssertionError(msg)\n}\n\nfunction yell(str) {\n  assert(typeof str === 'string')\n  return str.toUppercase()\n  //         ~~~~~~~~~~~\n  // error: Property 'toUppercase' does not exist on type 'string'.\n  //        Did you mean 'toUpperCase'?\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"String assertion signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function assertIsString(val: any): asserts val is string {\n  if (typeof val !== 'string')\n    throw new AssertionError('Not a string!')\n}\n\nfunction yell(str: any) {\n  assertIsString(str)\n  // Now TypeScript knows that 'str' is a 'string'.\n  return str.toUppercase()\n  //         ~~~~~~~~~~~\n  // error: Property 'toUppercase' does not exist on type 'string'.\n  //        Did you mean 'toUpperCase'?\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Generics assertion signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function assertIsDefined<T>(val: T): asserts val is NonNullable<T> {\n  if (val === undefined || val === null) {\n    throw new AssertionError(\n      `Expected 'val' to be defined, but received ${val}`\n    )\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"decorators",children:"Decorators"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Attaching to a class:\naccess to the class prototype and its member properties."}),"\n",(0,r.jsxs)(n.li,{children:["Attaching to a class property:\naccess to the name and value of that property,\nalong with its class prototype ",(0,r.jsx)(n.code,{children:"target"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Attaching to a class method parameter:\naccess to that parameter\u2019s index, name and value."}),"\n",(0,r.jsxs)(n.li,{children:["Attaching to a class method:\naccess to the method\u2019s parameters, the metadata associated with the method object,\nalong with its class prototype ",(0,r.jsx)(n.code,{children:"target"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// class definitions\n@decorator\nclass MyComponent extends React.Component<Props, State> {\n  // class properties\n  @decorator\n  private static api_version: string\n\n  // class method parameters\n  private handleFormSubmit1(@decorator myParam: string) {}\n\n  // class methods\n  @decorator\n  private handleFormSubmit2() {}\n\n  // accessors\n  @decorator\n  public myAccessor() {\n    return this.privateProperty\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"decorators-pros",children:"Decorators Pros"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5b9e\u73b0 Open-closed \u539f\u5219."}),"\n",(0,r.jsx)(n.li,{children:"\u5206\u79bb\u8f85\u52a9\u6027\u529f\u80fd\u903b\u8f91 (Before/After \u94a9\u5b50, Trace, Log, Report, Debounce/Throttle)\n\u4e0e\u4e1a\u52a1\u903b\u8f91."}),"\n",(0,r.jsx)(n.li,{children:"\u62bd\u8c61\u516c\u6709\u529f\u80fd\u51fd\u6570."}),"\n",(0,r.jsx)(n.li,{children:"\u88c5\u9970\u5668\u6a21\u5f0f\u662f Class \u7ee7\u627f\u7684\u4e00\u4e2a\u66ff\u4ee3\u6a21\u5f0f.\n(\u7c7b\u4f3c\u4e8e\u7ec4\u5408\u6a21\u5f0f)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"legacy-stage-2-decorators",children:"Legacy Stage 2 Decorators"}),"\n",(0,r.jsx)(n.h4,{id:"class-decorators",children:"Class Decorators"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function classDecorator(options: any[]) {\n  return (target) => {\n    // ...\n  }\n}\n\n@classDecorator\nclass Component {}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function inject(options: { api_version: string }) {\n  // returns the class decorator implementation\n  return (target) => {\n    // `target` will give us access to the entire class prototype\n    target.apiVersion = options.api_version\n  }\n}\n\nfunction deprecated(target) {\n  console.log(`\n    this class is deprecated and will be removed\n    in a future version of the app\n  `)\n  console.log(`@: ${target}`)\n}\n\n@inject({\n  api_version: '0.3.4',\n})\n@deprecated\nclass MyComponent extends React.Component<Props> {\n  static apiVersion: string\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"class-properties-decorators",children:"Class Properties Decorators"}),"\n",(0,r.jsxs)(n.p,{children:["first parameter ",(0,r.jsx)(n.code,{children:"target"})," will be\n",(0,r.jsx)(n.code,{children:"class prototype"})," for normal properties\nand ",(0,r.jsx)(n.code,{children:"class constructor"})," for static properties."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function prop(target, name) {\n  // ...\n}\n\nfunction staticProp(constructor, name) {\n  // ...\n}\n\nclass MyComponent extends React.Component<Props> {\n  @prop\n  public member: string\n\n  @staticProp\n  public static apiVersion: string\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"method-parameters-decorators",children:"Method Parameters Decorators"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@uppercase"}),"/",(0,r.jsx)(n.code,{children:"@lowercase"})," for string parameters,\n",(0,r.jsx)(n.code,{children:"@rounded"})," for number parameters."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function decorator<T>(classPrototype: T, name: string, index: int) {\n  // ...\n}\n\nclass MyComponent extends React.Component<Props> {\n  private handleMethod(@decorator param1: string) {\n    // ...\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"methods-decorators",children:"Methods Decorators"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"target"})," parameter will class prototype"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"propertyKey"})," will be a string containing the name of the method."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"propertyDescriptor"})," will provide with standard metadata associated with the object:\nconfigurable, enumerable, value and writable,\nas well as get and set."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function methodDecorator(options: any[]) {\n  return (\n    target: MyComponent,\n    propertyKey: string,\n    propertyDescriptor: PropertyDescriptor\n  ) => {\n    // ...\n  }\n}\n\nclass MyComponent extends React.Component {\n  @methodDecorator\n  handleSomething() {\n    // ...\n  }\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function enumerable(enumerable: boolean) {\n  return (\n    target: MyComponent,\n    propertyKey: string,\n    propertyDescriptor: PropertyDescriptor\n  ) => {\n    propertyDescriptor.enumerable = enumerable\n  }\n}\n\nclass MyComponent extends React.Component {\n  @enumerable(false)\n  handleSomething() {\n    // ...\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"modern-stage-3-decorators",children:"Modern Stage 3 Decorators"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Decorator = (value: Input, context: {\n  kind: string\n  name: string | symbol\n  access: {\n    get?: () => unknown\n    set?: (value: unknown) => void\n  }\n  private?: boolean\n  static?: boolean\n  addInitializer: (initializer: () => void) => void\n}) => Output | void\n\ntype ClassDecorator = (value: Function, context: {\n  kind: 'class'\n  name: string | undefined\n  addInitializer: (initializer: () => void) => void\n}) => Function | void\n\ntype ClassMethodDecorator = (value: Function, context: {\n  kind: 'method'\n  name: string | symbol\n  access: { get: () => unknown }\n  static: boolean\n  private: boolean\n  addInitializer: (initializer: () => void) => void\n}) => Function | void\n\ntype ClassGetterDecorator = (value: Function, context: {\n  kind: 'getter'\n  name: string | symbol\n  access: { get: () => unknown }\n  static: boolean\n  private: boolean\n  addInitializer: (initializer: () => void) => void\n}) => Function | void\n\ntype ClassSetterDecorator = (value: Function, context: {\n  kind: 'setter'\n  name: string | symbol\n  access: { set: (value: unknown) => void }\n  static: boolean\n  private: boolean\n  addInitializer: (initializer: () => void) => void\n}) => Function | void\n\ntype ClassFieldDecorator = (value: undefined, context: {\n  kind: 'field'\n  name: string | symbol\n  access: { get: () => unknown, set: (value: unknown) => void }\n  static: boolean\n  private: boolean\n  addInitializer: (initializer: () => void) => void\n}) => (initialValue: unknown) => unknown | void\n\ntype ClassAutoAccessorDecorator = (\n  value: {\n    get: () => unknown\n    set: (value: unknown) => void\n  },\n  context: {\n    kind: 'accessor'\n    name: string | symbol\n    access: { get: () => unknown, set: (value: unknown) => void }\n    static: boolean\n    private: boolean\n    addInitializer: (initializer: () => void) => void\n  }\n) => {\n  get?: () => unknown\n  set?: (value: unknown) => void\n  init?: (initialValue: unknown) => unknown\n} | void\n"})}),"\n",(0,r.jsx)(n.h3,{id:"decorators-execution-order",children:"Decorators Execution Order"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u4e0d\u540c\u7ea7\u88c5\u9970\u5668:","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u5b9e\u4f8b\u6210\u5458: (\u53c2\u6570 > \u65b9\u6cd5) -> \u8bbf\u95ee\u5668 -> \u5c5e\u6027 \u88c5\u9970\u5668 (\u6309\u987a\u5e8f)."}),"\n",(0,r.jsx)(n.li,{children:"\u9759\u6001\u6210\u5458: (\u53c2\u6570 > \u65b9\u6cd5) -> \u8bbf\u95ee\u5668 -> \u5c5e\u6027 \u88c5\u9970\u5668 (\u6309\u987a\u5e8f)."}),"\n",(0,r.jsx)(n.li,{children:"\u6784\u9020\u5668: \u53c2\u6570\u88c5\u9970\u5668."}),"\n",(0,r.jsx)(n.li,{children:"\u7c7b\u88c5\u9970\u5668."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"\u540c\u7ea7\u88c5\u9970\u5668: \u5148\u4ece\u5916\u5230\u5185\u8fdb\u5165\uff0c\u7136\u540e\u7531\u5185\u5411\u5916\u6267\u884c."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'function f(key: string): any {\n  return function () {\n    console.log(\'\u6267\u884c: \', key)\n  }\n}\n\n@f(\'8. \u7c7b\')\nclass C {\n  @f(\'4. \u9759\u6001\u5c5e\u6027\')\n  static prop?: number\n\n  @f(\'5. \u9759\u6001\u65b9\u6cd5\')\n  static method(@f(\'6. \u9759\u6001\u65b9\u6cd5\u53c2\u6570\') foo) {}\n\n  constructor(@f(\'7. \u6784\u9020\u5668\u53c2\u6570\') foo) {\n    super(foo)\n  }\n\n  @f(\'2. \u5b9e\u4f8b\u65b9\u6cd5\')\n  method(@f(\'1. \u5b9e\u4f8b\u65b9\u6cd5\u53c2\u6570\') foo) {}\n\n  @f(\'3. \u5b9e\u4f8b\u5c5e\u6027\')\n  prop?: number\n}\n\n// "\u6267\u884c: ",  "1. \u5b9e\u4f8b\u65b9\u6cd5\u53c2\u6570"\n// "\u6267\u884c: ",  "2. \u5b9e\u4f8b\u65b9\u6cd5"\n// "\u6267\u884c: ",  "3. \u5b9e\u4f8b\u5c5e\u6027"\n// "\u6267\u884c: ",  "4. \u9759\u6001\u5c5e\u6027"\n// "\u6267\u884c: ",  "6. \u9759\u6001\u65b9\u6cd5\u53c2\u6570"\n// "\u6267\u884c: ",  "5. \u9759\u6001\u65b9\u6cd5"\n// "\u6267\u884c: ",  "7. \u6784\u9020\u5668\u53c2\u6570"\n// "\u6267\u884c: ",  "8. \u7c7b"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function dec(id) {\n  console.log('\u88c5\u9970\u5668\u521d\u59cb\u5316', id)\n\n  return function (target, property, descriptor) {\n    console.log('\u88c5\u9970\u5668\u6267\u884c', id)\n  }\n}\n\nclass Example {\n  @dec(1)\n  @dec(2)\n  method() {}\n}\n\n// \u88c5\u9970\u5668\u521d\u59cb\u5316 1\n// \u88c5\u9970\u5668\u521d\u59cb\u5316 2\n// \u88c5\u9970\u5668\u6267\u884c 2\n// \u88c5\u9970\u5668\u6267\u884c 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"reflect-metadata",children:"Reflect Metadata"}),"\n",(0,r.jsx)(n.p,{children:"IoC and DI implementation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const INJECTIONS = new WeakMap()\n\nfunction createInjections() {\n  const injections = []\n\n  function injectable(Class) {\n    INJECTIONS.set(Class, injections)\n  }\n\n  function inject(injectionKey) {\n    return function applyInjection(v, context) {\n      injections.push({ injectionKey, set: context.access.set })\n    }\n  }\n\n  return { injectable, inject }\n}\n\nclass Container {\n  registry = new Map()\n\n  register(injectionKey, value) {\n    this.registry.set(injectionKey, value)\n  }\n\n  lookup(injectionKey) {\n    this.registry.get(injectionKey)\n  }\n\n  create(Class) {\n    const instance = new Class()\n\n    for (const { injectionKey, set } of INJECTIONS.get(Class) || [])\n      set.call(instance, this.lookup(injectionKey))\n\n    return instance\n  }\n}\n\nclass Store {}\n\nconst { injectable, inject } = createInjections()\n\n@injectable\nclass C {\n  @inject('store') store\n}\n\nconst container = new Container()\nconst store = new Store()\n\ncontainer.register('store', store)\n\nconst c = container.create(C)\n\nc.store === store // true\n"})}),"\n",(0,r.jsx)(n.p,{children:"AOP programming:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const PATH_METADATA = 'path'\nconst METHOD_METADATA = 'method'\n\nfunction Controller(path: string): ClassDecorator {\n  return (target) => {\n    Reflect.defineMetadata(PATH_METADATA, path, target)\n  }\n}\n\nfunction createMappingDecorator(method: string) {\n  return (path: string): MethodDecorator => {\n    return (target, key, descriptor) => {\n      Reflect.defineMetadata(PATH_METADATA, path, descriptor.value)\n      Reflect.defineMetadata(METHOD_METADATA, method, descriptor.value)\n    }\n  }\n}\n\nconst Get = createMappingDecorator('GET')\nconst Post = createMappingDecorator('POST')\n\nfunction mapRoute(instance: object) {\n  const prototype = Object.getPrototypeOf(instance)\n\n  // \u7b5b\u9009\u51fa\u7c7b\u7684 methodName\n  const methodsNames = Object.getOwnPropertyNames(prototype).filter(\n    item => !isConstructor(item) && isFunction(prototype[item])\n  )\n  return methodsNames.map((methodName) => {\n    const fn = prototype[methodName]\n\n    // \u53d6\u51fa\u5b9a\u4e49\u7684 metadata\n    const route = Reflect.getMetadata(PATH_METADATA, fn)\n    const method = Reflect.getMetadata(METHOD_METADATA, fn)\n\n    return {\n      route,\n      method,\n      fn,\n      methodName,\n    }\n  })\n}\n\n@Controller('/test')\nclass SomeClass {\n  @Get('/a')\n  someGetMethod() {\n    return 'hello world'\n  }\n\n  @Post('/b')\n  somePostMethod() {}\n}\n\nReflect.getMetadata(PATH_METADATA, SomeClass) // '/test'\n\nmapRoute(new SomeClass())\n/**\n * [{\n *    route: '/a',\n *    method: 'GET',\n *    fn: someGetMethod() { ... },\n *    methodName: 'someGetMethod'\n *  },{\n *    route: '/b',\n *    method: 'POST',\n *    fn: somePostMethod() { ... },\n *    methodName: 'somePostMethod'\n * }]\n *\n */\n"})}),"\n",(0,r.jsx)(n.h2,{id:"type-system",children:"Type System"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"TypeScript"})," type system:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Structural type system: type checking focuses on shape (",(0,r.jsx)(n.code,{children:"Duck Typing"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/issues/14833",children:"Turing complete"})," type system."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TypeScript"})," type system models ",(0,r.jsx)(n.code,{children:"JavaScript"})," runtime behavior\nand spot out runtime exception."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"covariant",children:"Covariant"}),"\n",(0,r.jsx)(n.p,{children:"Covariant (\u534f\u53d8\u6027):"}),"\n",(0,r.jsxs)(n.p,{children:["Type ",(0,r.jsx)(n.code,{children:"T"})," is ",(0,r.jsx)(n.strong,{children:"covariant"})," if having ",(0,r.jsx)(n.code,{children:"S <: P"}),",\nthen ",(0,r.jsx)(n.code,{children:"T<S> <: T<P>"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type IsSubtype<S, P> = S extends P ? true : false\n\ntype T1 = IsSubtype<Admin, User>\n// type T1 = true\n\ntype T2 = IsSubtype<Promise<Admin>, Promise<User>>\n// type T2 = true\n\ntype T3 = IsSubtype<'Hello', string>\n// type T3 = true\n\ntype T4 = IsSubtype<Capitalize<'Hello'>, Capitalize<string>>\n// type T4 = true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"contravariant",children:"Contravariant"}),"\n",(0,r.jsx)(n.p,{children:"Contravariant (\u9006\u53d8\u6027):"}),"\n",(0,r.jsxs)(n.p,{children:["Type ",(0,r.jsx)(n.code,{children:"T"})," is ",(0,r.jsx)(n.strong,{children:"contravariant"})," if having ",(0,r.jsx)(n.code,{children:"S <: P"}),",\nthen ",(0,r.jsx)(n.code,{children:"T<P> <: T<S>"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type IsSubtype<S, P> = S extends P ? true : false\n\ntype Func<Param> = (param: Param) => void\n\ntype T1 = IsSubtype<Admin, User>\n// type T1 = true\n\ntype T2 = IsSubtype<Func<Admin>, Func<User>>\n// type T2 = false\n\ntype T3 = IsSubtype<Func<User>, Func<Admin>>\n// type T3 = true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const logAdmin: Func<Admin> = (admin: Admin): void => {\n  console.log(`Name: ${admin.userName}`)\n  console.log(`Is super admin: ${admin.isSuperAdmin.toString()}`)\n}\n\nconst logUser: Func<User> = (user: User): void => {\n  console.log(`Name: ${user.userName}`)\n}\n\nconst admin = new Admin('admin1', true)\n\nlet logger: Func<Admin>\n\nlogger = logUser\nlogger(admin) // OK\n\nlogger = logAdmin\nlogger(admin) // OK\n\nconst user = new User('user1')\n\nlet logger: Func<User>\n\nlogger = logUser\nlogger(user) // OK\n\nlogger = logAdmin\n// Type 'Func<Admin>' is not assignable to type 'Func<User>'.\n//   Property 'isSuperAdmin' is missing in type 'User' but required in type 'Admin'.\nlogger(user) // Oops! `user.isSuperAdmin` is undefined.\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Function Types",type:"tip",children:[(0,r.jsx)(n.p,{children:"\u51fd\u6570\u7c7b\u578b\u4e2d:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u53c2\u6570\u7c7b\u578b\u4e3a\u9006\u53d8."}),"\n",(0,r.jsx)(n.li,{children:"\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u534f\u53d8."}),"\n"]})]}),"\n",(0,r.jsx)(n.admonition,{title:"Array Types",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5141\u8bb8\u4e0d\u53d8\u7684\u5217\u8868 (",(0,r.jsx)(n.code,{children:"Immutable"}),") \u5728\u5b83\u7684\u53c2\u6570\u7c7b\u578b\u4e0a\u662f\u534f\u53d8\u7684:\n",(0,r.jsx)(n.code,{children:"ConstList<Dog>"})," \u4e3a ",(0,r.jsx)(n.code,{children:"ConstList<Animal>"})," \u7684\u5b50\u7c7b\u578b."]}),"\n",(0,r.jsxs)(n.li,{children:["\u5bf9\u4e8e\u53ef\u53d8\u7684\u5217\u8868 (",(0,r.jsx)(n.code,{children:"Mutable"}),"), \u5176\u53c2\u6570\u7c7b\u578b\u5219\u5fc5\u987b\u662f\u4e0d\u53d8\u7684 (",(0,r.jsx)(n.code,{children:"Invariant"}),"):\n\u65e2\u4e0d\u662f\u534f\u53d8\u4e5f\u4e0d\u662f\u9006\u53d8, \u624d\u80fd\u4fdd\u8bc1\u7c7b\u578b\u5b89\u5168."]}),"\n"]})}),"\n",(0,r.jsx)(n.h3,{id:"type-gymnastics",children:"Type Gymnastics"}),"\n",(0,r.jsx)(n.h4,{id:"type-gymnastics-programming",children:"Type Gymnastics Programming"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://exploringjs.com/tackling-ts/ch_computing-with-types-overview.html",children:"Type programming"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Level"}),(0,r.jsx)(n.th,{children:"Environment"}),(0,r.jsx)(n.th,{children:"Operands"}),(0,r.jsx)(n.th,{children:"Operations"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Program level"}),(0,r.jsx)(n.td,{children:"Runtime"}),(0,r.jsx)(n.td,{children:"Values"}),(0,r.jsx)(n.td,{children:"Functions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type level"}),(0,r.jsx)(n.td,{children:"Compile time"}),(0,r.jsx)(n.td,{children:"Specific types"}),(0,r.jsx)(n.td,{children:"Generic types"})]})]})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.th,{children:[(0,r.jsx)(n.code,{children:"TypeScript"})," Term"]}),(0,r.jsx)(n.th,{children:"Set Term"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"never"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"\u2205"})," (Empty set)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Literal type"}),(0,r.jsx)(n.td,{children:"Single element set"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Value"})," assignable to ",(0,r.jsx)(n.code,{children:"T"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Value \u2208 T"})," (Member)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"T1"})," assignable to ",(0,r.jsx)(n.code,{children:"T2"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"T1 \u2286 T2"})," (Subset)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"T1 extends T2"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"T1 \u2286 T2"})," (Subset)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"T1 | T2"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"T1 \u222a T2"})," (Union)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"T1 & T2"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"T1 \u2229 T2"})," (Intersection)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"unknown"})}),(0,r.jsx)(n.td,{children:"Universal set"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"type-gymnastics-tools",children:"Type Gymnastics Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#template-literal-types",children:"Template literal types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#index-signature",children:"Index signature"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#mapped-types",children:"Mapped types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#conditional-types",children:"Conditional types"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#nested-conditional-types",children:"Nested conditional types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#index-conditional-types",children:"Index conditional types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#mapped-conditional-types",children:"Mapped conditional types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#distributive-conditional-types",children:"Distributive conditional types"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"infer"})," ",(0,r.jsx)(n.a,{href:"#type-inference",children:"inference types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"..."})," ",(0,r.jsx)(n.a,{href:"#rest-parameters",children:"rest types"}),": ",(0,r.jsx)(n.code,{children:"Items extends [infer Head, ...infer Tail]"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#recursive-types",children:"Recursive types"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type-gymnastics-examples",children:"Type Gymnastics Examples"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PathOf<Form>"})," complex recursive ",(0,r.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/KJdUdwbLN4g4M7xy34m-fA",children:"types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Type-safe React router advanced ",(0,r.jsx)(n.a,{href:"https://speakerdeck.com/zoontek/advanced-typescript-how-we-made-our-router-typesafe",children:"types"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'type PathSegments<Path extends string> =\n  Path extends `${infer SegmentA}/${infer SegmentB}`\n    ? ParamOnly<SegmentA> | PathSegments<SegmentB>\n    : ParamOnly<Path>\ntype ParamOnly<Segment extends string> = Segment extends `:${infer Param}`\n  ? Param\n  : never\ntype RouteParams<Path extends string> = {\n  [Key in PathSegments<Path>]: string\n}\n\ninterface RouteProps<Path extends string> {\n  path: Path\n  render: (routeProps: { match: { params: RouteParams<Path> } }) => void\n}\n\nexport default function App() {\n  return (\n    <Route\n      path="/user/:username"\n      render={(routeProps) => {\n        const params = routeProps.match.params\n      }}\n    />\n  )\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"type-gymnastics-reference",children:"Type Gymnastics Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.a,{href:"https://github.com/type-challenges/type-challenges",children:"challenges"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.a,{href:"https://github.com/g-plane/type-gymnastics",children:"gymnastics"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.a,{href:"https://github.com/anuraghazra/type-trident",children:"trident"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"typescript-internals",children:"TypeScript Internals"}),"\n",(0,r.jsx)(n.h3,{id:"typescript-compiler",children:"TypeScript Compiler"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Microsoft/TypeScript/tree/main/src/compiler",children:"Compiler"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Scanner \u626b\u63cf\u5668 (",(0,r.jsx)(n.code,{children:"scanner.ts"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Parser \u89e3\u6790\u5668 (",(0,r.jsx)(n.code,{children:"parser.ts"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Binder \u7ed1\u5b9a\u5668 (",(0,r.jsx)(n.code,{children:"binder.ts"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Checker \u68c0\u67e5\u5668 (",(0,r.jsx)(n.code,{children:"checker.ts"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Emitter \u53d1\u5c04\u5668 (",(0,r.jsx)(n.code,{children:"emitter.ts"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Source Code ~~Scanner~~> Tokens\nTokens ~~Parser~~> AST\nAST ~~Binder~~> Symbols\nAST + Symbols ~~Checker~~> Type Validation\nAST + Checker ~~Emitter~~> JavaScript\n"})}),"\n",(0,r.jsx)(n.h4,{id:"typescript-scanner",children:"TypeScript Scanner"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// \u5355\u4f8b\u626b\u63cf\u5668\nconst scanner = ts.createScanner(ts.ScriptTarget.Latest, /* \u5ffd\u7565\u6742\u9879 */ true)\n\n// \u6b64\u51fd\u6570\u4e0e\u521d\u59cb\u5316\u4f7f\u7528\u7684 `initializeState` \u51fd\u6570\u76f8\u4f3c\nfunction initializeState(text: string) {\n  scanner.setText(text)\n  scanner.setOnError((message: ts.DiagnosticMessage, length: number) => {\n    console.error(message)\n  })\n  scanner.setScriptTarget(ts.ScriptTarget.ES5)\n  scanner.setLanguageVariant(ts.LanguageVariant.Standard)\n}\n\n// \u4f7f\u7528\u793a\u4f8b\ninitializeState(`const foo = 123;`.trim())\n\n// \u5f00\u59cb\u626b\u63cf\nlet token = scanner.scan()\n\nwhile (token !== ts.SyntaxKind.EndOfFileToken) {\n  console.log(ts.formatSyntaxKind(token))\n  token = scanner.scan()\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"typescript-parser",children:"TypeScript Parser"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"\u7a0b\u5e8f ->\n    CompilerHost.getSourceFile ->\n        (\u5168\u5c40\u51fd\u6570 parser.ts).createSourceFile ->\n            Parser.parseSourceFile\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function printAllChildren(node: ts.Node, depth = 0) {\n  console.log(\n    Array.from({ length: depth + 1 }, (num, i) => i).join('----'),\n    ts.formatSyntaxKind(node.kind),\n    node.pos,\n    node.end\n  )\n  depth++\n  node.getChildren().forEach(c => printAllChildren(c, depth))\n}\n\nconst sourceCode = `const foo = 123;`.trim()\nconst sourceFile = ts.createSourceFile(\n  'foo.ts',\n  sourceCode,\n  ts.ScriptTarget.ES5,\n  true\n)\nprintAllChildren(sourceFile)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"typescript-binder",children:"TypeScript Binder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"program.getTypeChecker ->\n    ts.createTypeChecker\uff08\u68c0\u67e5\u5668\u4e2d\uff09->\n        initializeTypeChecker\uff08\u68c0\u67e5\u5668\u4e2d\uff09 ->\n            for each SourceFile `ts.bindSourceFile`\uff08\u7ed1\u5b9a\u5668\u4e2d\uff09\n            for each SourceFile `ts.mergeSymbolTable`\uff08\u68c0\u67e5\u5668\u4e2d\uff09\n"})}),"\n",(0,r.jsx)(n.h4,{id:"typescript-checker",children:"TypeScript Checker"}),"\n",(0,r.jsx)(n.p,{children:"\u521d\u59cb\u5316\u68c0\u67e5\u5668:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"program.getTypeChecker ->\n    ts.createTypeChecker\uff08\u68c0\u67e5\u5668\u4e2d\uff09->\n        initializeTypeChecker\uff08\u68c0\u67e5\u5668\u4e2d\uff09 ->\n            for each SourceFile `ts.bindSourceFile`\uff08\u7ed1\u5b9a\u5668\u4e2d\uff09\n            for each SourceFile `ts.mergeSymbolTable`\uff08\u68c0\u67e5\u5668\u4e2d\uff09\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u771f\u6b63\u7684\u7c7b\u578b\u68c0\u67e5\u4f1a\u5728\u8c03\u7528 ",(0,r.jsx)(n.code,{children:"getDiagnostics"})," \u65f6\u624d\u53d1\u751f:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"program.emit ->\n    emitWorker (program local) ->\n        createTypeChecker.getEmitResolver ->\n            // \u7b2c\u4e00\u6b21\u8c03\u7528\u4e0b\u9762\u7684\u51e0\u4e2a createTypeChecker \u7684\u672c\u5730\u51fd\u6570\n            call getDiagnostics ->\n                getDiagnosticsWorker ->\n                    checkSourceFile\n\n            // \u63a5\u7740\n            return resolver\n            // \u901a\u8fc7\u5bf9\u672c\u5730\u51fd\u6570 createResolver() \u7684\u8c03\u7528\uff0cresolver \u5df2\u5728 createTypeChecker \u4e2d\u521d\u59cb\u5316\u3002\n"})}),"\n",(0,r.jsx)(n.h4,{id:"typescript-emitter",children:"TypeScript Emitter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Program.emit ->\n    `emitWorker` \uff08\u5728 program.ts \u4e2d\u7684 createProgram\uff09 ->\n        `emitFiles` \uff08emitter.ts \u4e2d\u7684\u51fd\u6570\uff09\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescript-internals-api",children:"TypeScript Internals API"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Path of the file we want to analyze.\n// It's important that @types/react is installed in the same package.\nconst filePath = 'example.jsx'\n\n// Make sure to analyze .js/.jsx files.\nconst options = {\n  allowJs: true,\n  jsx: 'preserve',\n}\n\n// Create a TypeScript compilation environment.\nconst host = ts.createCompilerHost(options)\n\n// Parse and analyze our file, along with dependencies.\nconst program = ts.createProgram([filePath], options, host)\nconst sourceFile = program.getSourceFile(filePath)\nconst checker = program.getTypeChecker()\n\nconst detectedComponents = []\n\nfor (const statement of sourceFile.statements) {\n  if (ts.isVariableStatement(statement)) {\n    for (const declaration of statement.declarationList.declarations) {\n      // \ud83d\ude80 This is where the magic happens.\n      const type = checker.getTypeAtLocation(declaration.name)\n\n      // A type that has call signatures is a function type.\n      for (const callSignature of type.getCallSignatures()) {\n        const returnType = callSignature.getReturnType()\n\n        if (returnType.symbol?.getEscapedName().toString() === 'Element')\n          detectedComponents.push(declaration.name.text)\n      }\n    }\n  }\n}\n\nconsole.log(detectedComponents)\n// [\"Foo\", \"Bar\"]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"typescript-reference",children:"TypeScript Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/LearningTypeScript/projects",children:"Learning TypeScript"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://exploringjs.com/tackling-ts/index.html",children:"Tackling TypeScript"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/basarat/typescript-book",children:"TypeScript Deep Dive"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/labs42io/clean-code-typescript",children:"Clean TypeScript Code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/danvk/effective-typescript",children:"Effective TypeScript"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},842:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(8101);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);