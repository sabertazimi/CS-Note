"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[2008],{2281:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Web/React/ReactAdvancedNotes","title":"React Advanced Notes","description":"React Core Packages","source":"@site/notes/Web/React/ReactAdvancedNotes.md","sourceDirName":"Web/React","slug":"/Web/React/ReactAdvancedNotes","permalink":"/awesome-notes/Web/React/ReactAdvancedNotes","draft":false,"unlisted":false,"editUrl":"https://github.com/sabertazimi/awesome-notes/edit/main/notes/Web/React/ReactAdvancedNotes.md","tags":[{"inline":true,"label":"Web","permalink":"/awesome-notes/tags/web"},{"inline":true,"label":"React","permalink":"/awesome-notes/tags/react"}],"version":"current","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1734246257000,"frontMatter":{"author":"Sabertazimi","authorTitle":"Web Developer","authorURL":"https://github.com/sabertazimi","authorImageURL":"https://github.com/sabertazimi.png","tags":["Web","React"]},"sidebar":"tutorialSidebar","previous":{"title":"Node Basic Notes","permalink":"/awesome-notes/Web/Node/NodeBasicNotes"},"next":{"title":"React Basic Notes","permalink":"/awesome-notes/Web/React/ReactBasicNotes"}}');var s=r(5105),i=r(842);const o={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","React"]},c="React Advanced Notes",l={},a=[{value:"React Core Packages",id:"react-core-packages",level:2},{value:"React Virtual DOM",id:"react-virtual-dom",level:2},{value:"React Core Workflow",id:"react-core-workflow",level:2},{value:"Create RootContainer",id:"create-rootcontainer",level:3},{value:"Legacy Root",id:"legacy-root",level:4},{value:"Concurrent Root",id:"concurrent-root",level:4},{value:"Update RootContainer",id:"update-rootcontainer",level:3},{value:"ReactComponent SetState",id:"reactcomponent-setstate",level:3},{value:"ClassComponent Update",id:"classcomponent-update",level:3},{value:"FunctionComponent Update",id:"functioncomponent-update",level:3},{value:"React Scheduler",id:"react-scheduler",level:2},{value:"Scheduler Priority",id:"scheduler-priority",level:3},{value:"Scheduler Workflow",id:"scheduler-workflow",level:3},{value:"Scheduler Time Slicing",id:"scheduler-time-slicing",level:3},{value:"Scheduler Task Queue",id:"scheduler-task-queue",level:3},{value:"Scheduler Work Loop",id:"scheduler-work-loop",level:3},{value:"React Fiber",id:"react-fiber",level:2},{value:"React Fiber Type",id:"react-fiber-type",level:3},{value:"React Fiber Work Tag",id:"react-fiber-work-tag",level:3},{value:"React Fiber Mode",id:"react-fiber-mode",level:3},{value:"React Fiber Effects",id:"react-fiber-effects",level:3},{value:"React Fiber Lanes",id:"react-fiber-lanes",level:3},{value:"React Fiber Trees",id:"react-fiber-trees",level:3},{value:"React Fiber Work Loop",id:"react-fiber-work-loop",level:3},{value:"React Reconciler",id:"react-reconciler",level:2},{value:"Reconciler Render Workflow",id:"reconciler-render-workflow",level:3},{value:"Host Root Fiber Rendering",id:"host-root-fiber-rendering",level:4},{value:"Host Component Fiber Rendering",id:"host-component-fiber-rendering",level:4},{value:"Class Component Fiber Rendering",id:"class-component-fiber-rendering",level:4},{value:"Function Component Fiber Rendering",id:"function-component-fiber-rendering",level:4},{value:"Reconciler Update Workflow",id:"reconciler-update-workflow",level:3},{value:"Reconciler Diff Workflow",id:"reconciler-diff-workflow",level:3},{value:"Different Types Elements",id:"different-types-elements",level:4},{value:"Same Type DOM Elements",id:"same-type-dom-elements",level:4},{value:"Same Type Component Elements",id:"same-type-component-elements",level:4},{value:"Reconcile Array Elements",id:"reconcile-array-elements",level:4},{value:"Reconciler Commit Workflow",id:"reconciler-commit-workflow",level:3},{value:"Renderer and HostConfig Protocol",id:"renderer-and-hostconfig-protocol",level:4},{value:"Commit Root",id:"commit-root",level:4},{value:"Before Mutation Phase",id:"before-mutation-phase",level:4},{value:"Mutation Phase",id:"mutation-phase",level:4},{value:"Layout Phase",id:"layout-phase",level:4},{value:"Reconciler Performance Tips",id:"reconciler-performance-tips",level:3},{value:"Minimal Reconciler Implementation",id:"minimal-reconciler-implementation",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"react-advanced-notes",children:"React Advanced Notes"})}),"\n",(0,s.jsx)(n.h2,{id:"react-core-packages",children:"React Core Packages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Scheduler"})," \u8c03\u5ea6\u5668: \u8c03\u5ea6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7, \u9ad8\u4f18\u4efb\u52a1\u4f18\u5148\u8fdb\u5165 ",(0,s.jsx)(n.code,{children:"Reconciler"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Reconciler"})," \u534f\u8c03\u5668:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u88c5\u8f7d ",(0,s.jsx)(n.code,{children:"Renderer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u63a5\u6536 ",(0,s.jsx)(n.code,{children:"ReactDOM"})," \u548c ",(0,s.jsx)(n.code,{children:"React"})," \u6a21\u5757 (\u7528\u6237\u4ee3\u7801) \u53d1\u8d77\u7684\u66f4\u65b0\u8bf7\u6c42:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactFiberReconciler.updateContainer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactFiberClassComponent.setState"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactFiberHooks.dispatchAction"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"\u627e\u51fa\u53d8\u5316\u7ec4\u4ef6, \u6784\u5efa Fiber Tree."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Renderer"})," \u6e32\u67d3\u5668:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5f15\u5bfc ",(0,s.jsx)(n.code,{children:"React"})," \u5e94\u7528\u542f\u52a8 (e.g ",(0,s.jsx)(n.code,{children:"ReactDOM.createRoot(rootNode).render(<App />)"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["\u5b9e\u73b0 ",(0,s.jsx)(n.code,{children:"HostConfig"})," \u534f\u8bae, \u5c06\u53d8\u5316\u7684\u7ec4\u4ef6\u6e32\u67d3\u5230\u9875\u9762\u4e0a."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\u5176\u4e2d ",(0,s.jsx)(n.code,{children:"Reconciler"})," \u6784\u5efa Fiber Tree \u7684\u8fc7\u7a0b\u88ab\u5305\u88c5\u6210\u4e00\u4e2a\u56de\u8c03\u51fd\u6570, \u4f20\u5165 ",(0,s.jsx)(n.code,{children:"Scheduler"})," \u6a21\u5757\u7b49\u5f85\u8c03\u5ea6.\n",(0,s.jsx)(n.code,{children:"Scheduler"})," \u5c06\u56de\u8c03\u51fd\u6570\u8fdb\u4e00\u6b65\u5305\u88c5\u6210\u4efb\u52a1\u5bf9\u8c61, \u653e\u5165\u591a\u4f18\u5148\u7ea7\u8c03\u5ea6\u7684\u4efb\u52a1\u961f\u5217, \u5faa\u73af\u6d88\u8d39\u4efb\u52a1\u961f\u5217, \u76f4\u81f3\u961f\u5217\u6e05\u7a7a.\nScheduler Work Loop (\u4efb\u52a1\u8c03\u5ea6\u5faa\u73af) \u8d1f\u8d23\u8c03\u5ea6 ",(0,s.jsx)(n.code,{children:"Task"}),",\nReconciler Work Loop (",(0,s.jsx)(n.code,{children:"Fiber"})," \u6784\u9020\u5faa\u73af) \u8d1f\u8d23\u5b9e\u73b0 ",(0,s.jsx)(n.code,{children:"Task"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"React"})," runtime main logic:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Updates: ",(0,s.jsx)(n.code,{children:"Add"}),"/",(0,s.jsx)(n.code,{children:"Delete"}),"/",(0,s.jsx)(n.code,{children:"Mutation"})," updates from ",(0,s.jsx)(n.code,{children:"User Code"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Registration:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Reconciler"})," receive updates request from ",(0,s.jsx)(n.code,{children:"User Code"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Scheduler"})," register new ",(0,s.jsx)(n.code,{children:"Task"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Execution:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Scheduler"})," consume ",(0,s.jsx)(n.code,{children:"Task"})," in ",(0,s.jsx)(n.code,{children:"TaskQueue"})," in work loop."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Reconciler"})," execute ",(0,s.jsx)(n.code,{children:"Task"})," work.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Fiber"})," \u6784\u9020\u5faa\u73af: construct ",(0,s.jsx)(n.code,{children:"Fiber"})," tree."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"commitRoot"}),": render ",(0,s.jsx)(n.code,{children:"Fiber"})," tree with ",(0,s.jsx)(n.code,{children:"Renderer"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u4efb\u52a1\u8c03\u5ea6\u5faa\u73af\u4e0e ",(0,s.jsx)(n.code,{children:"Fiber"})," \u6784\u9020\u5faa\u73af\u76f8\u4e92\u914d\u5408\u53ef\u5b9e\u73b0",(0,s.jsx)(n.strong,{children:"\u53ef\u4e2d\u65ad\u6e32\u67d3"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u6e32\u67d3\u4e2d\u65ad (",(0,s.jsx)(n.code,{children:"Reconciler.renderRootConcurrent().shouldYield()"}),"):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5b58\u5728\u66f4\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1 (Priority Scheduling)."}),"\n",(0,s.jsx)(n.li,{children:"\u5f53\u524d\u5e27\u6ca1\u6709\u5269\u4f59\u65f6\u95f4 (Time Slicing)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u6e32\u67d3\u6062\u590d (",(0,s.jsx)(n.code,{children:"Scheduler.workLoop()"}),"):\n\u5c06 ",(0,s.jsx)(n.code,{children:"callback()"})," \u8fd4\u56de\u7684\u4efb\u52a1\u653e\u5165\u4efb\u52a1\u961f\u5217, \u7ee7\u7eed\u8fdb\u884c\u8c03\u5ea6\u76f4\u81f3\u6e05\u7a7a\u4efb\u52a1\u961f\u5217."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://7kms.github.io/react-illustration-series/main/macro-structure",children:(0,s.jsx)(n.img,{alt:"React Core Packages",src:r(9542).A+"",width:"1918",height:"1382"})})}),"\n",(0,s.jsx)(n.h2,{id:"react-virtual-dom",children:"React Virtual DOM"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Reduce rendering times with reconciliation algorithm,\nimproving rendering efficiency:\nDeclarative UI performance = Diff performance + DOM performance,\n",(0,s.jsx)(n.code,{children:"Virtual DOM"})," \u4e3b\u8981\u662f\u4e3a\u4e86\u6700\u5c0f\u5316 Diff \u6027\u80fd\u6d88\u8017."]}),"\n",(0,s.jsx)(n.li,{children:"Cross platform code."}),"\n",(0,s.jsx)(n.li,{children:"Functional programming without details on DOM manipulation."}),"\n",(0,s.jsx)(n.li,{children:"Virtual DOM \u5f88\u591a\u65f6\u5019\u90fd\u4e0d\u662f\u6700\u4f18\u7684\u64cd\u4f5c,\n\u4f46\u5b83\u5177\u6709\u666e\u9002\u6027, \u5728\u6548\u7387\u4e0e\u53ef\u7ef4\u62a4\u6027\u4e4b\u95f4\u8fbe\u5230\u5e73\u8861."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/snabbdom/snabbdom",children:"SnabbDOM"}),":\nvirtual DOM library focus on modularity and performance."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"react-core-workflow",children:"React Core Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"create-rootcontainer",children:"Create RootContainer"}),"\n",(0,s.jsx)(n.h4,{id:"legacy-root",children:"Legacy Root"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMLegacy.js",children:"react-dom/src/client/ReactDOMLegacy"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"render"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"legacyRenderSubtreeIntoContainer."}),"\n",(0,s.jsx)(n.li,{children:"legacyCreateRootFromDOMContainer."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberReconciler.new.js",children:"react-reconciler/src/ReactFiberReconciler"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"createContainer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponentTree.js",children:"react-dom/src/client/ReactDOMComponentTree"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"markContainerAsRoot."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberRoot.new.js",children:"react-reconciler/src/ReactFiberRoot"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"createFiberRoot"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiber.new.js",children:"react-reconciler/src/ReactFiber"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"createHostRootFiber."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js",children:"react-reconciler/src/ReactUpdateQueue"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"initializeUpdateQueue"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/DOMPluginEventSystem.js",children:"react-dom/src/events/DOMPluginEventSystem"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"listenToAllSupportedEvents:\n\u4e8b\u4ef6\u7edf\u4e00\u5728 rootContainer \u4e0a\u5904\u7406 dispatchDiscreteEvent."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"concurrent-root",children:"Concurrent Root"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMRoot.js",children:"react-dom/src/client/ReactDOMRoot"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"createRoot"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberReconciler.new.js",children:"react-reconciler/src/ReactFiberReconciler"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"createContainer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponentTree.js",children:"react-dom/src/client/ReactDOMComponentTree"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"markContainerAsRoot."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberRoot.new.js",children:"react-reconciler/src/ReactFiberRoot"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"createFiberRoot"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiber.new.js",children:"react-reconciler/src/ReactFiber"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"createHostRootFiber."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js",children:"react-reconciler/src/ReactUpdateQueue"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"initializeUpdateQueue"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/DOMPluginEventSystem.js",children:"react-dom/src/events/DOMPluginEventSystem"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"listenToAllSupportedEvents:\n\u4e8b\u4ef6\u7edf\u4e00\u5728 rootContainer \u4e0a\u5904\u7406 dispatchDiscreteEvent."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactDOMRoot.render(<App />)"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"update-rootcontainer",children:"Update RootContainer"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMLegacy.js",children:"react-dom/src/client/ReactDOMLegacy"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"render."}),"\n",(0,s.jsx)(n.li,{children:"legacyRenderSubtreeIntoContainer."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMRoot.js",children:"react-dom/src/client/ReactDOMRoot"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"render."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberReconciler.new.js",children:"react-reconciler/src/ReactFiberReconciler"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateContainer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js",children:"react-reconciler/src/ReactUpdateQueue"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"createUpdate."}),"\n",(0,s.jsx)(n.li,{children:"enqueueUpdate."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"scheduleUpdateOnFiber"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ensureRootIsScheduled"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberSyncTaskQueue.new.js",children:"react-reconciler/src/ReactFiberSyncTaskQueue"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"flushSyncCallbacks."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"performSyncWorkOnRoot"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"renderRootSync."}),"\n",(0,s.jsx)(n.li,{children:"workLoopSync."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"performUnitOfWork"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js",children:"react-reconciler/src/ReactFiberBeginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"beginWork"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateHostRoot"}),"/",(0,s.jsx)(n.strong,{children:"updateXXXComponent"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactDOMComponent.createElement"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"reconcileChildren."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js",children:"react-reconciler/src/ReactChildFiber"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"reconcileChildFibers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeUnitOfWork"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCompleteWork.new.js",children:"react-reconciler/src/ReactFiberCompleteWork"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeWork"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"commitRoot"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMHostConfig.js",children:"react-dom/src/client/ReactDOMHostConfig"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"appendChildToContainer."}),"\n",(0,s.jsx)(n.li,{children:"finalizeInitialChildren."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponent.js",children:"react-dom/src/client/ReactDOMComponent"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"setInitialProperties:\n\u8bbe\u7f6e\u521d\u59cb\u5316\u5c5e\u6027, \u5904\u7406\u7279\u6b8a\u5143\u7d20\u548c\u4e8b\u4ef6."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Legacy Mode\nimport type { ReactElement } from 'react'\nimport type { Container } from './types'\nimport Reconciler from './reconciler'\n\nconst Renderer = {\n  render: (\n    element: ReactElement,\n    container: Container | null,\n    callback?: Function\n  ): void => {\n    if (container) {\n      const root = Reconciler.createContainer(container, 0, false, null)\n      Reconciler.updateContainer(element, root, null)\n    }\n  },\n}\n\nexport default Renderer\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Modern Mode\nimport type { ReactElement } from 'react'\nimport type { Container, OpaqueRoot } from './types'\nimport Reconciler from './reconciler'\n\nconst Renderer = {\n  createRoot: (\n    container: Container | null,\n    callback?: Function\n  ): OpaqueRoot => {\n    if (container) {\n      const root = Reconciler.createContainer(container, 0, false, null)\n\n      root.render = function (element: ReactElement) {\n        Reconciler.updateContainer(element, this, null)\n      }\n\n      return root\n    }\n  },\n}\n\nexport default Renderer\n"})}),"\n",(0,s.jsx)(n.h3,{id:"reactcomponent-setstate",children:"ReactComponent SetState"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/ReactDOMEventListener.js",children:"react-dom/src/events/ReactDOMEventListener"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"dispatchDiscreteEvent."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react/src/ReactBaseClasses.js",children:"react/src/ReactBaseClasses"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"setState"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberClassComponent.new.js",children:"react-reconciler/src/ReactFiberClassComponent"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"enqueueSetState."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js",children:"react-reconciler/src/ReactUpdateQueue"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"createUpdate."}),"\n",(0,s.jsx)(n.li,{children:"enqueueUpdate."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"scheduleUpdateOnFiber"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"discreteUpdates."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberSyncTaskQueue.new.js",children:"react-reconciler/src/ReactFiberSyncTaskQueue"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"flushSyncCallbacks."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"performSyncWorkOnRoot"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"workLoopSync."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"performUnitOfWork"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js",children:"react-reconciler/src/ReactFiberBeginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"beginWork"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateXXXComponent"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"reconcileChildren."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js",children:"react-reconciler/src/ReactChildFiber"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"reconcileChildFibers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeUnitOfWork"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCompleteWork.new.js",children:"react-reconciler/src/ReactFiberCompleteWork"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeWork"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"commitRoot"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"commitMutationEffects."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCommitWork.new.js",children:"react-reconciler/src/ReactFiberCommitWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"commitWork."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMHostConfig.js",children:"react-dom/src/client/ReactDOMHostConfig"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"commitUpdate."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponentTree.js",children:"react-dom/src/client/ReactDOMComponentTree"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"updateFiberProps."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponent.js",children:"react-dom/src/client/ReactDOMComponent"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"updateProperties:\nApply the diff."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"classcomponent-update",children:"ClassComponent Update"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"performSyncWorkOnRoot."}),"\n",(0,s.jsx)(n.li,{children:"workLoopSync."}),"\n",(0,s.jsx)(n.li,{children:"performUnitOfWork."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js",children:"react-reconciler/src/ReactFiberBeginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"beginWork"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateClassComponent"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberClassComponent.new.js",children:"react-reconciler/src/ReactFiberClassComponent"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"updateClassInstance."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js",children:"react-reconciler/src/ReactFiberBeginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"finishClassComponent."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"instance.render"})," (User defined Component)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"reconcileChildren"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js",children:"react-reconciler/src/ReactChildFiber"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"reconcileChildFibers."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"functioncomponent-update",children:"FunctionComponent Update"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:"react-reconciler/src/ReactFiberWorkLoop"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"performSyncWorkOnRoot."}),"\n",(0,s.jsx)(n.li,{children:"workLoopSync."}),"\n",(0,s.jsx)(n.li,{children:"performUnitOfWork."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js",children:"react-reconciler/src/ReactFiberBeginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"beginWork."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateFunctionComponent"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js",children:"react-reconciler/src/ReactFiberHooks"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"renderWithHooks."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FunctionComponent()"})," (User defined Function)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hooks"}),": useXXX -> mountXXX -> updateXXX."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js",children:"react-reconciler/src/ReactFiberBeginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"reconcileChildren"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js",children:"react-reconciler/src/ReactChildFiber"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"reconcileChildFibers."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"react-scheduler",children:"React Scheduler"}),"\n",(0,s.jsxs)(n.p,{children:["Work loop in scheduler focus on ",(0,s.jsx)(n.strong,{children:"Task Scheduling"}),",\nnot only including ",(0,s.jsx)(n.code,{children:"Reconciler.performSyncWorkOnRoot"}),"/",(0,s.jsx)(n.code,{children:"Reconciler.performConcurrentWorkOnRoot"}),",\nbut also for non-react tasks\n(meaning ",(0,s.jsx)(n.code,{children:"Scheduler"})," module can work standalone without ",(0,s.jsx)(n.code,{children:"React"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"scheduler-priority",children:"Scheduler Priority"}),"\n",(0,s.jsxs)(n.p,{children:["React 16, unstable concurrent mode with\n",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/scheduler/src/SchedulerPriorities.js",children:(0,s.jsx)(n.code,{children:"Priorities"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["ImmediatePriority: \u7acb\u5373\u6267\u884c\u4f18\u5148\u7ea7, \u7ea7\u522b\u6700\u9ad8, ",(0,s.jsx)(n.code,{children:"expirationTime = -1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["UserBlockingPriority: \u7528\u6237\u963b\u585e\u4f18\u5148\u7ea7, ",(0,s.jsx)(n.code,{children:"expirationTime = 250"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["NormalPriority: \u6b63\u5e38\u4f18\u5148\u7ea7, ",(0,s.jsx)(n.code,{children:"expirationTime = 5000"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["LowPriority: \u4f4e\u4f18\u5148\u7ea7, ",(0,s.jsx)(n.code,{children:"expirationTime = 10000"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["IdlePriority: \u53ef\u95f2\u7f6e\u4f18\u5148\u7ea7, ",(0,s.jsx)(n.code,{children:"expirationTime = maxSigned31BitInt"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["React 17, stable concurrent mode with\n",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberLane.new.js",children:(0,s.jsx)(n.code,{children:"Lanes"})}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export type Lanes = number\nexport type Lane = number\n\nexport const TotalLanes = 31\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001\n\nexport const InputContinuousHydrationLane: Lane = /*    */ 0b0000000000000000000000000000010\nexport const InputContinuousLane: Lanes = /*            */ 0b0000000000000000000000000000100\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000000001000\nexport const DefaultLane: Lanes = /*                    */ 0b0000000000000000000000000010000\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000000000000100000\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111111111111000000\nconst TransitionLane1: Lane = /*                        */ 0b0000000000000000000000001000000\nconst TransitionLane2: Lane = /*                        */ 0b0000000000000000000000010000000\nconst TransitionLane3: Lane = /*                        */ 0b0000000000000000000000100000000\nconst TransitionLane4: Lane = /*                        */ 0b0000000000000000000001000000000\nconst TransitionLane5: Lane = /*                        */ 0b0000000000000000000010000000000\nconst TransitionLane6: Lane = /*                        */ 0b0000000000000000000100000000000\nconst TransitionLane7: Lane = /*                        */ 0b0000000000000000001000000000000\nconst TransitionLane8: Lane = /*                        */ 0b0000000000000000010000000000000\nconst TransitionLane9: Lane = /*                        */ 0b0000000000000000100000000000000\nconst TransitionLane10: Lane = /*                       */ 0b0000000000000001000000000000000\nconst TransitionLane11: Lane = /*                       */ 0b0000000000000010000000000000000\nconst TransitionLane12: Lane = /*                       */ 0b0000000000000100000000000000000\nconst TransitionLane13: Lane = /*                       */ 0b0000000000001000000000000000000\nconst TransitionLane14: Lane = /*                       */ 0b0000000000010000000000000000000\nconst TransitionLane15: Lane = /*                       */ 0b0000000000100000000000000000000\nconst TransitionLane16: Lane = /*                       */ 0b0000000001000000000000000000000\n\nconst RetryLanes: Lanes = /*                            */ 0b0000111110000000000000000000000\nconst RetryLane1: Lane = /*                             */ 0b0000000010000000000000000000000\nconst RetryLane2: Lane = /*                             */ 0b0000000100000000000000000000000\nconst RetryLane3: Lane = /*                             */ 0b0000001000000000000000000000000\nconst RetryLane4: Lane = /*                             */ 0b0000010000000000000000000000000\nconst RetryLane5: Lane = /*                             */ 0b0000100000000000000000000000000\n\nexport const SomeRetryLane: Lane = RetryLane1\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0001000000000000000000000000000\n\nconst NonIdleLanes = /*                                 */ 0b0001111111111111111111111111111\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0010000000000000000000000000000\nexport const IdleLane: Lanes = /*                       */ 0b0100000000000000000000000000000\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scheduler-workflow",children:"Scheduler Workflow"}),"\n",(0,s.jsxs)(n.p,{children:["Scheduler main ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/scheduler/src/forks/Scheduler.js",children:"workflow"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"scheduleCallback(callback)"}),"\n-> ",(0,s.jsx)(n.code,{children:"push(queue, newTask)"})," (Wrap ",(0,s.jsx)(n.code,{children:"callback"})," into ",(0,s.jsx)(n.code,{children:"task"}),")\n(For delayed task -> ",(0,s.jsx)(n.code,{children:"requestHostTimeout(handleTimeout, delayTime)"}),")\n-> ",(0,s.jsx)(n.code,{children:"requestHostCallback(flushWork)"}),"\n-> ",(0,s.jsx)(n.code,{children:"messageChannelPort.postMessage(null)"}),"\n-> ",(0,s.jsx)(n.code,{children:"performWorkUntilDeadline()"}),"\n-> ",(0,s.jsx)(n.code,{children:"flushWork(hasTimeRemaining, currentTime)"}),":\n-> ",(0,s.jsx)(n.code,{children:"workLoop(hasTimeRemaining, currentTime)"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"\u5c06 Reconciler \u7684\u5de5\u4f5c (Callback)\n\u5305\u88c5\u6210 Task \u7ec4\u6210 Task Queue,\n\u6309\u7167\u65f6\u95f4\u5206\u7247\u673a\u5236,\n\u4e0d\u65ad\u5730\u6d88\u8d39 Task Queue."}),"\n",(0,s.jsx)(n.p,{children:"\u5bf9\u4e8e\u5ef6\u65f6\u4efb\u52a1 (Delayed Task),\n\u4f1a\u5c06\u5176\u5148\u653e\u5165 Timer Queue,\n\u7b49\u5f85\u5ef6\u65f6\u5b8c\u6210\u540e\u518d\u5c06\u5176\u653e\u5165 Task Queue."}),"\n",(0,s.jsx)(n.h3,{id:"scheduler-time-slicing",children:"Scheduler Time Slicing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// \u65f6\u95f4\u5207\u7247\u5468\u671f, \u9ed8\u8ba4\u662f 5ms.\n// \u5982\u679c\u4e00\u4e2a task \u8fd0\u884c\u8d85\u8fc7\u8be5\u5468\u671f, \u4e0b\u4e00\u4e2a task \u6267\u884c\u524d, \u4f1a\u628a\u63a7\u5236\u6743\u5f52\u8fd8\u6d4f\u89c8\u5668.\nconst yieldInterval = 5\nconst maxYieldInterval = 300\n\nlet deadline = 0 // currentTime + yieldInterval.\nlet needsPaint = false\nlet isMessageLoopRunning = false\nlet scheduledHostCallback = null\n\nconst channel = new MessageChannel()\nconst port = channel.port2\nchannel.port1.onmessage = performWorkUntilDeadline\n\nconst scheduling = navigator.scheduling\nconst getCurrentTime = performance.now\n\n// \u8bf7\u6c42\u56de\u8c03:\nfunction requestHostCallback(callback) {\n  // 1. \u4fdd\u5b58 callback.\n  scheduledHostCallback = callback\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true\n    // 2. \u901a\u8fc7 MessageChannel \u53d1\u9001\u6d88\u606f.\n    port.postMessage(null)\n  }\n}\n\n// \u53d6\u6d88\u56de\u8c03:\nfunction cancelHostCallback() {\n  scheduledHostCallback = null\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = setTimeout(() => {\n    callback(getCurrentTime())\n  }, ms)\n}\n\nfunction cancelHostTimeout() {\n  clearTimeout(taskTimeoutID)\n  taskTimeoutID = -1\n}\n\n// \u662f\u5426\u8ba9\u51fa\u4e3b\u7ebf\u7a0b (time slice):\nfunction shouldYieldToHost() {\n  const currentTime = getCurrentTime()\n\n  if (currentTime >= deadline) {\n    if (needsPaint || scheduling.isInputPending()) {\n      // There is either a pending paint or a pending input.\n      return true\n    }\n\n    // There's no pending input.\n    // Only yield if we've reached the max yield interval.\n    return currentTime >= maxYieldInterval\n  } else {\n    // There's still time left in the frame.\n    return false\n  }\n}\n\n// \u8bf7\u6c42\u7ed8\u5236:\nfunction requestPaint() {\n  needsPaint = true\n}\n\n// \u5b9e\u9645\u56de\u8c03\u51fd\u6570\u5904\u7406:\nfunction performWorkUntilDeadline() {\n  if (scheduledHostCallback !== null) {\n    // 1. \u8bbe\u7f6e currentTime \u4e0e deadline.\n    const currentTime = getCurrentTime()\n    deadline = currentTime + yieldInterval\n    const hasTimeRemaining = true\n\n    try {\n      // 2. \u6267\u884c\u56de\u8c03, \u8fd4\u56de\u662f\u5426\u6709\u8fd8\u6709\u5269\u4f59\u4efb\u52a1.\n      const hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime)\n\n      if (!hasMoreWork) {\n        // \u6ca1\u6709\u5269\u4f59\u4efb\u52a1, \u9000\u51fa.\n        isMessageLoopRunning = false\n        scheduledHostCallback = null\n      } else {\n        port.postMessage(null) // \u6709\u5269\u4f59\u4efb\u52a1, \u53d1\u8d77\u65b0\u7684\u8c03\u5ea6.\n      }\n    } catch (error) {\n      port.postMessage(null) // \u5982\u6709\u5f02\u5e38, \u91cd\u65b0\u53d1\u8d77\u8c03\u5ea6.\n      throw error\n    }\n  } else {\n    isMessageLoopRunning = false\n  }\n\n  needsPaint = false // Reset.\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scheduler-task-queue",children:"Scheduler Task Queue"}),"\n",(0,s.jsxs)(n.p,{children:["Task queue is ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/scheduler/src/SchedulerMinHeap.js",children:"MinHeap"}),",\nstoring Tasks."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const newTask = {\n  id: taskIdCounter++,\n  callback, // Work from reconciler.\n  priorityLevel,\n  startTime,\n  expirationTime,\n  sortIndex: -1, // MinHeap queue indexing.\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function scheduleCallback(priorityLevel, callback, options) {\n  const currentTime = getCurrentTime()\n  const startTime = currentTime\n  const expirationTime = startTime + timeout[priorityLevel] // -1/250/5000/10000/MAX_INT.\n  const newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  }\n\n  if (startTime > currentTime) {\n    // Delayed task.\n    newTask.sortIndex = startTime\n    push(timerQueue, newTask)\n\n    // All tasks are delayed, and this is the task with the earliest delay.\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout()\n      } else {\n        isHostTimeoutScheduled = true\n      }\n\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime)\n    }\n  } else {\n    // Normal task.\n    newTask.sortIndex = expirationTime\n    push(taskQueue, newTask)\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true\n      requestHostCallback(flushWork)\n    }\n  }\n\n  return newTask\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false\n  advanceTimers(currentTime)\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true\n      requestHostCallback(flushWork)\n    } else {\n      const firstTimer = peek(timerQueue)\n\n      if (firstTimer !== null)\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime)\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scheduler-work-loop",children:"Scheduler Work Loop"}),"\n",(0,s.jsxs)(n.p,{children:["\u5f53 ",(0,s.jsx)(n.code,{children:"callback()"})," \u8fd4\u56de\u51fd\u6570\u65f6, \u8868\u660e\u4ea7\u751f\u8fde\u7eed\u56de\u8c03 (e.g \u51fa\u73b0\u66f4\u9ad8\u4f18\u5148\u4efb\u52a1/\u65f6\u95f4\u5206\u7247\u7528\u5b8c, \u6e32\u67d3\u4e2d\u65ad),\n\u9700\u5c06\u8fd4\u56de\u7684\u51fd\u6570\u518d\u6b21\u653e\u5165\u4efb\u52a1\u961f\u5217, \u7ee7\u7eed\u8fdb\u884c\u8c03\u5ea6\u76f4\u81f3\u6e05\u7a7a\u4efb\u52a1\u961f\u5217 (\u6e32\u67d3\u6062\u590d)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function flushWork(hasTimeRemaining, initialTime) {\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false\n    cancelHostTimeout()\n  }\n\n  isPerformingWork = true // Lock.\n  const previousPriorityLevel = currentPriorityLevel\n\n  try {\n    return workLoop(hasTimeRemaining, initialTime)\n  } finally {\n    // Restore context.\n    currentTask = null\n    currentPriorityLevel = previousPriorityLevel\n    isPerformingWork = false\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime\n  advanceTimers(currentTime)\n  currentTask = peek(taskQueue)\n\n  while (currentTask !== null) {\n    if (\n      currentTask.expirationTime > currentTime\n      && (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break\n    }\n\n    const callback = currentTask.callback\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null\n      currentPriorityLevel = currentTask.priorityLevel\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime\n      const continuationCallback = callback(didUserCallbackTimeout)\n      currentTime = getCurrentTime()\n\n      if (typeof continuationCallback === 'function') {\n        // \u4ea7\u751f\u4e86\u8fde\u7eed\u56de\u8c03 (\u5982 Fiber\u6811\u592a\u5927, \u51fa\u73b0\u4e86\u4e2d\u65ad\u6e32\u67d3), \u4fdd\u7559 currentTask.\n        currentTask.callback = continuationCallback\n      } else {\n        if (currentTask === peek(taskQueue))\n          pop(taskQueue)\n      }\n\n      advanceTimers(currentTime)\n    } else {\n      // \u5982\u679c\u4efb\u52a1\u88ab\u53d6\u6d88 (currentTask.callback = null), \u5c06\u5176\u79fb\u51fa\u961f\u5217.\n      pop(taskQueue)\n    }\n\n    currentTask = peek(taskQueue)\n  }\n\n  // Return whether there's additional work.\n  if (currentTask !== null) {\n    return true\n  } else {\n    const firstTimer = peek(timerQueue)\n\n    // \u5b58\u5728\u5ef6\u65f6\u4efb\u52a1, \u7ee7\u7eed\u8fdb\u884c\u8c03\u5ea6.\n    if (firstTimer !== null)\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime)\n\n    return false\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"react-fiber",children:"React Fiber"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://tigerabrodi.blog/reacts-evolution-from-hooks-to-concurrent-react#heading-react-fiber",children:"React Fiber"}),"\n\u7684\u76ee\u6807\u662f\u63d0\u9ad8\u5176\u5728\u52a8\u753b\u3001\u5e03\u5c40\u548c\u624b\u52bf\u7b49\u9886\u57df\u7684\u9002\u7528\u6027:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5b83\u7684\u4e3b\u8981\u7279\u6027\u662f ",(0,s.jsx)(n.code,{children:"Incremental Rendering"}),":\n\u5c06\u6e32\u67d3\u4efb\u52a1\u62c6\u5206\u4e3a\u5c0f\u7684\u4efb\u52a1\u5757\u5e76\u5c06\u4efb\u52a1\u5206\u914d\u5230\u591a\u4e2a\u5e27\u4e0a\u7684\u80fd\u529b."]}),"\n",(0,s.jsx)(n.li,{children:"Ability to pause and resume rendering."}),"\n",(0,s.jsx)(n.li,{children:"Ability to prioritize updates."}),"\n",(0,s.jsx)(n.li,{children:"Ability to work on multiple tasks concurrently."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-type",children:"React Fiber Type"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Fiber"})," ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactInternalTypes.js",children:"definition"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Component type."}),"\n",(0,s.jsx)(n.li,{children:"Current props and state."}),"\n",(0,s.jsx)(n.li,{children:"Pointers to parent, sibling, and child components,"}),"\n",(0,s.jsx)(n.li,{children:"Pointer to DOM/class instance."}),"\n",(0,s.jsx)(n.li,{children:"Other internal metadata to track rendering process."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface Fiber {\n  tag: WorkTag\n  key: string | null\n  elementType: any\n  type: any // Tag/Class/Function.\n  stateNode: any // DOM/class instance.\n  ref: (((handle: mixed) => void) & { _stringRef: ?string }) | RefObject | null\n\n  // Singly Linked List Tree Structure.\n  return: Fiber | null // DFS parent Fiber node.\n  child: Fiber | null\n  sibling: Fiber | null\n  index: number\n\n  // Props and state for output.\n  pendingProps: any\n  memoizedProps: any\n  updateQueue: mixed // Updates from diff(pendingProps, memoizedProps).\n  memoizedState: any\n\n  // Context API.\n  dependencies: Dependencies | null // (Contexts, Events) dependencies.\n\n  mode: TypeOfMode // NoMode/BlockingMode/ConcurrentMode bit.\n\n  // Effects.\n  flags: Flags\n  subtreeFlags: Flags\n  deletions: Array<Fiber> | null\n  nextEffect: Fiber | null // Next effect Fiber node.\n  firstEffect: Fiber | null // First effect Fiber node.\n  lastEffect: Fiber | null // Last effect Fiber node.\n\n  // Priority.\n  lanes: Lanes\n  childLanes: Lanes\n  alternate: Fiber | null // `current` Fiber and `workInpProgress` Fiber.\n\n  // Performance statistics for React DevTool.\n  actualDuration?: number\n  actualStartTime?: number\n  selfBaseDuration?: number\n  treeBaseDuration?: number\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-work-tag",children:"React Fiber Work Tag"}),"\n",(0,s.jsxs)(n.p,{children:["\u5e38\u89c1\u7684 Fiber ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactWorkTags.js",children:"\u7c7b\u578b"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"HostComponent: HTML native tag."}),"\n",(0,s.jsx)(n.li,{children:"ClassComponent."}),"\n",(0,s.jsx)(n.li,{children:"FunctionComponent."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type WorkTag =\n  | 'FunctionComponent'\n  | 'ClassComponent'\n  | 'IndeterminateComponent'\n  | 'HostRoot'\n  | 'HostPortal'\n  | 'HostComponent'\n  | 'HostText'\n  | 'Fragment'\n  | 'Mode'\n  | 'ContextConsumer'\n  | 'ContextProvider'\n  | 'ForwardRef'\n  | 'Profiler'\n  | 'SuspenseComponent'\n  | 'MemoComponent'\n  | 'SimpleMemoComponent'\n  | 'LazyComponent'\n  | 'IncompleteClassComponent'\n  | 'DehydratedFragment'\n  | 'SuspenseListComponent'\n  | 'FundamentalComponent'\n  | 'ScopeComponent'\n  | 'Block'\n  | 'OffscreenComponent'\n  | 'LegacyHiddenComponent'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-mode",children:"React Fiber Mode"}),"\n",(0,s.jsxs)(n.p,{children:["React ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactTypeOfMode.js",children:"\u8fd0\u884c\u6a21\u5f0f"}),":\n\u6240\u6709 ",(0,s.jsx)(n.code,{children:"Fiber.mode"})," \u4fdd\u6301\u4e00\u81f4 (\u5305\u62ec ",(0,s.jsx)(n.code,{children:"FiberRoot"}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type TypeOfMode = number\n\nconst NoMode = /*                         */ 0b000000\nconst ConcurrentMode = /*                 */ 0b000001\nconst ProfileMode = /*                    */ 0b000010\nconst DebugTracingMode = /*               */ 0b000100\nconst StrictLegacyMode = /*               */ 0b001000\nconst StrictEffectsMode = /*              */ 0b010000\nconst ConcurrentUpdatesByDefaultMode = /* */ 0b100000\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-effects",children:"React Fiber Effects"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Insert DOM elements: ",(0,s.jsx)(n.code,{children:"Placement"})," tag."]}),"\n",(0,s.jsxs)(n.li,{children:["Update DOM elements: ",(0,s.jsx)(n.code,{children:"Update"})," tag."]}),"\n",(0,s.jsxs)(n.li,{children:["Delete DOM elements: ",(0,s.jsx)(n.code,{children:"Deletion"})," tag."]}),"\n",(0,s.jsxs)(n.li,{children:["Update Ref property: ",(0,s.jsx)(n.code,{children:"Ref"})," tag."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useEffect"})," callback: ",(0,s.jsx)(n.code,{children:"got Passive"})," tag.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useEffect(fn)"}),": ",(0,s.jsx)(n.code,{children:"Mount"})," and ",(0,s.jsx)(n.code,{children:"Update"})," lifecycle."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useEffect(fn, [])"}),": ",(0,s.jsx)(n.code,{children:"Mount"})," lifecycle."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useEffect(fn, [deps])"}),":\n",(0,s.jsx)(n.code,{children:"Mount"})," lifecycle and\n",(0,s.jsx)(n.code,{children:"Update"})," lifecycle with ",(0,s.jsx)(n.code,{children:"deps"})," changed."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["React create effects when ",(0,s.jsx)(n.code,{children:"Render"})," stage,\nthen update effects to real DOM when ",(0,s.jsx)(n.code,{children:"Commit"})," stage."]}),"\n",(0,s.jsxs)(n.p,{children:["\u5e38\u89c1\u7684 Effect ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberFlags.js",children:"\u6807\u5fd7\u4f4d"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type Flags = number\n\nconst NoFlags = /*                      */ 0b000000000000000000\nconst PerformedWork = /*                */ 0b000000000000000001\nconst Placement = /*                    */ 0b000000000000000010\nconst Update = /*                       */ 0b000000000000000100\nconst PlacementAndUpdate = /*           */ 0b000000000000000110\nconst Deletion = /*                     */ 0b000000000000001000\nconst ContentReset = /*                 */ 0b000000000000010000\nconst Callback = /*                     */ 0b000000000000100000\nconst DidCapture = /*                   */ 0b000000000001000000\nconst Ref = /*                          */ 0b000000000010000000\nconst Snapshot = /*                     */ 0b000000000100000000\nconst Passive = /*                      */ 0b000000001000000000\nconst PassiveUnmountPendingDev = /*     */ 0b000010000000000000\nconst Hydrating = /*                    */ 0b000000010000000000\nconst HydratingAndUpdate = /*           */ 0b000000010000000100\nconst LifecycleEffectMask = /*          */ 0b000000001110100100\nconst HostEffectMask = /*               */ 0b000000011111111111\nconst Incomplete = /*                   */ 0b000000100000000000\nconst ShouldCapture = /*                */ 0b000001000000000000\nconst ForceUpdateForLegacySuspense = /* */ 0b000100000000000000\nconst PassiveStatic = /*                */ 0b001000000000000000\nconst BeforeMutationMask = /*           */ 0b000000001100001010\nconst MutationMask = /*                 */ 0b000000010010011110\nconst LayoutMask = /*                   */ 0b000000000010100100\nconst PassiveMask = /*                  */ 0b000000001000001000\nconst StaticMask = /*                   */ 0b001000000000000000\nconst MountLayoutDev = /*               */ 0b010000000000000000\nconst MountPassiveDev = /*              */ 0b100000000000000000\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-lanes",children:"React Fiber Lanes"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js",children:["Assign ",(0,s.jsx)(n.code,{children:"Lane"})," to ",(0,s.jsx)(n.code,{children:"Update"})]}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Legacy \u6a21\u5f0f: \u8fd4\u56de SyncLane."}),"\n",(0,s.jsx)(n.li,{children:"Blocking \u6a21\u5f0f: \u8fd4\u56de SyncLane."}),"\n",(0,s.jsxs)(n.li,{children:["Concurrent \u6a21\u5f0f:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u6b63\u5e38\u60c5\u51b5: \u6839\u636e\u5f53\u524d\u7684\u8c03\u5ea6\u4f18\u5148\u7ea7\u6765\u751f\u6210\u4e00\u4e2a lane."}),"\n",(0,s.jsxs)(n.li,{children:["\u5904\u4e8e Suspense \u8fc7\u7a0b\u4e2d: \u4f1a\u4f18\u5148\u9009\u62e9 ",(0,s.jsx)(n.code,{children:"TransitionLanes"})," \u901a\u9053\u4e2d\u7684\u7a7a\u95f2\u901a\u9053 (\u6216\u6700\u9ad8\u4f18\u5148\u7ea7)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export function requestUpdateLane(fiber: Fiber): Lane {\n  const mode = fiber.mode\n\n  if ((mode & BlockingMode) === NoMode) {\n    // Legacy \u6a21\u5f0f.\n    return SyncLane\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    // Blocking \u6a21\u5f0f.\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? SyncLane\n      : SyncBatchedLane\n  }\n\n  // Concurrent \u6a21\u5f0f.\n  if (currentEventWipLanes === NoLanes)\n    currentEventWipLanes = workInProgressRootIncludedLanes\n\n  const isTransition = requestCurrentTransition() !== NoTransition\n\n  if (isTransition) {\n    // \u7279\u6b8a\u60c5\u51b5, \u5904\u4e8e Suspense \u8fc7\u7a0b\u4e2d.\n    if (currentEventPendingLanes !== NoLanes) {\n      currentEventPendingLanes\n        = mostRecentlyUpdatedRoot !== null\n          ? mostRecentlyUpdatedRoot.pendingLanes\n          : NoLanes\n    }\n\n    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes)\n  }\n\n  // \u6b63\u5e38\u60c5\u51b5, \u83b7\u53d6\u8c03\u5ea6\u4f18\u5148\u7ea7.\n  let lane\n  const schedulerPriority = getCurrentPriorityLevel()\n\n  if (\n    (executionContext & DiscreteEventContext) !== NoContext\n    && schedulerPriority === UserBlockingSchedulerPriority\n  ) {\n    // `executionContext` \u5b58\u5728\u8f93\u5165\u4e8b\u4ef6, \u4e14\u8c03\u5ea6\u4f18\u5148\u7ea7\u662f\u7528\u6237\u963b\u585e\u6027\u8d28.\n    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes)\n  } else {\n    // \u8c03\u5ea6\u4f18\u5148\u7ea7\u8f6c\u6362\u4e3a\u8f66\u9053\u6a21\u578b.\n    const schedulerLanePriority\n      = schedulerPriorityToLanePriority(schedulerPriority)\n    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes)\n  }\n\n  return lane\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberLane.new.js",children:["Global ",(0,s.jsx)(n.code,{children:"renderLanes"})]}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["Fiber \u6811\u6784\u9020\u8fc7\u7a0b\u4e2d (",(0,s.jsx)(n.code,{children:"Render Phase"}),"),\n\u82e5 Fiber \u5bf9\u8c61\u6216 Update \u5bf9\u8c61\u4f18\u5148\u7ea7 (",(0,s.jsx)(n.code,{children:"fiber.lanes"}),"/",(0,s.jsx)(n.code,{children:"update.lane"}),") \u6bd4\u5168\u5c40\u6e32\u67d3\u4f18\u5148\u7ea7\u4f4e,\n\u5219\u5c06\u4f1a\u88ab\u5ffd\u7565 (\u8282\u70b9\u672a\u66f4\u65b0, \u53ef\u4ee5\u76f4\u63a5\u590d\u7528)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  const pendingLanes = root.pendingLanes\n\n  if (pendingLanes === NoLanes)\n    return NoLanes\n\n  let nextLanes = NoLanes\n  const suspendedLanes = root.suspendedLanes\n  const pingedLanes = root.pingedLanes\n  const nonIdlePendingLanes = pendingLanes & NonIdleLanes\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes)\n    } else {\n      const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes\n\n      if (nonIdlePingedLanes !== NoLanes)\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes)\n    }\n  } else {\n    const unblockedLanes = pendingLanes & ~suspendedLanes\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes)\n    } else {\n      if (pingedLanes !== NoLanes)\n        nextLanes = getHighestPriorityLanes(pingedLanes)\n    }\n  }\n\n  if (nextLanes === NoLanes)\n    return NoLanes\n\n  if (\n    wipLanes !== NoLanes\n    && wipLanes !== nextLanes\n    && (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    const nextLane = getHighestPriorityLane(nextLanes)\n    const wipLane = getHighestPriorityLane(wipLanes)\n\n    if (\n      nextLane >= wipLane\n      || (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      return wipLanes\n    }\n  }\n\n  if (\n    allowConcurrentByDefault\n    && (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Do nothing, use the lanes as they were assigned.\n  } else if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    nextLanes |= pendingLanes & DefaultLane\n  }\n\n  const entangledLanes = root.entangledLanes\n\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements\n    let lanes = nextLanes & entangledLanes\n\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes)\n      const lane = 1 << index\n      nextLanes |= entanglements[index]\n      lanes &= ~lane\n    }\n  }\n\n  return nextLanes\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Lanes model ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/pull/18796",children:"use case"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// task \u4e0e batchTask \u7684\u4f18\u5148\u7ea7\u662f\u5426\u91cd\u53e0:\n// 1. expirationTime:\nconst isTaskIncludedInBatch = priorityOfTask >= priorityOfBatch\n// 2. Lanes:\nconst isTaskIncludedInBatch = (task & batchOfTasks) !== 0\n\n// \u5f53\u540c\u65f6\u5904\u7406\u4e00\u7ec4\u4efb\u52a1, \u8be5\u7ec4\u5185\u6709\u591a\u4e2a\u4efb\u52a1, \u4e14\u6bcf\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e0d\u4e00\u81f4:\n// 1. expirationTime:\nconst isTaskIncludedInBatch\n  = taskPriority <= highestPriorityInRange\n  && taskPriority >= lowestPriorityInRange\n// 2. Lanes:\nconst isTaskIncludedInBatch = (task & batchOfTasks) !== 0\n\n// \u4ece group \u4e2d\u589e\u5220 task:\n// 1. expirationTime (need list):\ntask.prev.next = task.next\n\nlet current = queue\nwhile (task.expirationTime >= current.expirationTime)\n  current = current.next\n\ntask.next = current.next\ncurrent.next = task\n\nconst isTaskIncludedInBatch\n  = taskPriority <= highestPriorityInRange\n  && taskPriority >= lowestPriorityInRange\n\n// 2. Lanes:\nbatchOfTasks &= ~task // Delete task.\nbatchOfTasks |= task // Add task.\nconst isTaskIncludedInBatch = (task & batchOfTasks) !== 0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-trees",children:"React Fiber Trees"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"current"})," Fiber tree: rendered to screen."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"workInProgress"})," Fiber tree: under reconciliation."]}),"\n",(0,s.jsxs)(n.li,{children:["When ",(0,s.jsx)(n.code,{children:"workInProgress"})," Fiber tree complete ",(0,s.jsx)(n.code,{children:"render"})," + ",(0,s.jsx)(n.code,{children:"commit"}),",\nswap 2 Fiber tree:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reuse Fiber objects."}),"\n",(0,s.jsx)(n.li,{children:"Reduce memory usage and GC time."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FiberRoot"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FiberRoot.current = currentHostRootFiber"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FiberRoot.finishedWork = workInProgressHostRootFiber"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"currentHostRootFiber.stateNode = FiberRoot"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"workInProgressHostRootFiber.stateNode = FiberRoot"}),"."]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"currentHostRootFiber.alternate = workInProgressHostRootFiber"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"workInProgressHostRootFiber.alternate = currentHostRootFiber"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactElement"})," tree -> ",(0,s.jsx)(n.code,{children:"Fiber"})," tree -> ",(0,s.jsx)(n.code,{children:"DOM"})," tree."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://7kms.github.io/react-illustration-series/main/fibertree-prepare",children:(0,s.jsx)(n.img,{alt:"React Fiber Trees",src:r(7385).A+"",width:"1325",height:"899"})})}),"\n",(0,s.jsx)(n.h3,{id:"react-fiber-work-loop",children:"React Fiber Work Loop"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://7kms.github.io/react-illustration-series/main/reconciler-workflow",children:(0,s.jsx)(n.img,{alt:"React Fiber Work Loop",src:r(9541).A+"",width:"921",height:"638"})})}),"\n",(0,s.jsx)(n.h2,{id:"react-reconciler",children:"React Reconciler"}),"\n",(0,s.jsx)(n.h3,{id:"reconciler-render-workflow",children:"Reconciler Render Workflow"}),"\n",(0,s.jsx)(n.p,{children:"Reconciler construct Fiber tree:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["scheduleUpdateOnFiber:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u9996\u6b21 render \u76f4\u63a5\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"performWorkOnRoot"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u518d\u6b21 render \u9700\u8981\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"ensureRootIsScheduled"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"ensureRootIsScheduled."}),"\n",(0,s.jsx)(n.li,{children:"flushSyncCallbacks."}),"\n",(0,s.jsxs)(n.li,{children:["performSyncWorkOnRoot / performConcurrentWorkOnRoot:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"performConcurrentWorkOnRoot"})," \u652f\u6301\u53ef\u4e2d\u65ad\u6e32\u67d3:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u6b64\u51fd\u6570\u9996\u5148\u68c0\u67e5\u662f\u5426\u5904\u4e8e render \u8fc7\u7a0b\u4e2d,\n\u662f\u5426\u9700\u8981\u6062\u590d\u4e0a\u4e00\u6b21\u6e32\u67d3."}),"\n",(0,s.jsxs)(n.li,{children:["\u5982\u679c\u672c\u6b21\u6e32\u67d3\u88ab\u4e2d\u65ad,\n\u6b64\u51fd\u6570\u6700\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 ",(0,s.jsx)(n.code,{children:"performConcurrentWorkOnRoot"})," \u51fd\u6570,\n\u7b49\u5f85\u4e0b\u4e00\u6b21 Scheduler \u8c03\u5ea6."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["renderRootSync / renderRootConcurrent:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u6b64\u51fd\u6570\u4f1a\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"prepareFreshStack"}),", \u91cd\u7f6e FiberRoot \u4e0a\u7684\u5168\u5c40\u5c5e\u6027, \u91cd\u7f6e Fiber Work Loop \u5168\u5c40\u53d8\u91cf."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6b64\u51fd\u6570\u4f1a\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"workInProgressRoot = FiberRoot"}),", \u8868\u793a\u6b63\u5728\u8fdb\u884c render."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6b64\u51fd\u6570\u9000\u51fa\u524d, \u4f1a\u91cd\u7f6e ",(0,s.jsx)(n.code,{children:"workInProgressRoot = null"}),", \u8868\u793a\u6ca1\u6709\u6b63\u5728\u8fdb\u884c\u4e2d\u7684 render."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6b64\u51fd\u6570\u9000\u51fa\u524d, \u4f1a\u6302\u8f7d ",(0,s.jsx)(n.code,{children:"FiberRoot.finishedWork = workInProgressHostRootFiber"}),".\n\u6b64\u65f6 ",(0,s.jsx)(n.code,{children:"HostRootFiber"})," \u4e0a\u6302\u8f7d\u4e86\u526f\u4f5c\u7528\u961f\u5217, \u5c42\u7ea7\u8d8a\u6df1\u5b50\u8282\u70b9\u526f\u4f5c\u7528\u8d8a\u9760\u524d."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["workLoopSync / workLoopConcurrent:\n\u5faa\u73af\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"performUnitOfWork"}),",\n\u76f4\u5230 ",(0,s.jsx)(n.code,{children:"workInProgress === null"})," \u6216\u7528\u5b8c\u5f53\u524d\u65f6\u95f4\u5206\u7247."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"performUnitOfWork(workInProgress)"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5b58\u5728\u5b50\u8282\u70b9\uff0c ",(0,s.jsx)(n.code,{children:"beginWork"})," \u4e0e ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u4e0d\u5728\u540c\u4e00\u6b21\u5faa\u73af\u91cc\u8c03\u7528:\n\u6267\u884c\u5b8c ",(0,s.jsx)(n.code,{children:"beginWork"})," \u540e,\n\u4f18\u5148\u5411\u4e0b\u904d\u5386, \u6267\u884c\u5b50\u8282\u70b9\u7684 ",(0,s.jsx)(n.code,{children:"beginWork"})," \u4e0e ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"}),",\n\u5728 N \u6b21\u5faa\u73af\u540e\u518d\u5411\u4e0a\u56de\u6eaf."]}),"\n",(0,s.jsxs)(n.li,{children:["\u4e0d\u5b58\u5728\u5b50\u8282\u70b9\uff0c ",(0,s.jsx)(n.code,{children:"beginWork"})," \u4e0e ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u5728\u540c\u4e00\u6b21\u5faa\u73af\u91cc\u8c03\u7528."]}),"\n",(0,s.jsxs)(n.li,{children:["\u82e5 ",(0,s.jsx)(n.code,{children:"beginWork"})," \u8fd4\u56de ",(0,s.jsx)(n.code,{children:"next"})," \u8282\u70b9,\n\u5219\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"workInProgress = next"})," \u8fdb\u884c DFS \u904d\u5386,\n\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570."]}),"\n",(0,s.jsxs)(n.li,{children:["\u82e5 ",(0,s.jsx)(n.code,{children:"beginWork"})," \u8fd4\u56de ",(0,s.jsx)(n.code,{children:"null"})," \u8282\u70b9,\n\u5219\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u51fd\u6570\u5b8c\u6210\u8282\u70b9\u5904\u7406."]}),"\n",(0,s.jsxs)(n.li,{children:["\u82e5\u5b58\u5728\u5144\u5f1f\u8282\u70b9,\n",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u4f1a\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"workInProgress = siblingFiber"})," \u8fdb\u884c DFS \u904d\u5386,\n\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570."]}),"\n",(0,s.jsxs)(n.li,{children:["\u82e5\u5230\u8fbe\u5b50\u53f6\u8282\u70b9,\n",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u4f1a\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"workInProgress = returnFiber"})," \u8fdb\u884c DFS \u56de\u6eaf,\n\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"beginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u6839\u636e ",(0,s.jsx)(n.code,{children:"ReactElement"})," \u5bf9\u8c61\u521b\u5efa\u6240\u6709\u7684 Fiber \u8282\u70b9, \u6700\u7ec8\u6784\u9020\u51fa Fiber \u6811\u5f62\u7ed3\u6784\n(\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"return"})," \u548c ",(0,s.jsx)(n.code,{children:"sibling"})," \u6307\u9488)."]}),"\n",(0,s.jsxs)(n.li,{children:["\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"updateXXX"}),", \u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),"/",(0,s.jsx)(n.code,{children:"fiber.stateNode"})," \u7b49\u72b6\u6001."]}),"\n",(0,s.jsxs)(n.li,{children:["\u975e\u5b50\u53f6\u8282\u70b9\u8fd4\u56de\u5b50\u8282\u70b9, \u8fdb\u884c DFS \u904d\u5386; \u5b50\u53f6\u8282\u70b9\u8fd4\u56de ",(0,s.jsx)(n.code,{children:"null"}),", \u76f4\u63a5\u8fdb\u5165 ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u9636\u6bb5."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateHostRoot/updateXXXComponent"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u6839\u636e ",(0,s.jsx)(n.code,{children:"fiber.pendingProps"}),"/",(0,s.jsx)(n.code,{children:"fiber.updateQueue"})," \u7b49\u8f93\u5165\u6570\u636e\u72b6\u6001,\n\u8ba1\u7b97 ",(0,s.jsx)(n.code,{children:"fiber.memoizedState"})," \u4f5c\u4e3a\u8f93\u51fa\u72b6\u6001."]}),"\n",(0,s.jsxs)(n.li,{children:["ClassComponent:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u6784\u5efa ",(0,s.jsx)(n.code,{children:"React.Component"})," \u5b9e\u4f8b."]}),"\n",(0,s.jsxs)(n.li,{children:["\u628a\u65b0\u5b9e\u4f8b\u6302\u8f7d\u5230 ",(0,s.jsx)(n.code,{children:"fiber.stateNode"})," \u4e0a."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6267\u884c ",(0,s.jsx)(n.code,{children:"render"})," \u4e4b\u524d\u7684\u751f\u547d\u5468\u671f\u51fd\u6570."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6267\u884c ",(0,s.jsx)(n.code,{children:"render"})," \u65b9\u6cd5, \u83b7\u53d6\u4e0b\u7ea7 ",(0,s.jsx)(n.code,{children:"ReactElement"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),", \u6807\u8bb0\u526f\u4f5c\u7528."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["FunctionComponent:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u6267\u884c ",(0,s.jsx)(n.code,{children:"renderWithHooks()"})," -> ",(0,s.jsx)(n.code,{children:"FunctionComponent()"}),", \u83b7\u53d6\u4e0b\u7ea7 ",(0,s.jsx)(n.code,{children:"ReactElement"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),", \u6807\u8bb0\u526f\u4f5c\u7528."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["HostComponent.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pendingProps.children"})," \u4f5c\u4e3a\u4e0b\u7ea7 ",(0,s.jsx)(n.code,{children:"ReactElement"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u5982\u679c\u4e0b\u7ea7\u8282\u70b9\u662f\u6587\u672c\u8282\u70b9, \u5219\u8bbe\u7f6e\u4e0b\u7ea7\u8282\u70b9\u4e3a ",(0,s.jsx)(n.code,{children:"null"})," (\u8fdb\u5165 ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u9636\u6bb5)."]}),"\n",(0,s.jsxs)(n.li,{children:["\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),", \u6807\u8bb0\u526f\u4f5c\u7528."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u6839\u636e\u5b9e\u9645\u60c5\u51b5, \u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),", \u6807\u8bb0\u526f\u4f5c\u7528."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6839\u636e\u83b7\u53d6\u7684\u4e0b\u7ea7 ",(0,s.jsx)(n.code,{children:"ReactElement"})," \u5bf9\u8c61, \u8c03\u7528 ",(0,s.jsx)(n.code,{children:"reconcileChildren"})," \u751f\u6210 ",(0,s.jsx)(n.code,{children:"Fiber"})," \u5b50\u8282\u70b9 (\u53ea\u751f\u6210\u6b21\u7ea7\u5b50\u8282\u70b9)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactDOMComponent.createElement()"})," / ",(0,s.jsx)(n.code,{children:"ReactClassComponent.render()"})," / ",(0,s.jsx)(n.code,{children:"ReactFunctionComponent()"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"reconcileChildren"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["mountChildFibers/reconcileChildFibers:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mountChildFibers"}),": similar logic, not tracking side effects."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reconcileChildFibers"}),": similar logic, tracking side effects."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reconcileSingleElement"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reconcileSingleTextNode"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reconcileSinglePortal"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reconcileChildrenArray"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reconcileChildrenIterator"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeUnitOfWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5f53 ",(0,s.jsx)(n.code,{children:"reconcileChildren"})," \u8fd4\u56de\u503c\u4e3a ",(0,s.jsx)(n.code,{children:"null"})," \u65f6, \u8868\u793a DFS \u8fdb\u884c\u5230\u5b50\u53f6\u8282\u70b9,\n",(0,s.jsx)(n.code,{children:"performUnitOfWork"})," \u4f1a\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"completeUnitOfWork"})," \u51fd\u6570."]}),"\n",(0,s.jsxs)(n.li,{children:["\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"completeWork"})," \u8fdb\u884c ",(0,s.jsx)(n.code,{children:"render"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u628a\u5f53\u524d Fiber \u5bf9\u8c61\u7684\u526f\u4f5c\u7528\u961f\u5217 (",(0,s.jsx)(n.code,{children:"firstEffect"})," \u4e0e ",(0,s.jsx)(n.code,{children:"lastEffect"}),")\n\u52a0\u5230\u7236\u8282\u70b9\u7684\u526f\u4f5c\u7528\u961f\u5217\u4e4b\u540e, \u66f4\u65b0\u7236\u8282\u70b9\u7684 ",(0,s.jsx)(n.code,{children:"firstEffect"})," \u548c ",(0,s.jsx)(n.code,{children:"lastEffect"})," \u6307\u9488."]}),"\n",(0,s.jsxs)(n.li,{children:["\u8bc6\u522b ",(0,s.jsx)(n.code,{children:"beginWork"})," \u9636\u6bb5\u8bbe\u7f6e\u7684 ",(0,s.jsx)(n.code,{children:"fiber.flags"}),",\n\u82e5\u5f53\u524d Fiber \u5b58\u5728\u526f\u4f5c\u7528 (Effects),\n\u5219\u5c06\u5f53\u524d Fiber \u52a0\u5165\u5230\u7236\u8282\u70b9\u7684 Effects \u961f\u5217,\n\u7b49\u5f85 Commit \u9636\u6bb5\u5904\u7406."]}),"\n",(0,s.jsxs)(n.li,{children:["\u5c06 ",(0,s.jsx)(n.code,{children:"workInProgress"})," \u8bbe\u7f6e\u4e3a ",(0,s.jsx)(n.code,{children:"siblingFiber"})," (DFS \u904d\u5386) \u6216 ",(0,s.jsx)(n.code,{children:"returnFiber"})," (DFS \u56de\u6eaf),\n\u7ee7\u7eed\u6784\u5efa Fiber \u6811."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u521b\u5efa DOM \u5b9e\u4f8b, \u7ed1\u5b9a\u81f3 ",(0,s.jsx)(n.code,{children:"HostComponent"}),"/",(0,s.jsx)(n.code,{children:"HostText"})," ",(0,s.jsx)(n.code,{children:"fiber.stateNode"})," (\u5c40\u90e8\u72b6\u6001)."]}),"\n",(0,s.jsx)(n.li,{children:"\u8bbe\u7f6e DOM \u8282\u70b9\u5c5e\u6027, \u7ed1\u5b9a\u4e8b\u4ef6."}),"\n",(0,s.jsxs)(n.li,{children:["\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),", \u6536\u96c6\u526f\u4f5c\u7528."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number\n) {\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane)\n\n  if (lane === SyncLane) {\n    if (\n      (executionContext & LegacyUnbatchedContext) !== NoContext\n      && (executionContext & (RenderContext | CommitContext)) === NoContext\n    ) {\n      // \u521d\u6b21\u6e32\u67d3.\n      performSyncWorkOnRoot(root)\n    } else {\n      // \u5bf9\u6bd4\u66f4\u65b0.\n      ensureRootIsScheduled(root, eventTime)\n    }\n  }\n\n  mostRecentlyUpdatedRoot = root\n}\n\nfunction performSyncWorkOnRoot(root) {\n  // 1. \u83b7\u53d6\u672c\u6b21render\u7684\u4f18\u5148\u7ea7, \u521d\u6b21\u6784\u9020\u8fd4\u56de NoLanes.\n  const lanes = getNextLanes(root, NoLanes)\n  // 2. \u4eceroot\u8282\u70b9\u5f00\u59cb, \u81f3\u4e0a\u800c\u4e0b\u66f4\u65b0.\n  const exitStatus = renderRootSync(root, lanes)\n  // 3. \u5c06\u6700\u65b0\u7684 Fiber \u6811\u6302\u8f7d\u5230 root.finishedWork \u8282\u70b9\u4e0a.\n  const finishedWork: Fiber = root.current.alternate\n  root.finishedWork = finishedWork\n  root.finishedLanes = lanes\n  // 4. \u8fdb\u5165 Commit \u9636\u6bb5.\n  commitRoot(root)\n}\n\nfunction performConcurrentWorkOnRoot(root) {\n  const originalCallbackNode = root.callbackNode\n\n  // 1. \u5237\u65b0 pending \u72b6\u6001\u7684 effects, \u6709\u53ef\u80fd\u67d0\u4e9b effect \u4f1a\u53d6\u6d88\u672c\u6b21\u4efb\u52a1.\n  const didFlushPassiveEffects = flushPassiveEffects()\n\n  if (didFlushPassiveEffects) {\n    if (root.callbackNode !== originalCallbackNode) {\n      // \u4efb\u52a1\u88ab\u53d6\u6d88, \u9000\u51fa\u8c03\u7528.\n      return null\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // 2. \u83b7\u53d6\u672c\u6b21\u6e32\u67d3\u7684\u4f18\u5148\u7ea7.\n  const lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  )\n\n  // 3. \u6784\u9020 Fiber \u6811.\n  const exitStatus = renderRootConcurrent(root, lanes)\n\n  if (\n    includesSomeLane(\n      workInProgressRootIncludedLanes,\n      workInProgressRootUpdatedLanes\n    )\n  ) {\n    // \u5982\u679c\u5728 render \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u65b0 update, \u4e14\u65b0 update \u7684\u4f18\u5148\u7ea7\u4e0e\u6700\u521d render \u7684\u4f18\u5148\u7ea7\u6709\u4ea4\u96c6.\n    // \u90a3\u4e48\u6700\u521d render \u65e0\u6548, \u4e22\u5f03\u6700\u521d render \u7684\u7ed3\u679c, \u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6.\n    prepareFreshStack(root, NoLanes)\n  } else if (exitStatus !== RootIncomplete) {\n    // 4. \u5f02\u5e38\u5904\u7406: \u6709\u53ef\u80fdfiber\u6784\u9020\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5f02\u5e38.\n    if (exitStatus === RootError)\n      processError()\n\n    const finishedWork = root.current.alternate // Fiber\n    root.finishedWork = finishedWork\n    root.finishedLanes = lanes\n\n    // 5. \u8f93\u51fa: \u6e32\u67d3 Fiber\u6811.\n    finishConcurrentRender(root, exitStatus, lanes)\n  }\n\n  // \u9000\u51fa\u524d\u518d\u6b21\u68c0\u6d4b, \u662f\u5426\u8fd8\u6709\u5176\u4ed6\u66f4\u65b0, \u662f\u5426\u9700\u8981\u53d1\u8d77\u65b0\u8c03\u5ea6.\n  ensureRootIsScheduled(root, now())\n\n  if (root.callbackNode === originalCallbackNode) {\n    // \u6e32\u67d3\u88ab\u963b\u65ad, \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 performConcurrentWorkOnRoot \u51fd\u6570, \u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6.\n    return performConcurrentWorkOnRoot.bind(null, root)\n  }\n\n  return null\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext\n  executionContext |= RenderContext\n\n  // \u5982\u679c FiberRoot \u53d8\u52a8, \u6216\u8005 update.lane \u53d8\u52a8, \u90fd\u4f1a\u5237\u65b0\u6808\u5e27, \u4e22\u5f03\u4e0a\u4e00\u6b21\u6e32\u67d3\u8fdb\u5ea6.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    // \u5237\u65b0\u6808\u5e27.\n    prepareFreshStack(root, lanes)\n  }\n  do {\n    try {\n      workLoopSync()\n      break\n    } catch (thrownValue) {\n      handleError(root, thrownValue)\n    }\n  } while (true)\n\n  // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf, \u8868\u660e render \u7ed3\u675f.\n  executionContext = prevExecutionContext\n  workInProgressRoot = null\n  workInProgressRootRenderLanes = NoLanes\n  return workInProgressRootExitStatus\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext\n  executionContext |= RenderContext\n  const prevDispatcher = pushDispatcher()\n\n  // \u5982\u679c FiberRoot \u53d8\u52a8, \u6216\u8005 update.lane\u53d8\u52a8, \u90fd\u4f1a\u5237\u65b0\u6808\u5e27, \u4e22\u5f03\u4e0a\u4e00\u6b21\u6e32\u67d3\u8fdb\u5ea6.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer()\n    // \u5237\u65b0\u6808\u5e27.\n    prepareFreshStack(root, lanes)\n    startWorkOnPendingInteractions(root, lanes)\n  }\n\n  const prevInteractions = pushInteractions(root)\n\n  do {\n    try {\n      workLoopConcurrent()\n      break\n    } catch (thrownValue) {\n      handleError(root, thrownValue)\n    }\n  } while (true)\n\n  // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf.\n  resetContextDependencies()\n  popDispatcher(prevDispatcher)\n  executionContext = prevExecutionContext\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    return RootIncomplete\n  } else {\n    // Completed the tree.\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null\n    workInProgressRootRenderLanes = NoLanes\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus\n  }\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  // \u91cd\u7f6e FiberRoot \u4e0a\u7684\u5c5e\u6027.\n  root.finishedWork = null\n  root.finishedLanes = NoLanes\n  const timeoutHandle = root.timeoutHandle\n\n  if (timeoutHandle !== noTimeout) {\n    root.timeoutHandle = noTimeout\n    cancelTimeout(timeoutHandle)\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork)\n      interruptedWork = interruptedWork.return\n    }\n  }\n\n  // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf.\n  workInProgressRoot = root\n  workInProgress = createWorkInProgress(root.current, null) // currentHostRootFiber.alternate.\n  workInProgressRootRenderLanes\n    = subtreeRenderLanes\n    = workInProgressRootIncludedLanes\n      = lanes\n  workInProgressRootExitStatus = RootIncomplete\n  workInProgressRootFatalError = null\n  workInProgressRootSkippedLanes = NoLanes\n  workInProgressRootUpdatedLanes = NoLanes\n  workInProgressRootPingedLanes = NoLanes\n}\n\nfunction workLoopSync() {\n  while (workInProgress !== null)\n    performUnitOfWork(workInProgress)\n}\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield.\n  while (workInProgress !== null && !shouldYield())\n    performUnitOfWork(workInProgress)\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // unitOfWork \u5c31\u662f\u88ab\u4f20\u5165\u7684 workInProgress.\n  const current = unitOfWork.alternate\n  const next = beginWork(current, unitOfWork, subtreeRenderLanes)\n  unitOfWork.memoizedProps = unitOfWork.pendingProps\n\n  if (next === null) {\n    // \u5982\u679c\u6ca1\u6709\u6d3e\u751f\u51fa\u65b0\u7684\u4e0b\u7ea7\u8282\u70b9, \u5219\u8fdb\u5165 completeWork \u9636\u6bb5, \u4f20\u5165\u7684\u662f\u5f53\u524d unitOfWork.\n    completeUnitOfWork(unitOfWork)\n  } else {\n    // \u5982\u679c\u6d3e\u751f\u51fa\u65b0\u7684\u4e0b\u7ea7\u8282\u70b9, \u5219\u9012\u5f52\u5904\u7406.\n    workInProgress = next\n  }\n}\n\nfunction _performUnitOfWork_Recursive(unitOfWork: Fiber): void {\n  beginWork(unitOfWork.alternate, unitOfWork, subtreeRenderLanes)\n  if (unitOfWork.child)\n    _performUnitOfWork_Recursive(unitOfWork.child)\n  completeUnitOfWork(unitOfWork)\n  if (unitOfWork.sibling)\n    _performUnitOfWork_Recursive(unitOfWork.sibling)\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  // 1. \u8bbe\u7f6e workInProgress \u4f18\u5148\u7ea7\u4e3a NoLanes (\u6700\u9ad8\u4f18\u5148\u7ea7).\n  const updateLanes = workInProgress.lanes\n  didReceiveUpdate = false\n  workInProgress.lanes = NoLanes\n\n  // 2. \u6839\u636e workInProgress \u8282\u70b9\u7684\u7c7b\u578b, \u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u6d3e\u751f\u51fa\u5b50\u8282\u70b9.\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type\n      const unresolvedProps = workInProgress.pendingProps\n      const resolvedProps\n        = workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps)\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      )\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes)\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes)\n    case HostText:\n      return updateHostText(current, workInProgress)\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes)\n  }\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  let completedWork = unitOfWork\n\n  // \u5916\u5c42\u5faa\u73af\u63a7\u5236\u5e76\u79fb\u52a8\u6307\u9488 (workInProgress/completedWork).\n  do {\n    const current = completedWork.alternate\n    const returnFiber = completedWork.return\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      // 1. \u5904\u7406 Fiber \u8282\u70b9, \u4f1a\u8c03\u7528\u6e32\u67d3\u5668 (\u5173\u8054 Fiber \u8282\u70b9\u548c DOM \u5bf9\u8c61, \u7ed1\u5b9a\u4e8b\u4ef6\u7b49).\n      const next = completeWork(current, completedWork, subtreeRenderLanes)\n\n      if (next !== null) {\n        // \u5982\u679c\u6d3e\u751f\u51fa\u5176\u4ed6\u7684\u5b50\u8282\u70b9, \u5219\u56de\u5230 beginWork \u9636\u6bb5\u8fdb\u884c\u5904\u7406.\n        workInProgress = next\n        return\n      }\n\n      // \u91cd\u7f6e\u5b50\u8282\u70b9\u7684\u4f18\u5148\u7ea7.\n      resetChildLanes(completedWork)\n\n      if (\n        returnFiber !== null\n        && (returnFiber.flags & Incomplete) === NoFlags\n      ) {\n        // 2. \u6536\u96c6\u5f53\u524d Fiber \u8282\u70b9\u4ee5\u53ca\u5176\u5b50\u6811\u7684\u526f\u4f5c\u7528 Effects.\n        // 2.1 \u628a\u5b50\u8282\u70b9\u7684\u526f\u4f5c\u7528\u961f\u5217\u6dfb\u52a0\u5230\u7236\u8282\u70b9\u4e0a.\n        if (returnFiber.firstEffect === null)\n          returnFiber.firstEffect = completedWork.firstEffect\n\n        if (completedWork.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null)\n            returnFiber.lastEffect.nextEffect = completedWork.firstEffect\n\n          returnFiber.lastEffect = completedWork.lastEffect\n        }\n\n        // 2.2 \u5982\u679c\u5f53\u524d Fiber \u8282\u70b9\u6709\u526f\u4f5c\u7528, \u5c06\u5176\u6dfb\u52a0\u5230\u5b50\u8282\u70b9\u7684\u526f\u4f5c\u7528\u961f\u5217\u4e4b\u540e.\n        const flags = completedWork.flags\n\n        if (returnFiber.lastEffect !== null)\n          returnFiber.lastEffect.nextEffect = completedWork\n        else\n          returnFiber.firstEffect = completedWork\n\n        returnFiber.lastEffect = completedWork\n      }\n    }\n\n    const siblingFiber = completedWork.sibling\n\n    if (siblingFiber !== null) {\n      // \u5982\u679c\u6709\u5144\u5f1f\u8282\u70b9, \u8fd4\u56de\u4e4b\u540e\u518d\u6b21\u8fdb\u5165 beginWork \u9636\u6bb5.\n      workInProgress = siblingFiber\n      return\n    }\n\n    // \u79fb\u52a8\u6307\u9488, \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9.\n    completedWork = returnFiber\n    workInProgress = completedWork\n  } while (completedWork !== null)\n\n  // \u5df2\u56de\u6eaf\u5230\u6839\u8282\u70b9, \u8bbe\u7f6e workInProgressRootExitStatus = RootCompleted.\n  if (workInProgressRootExitStatus === RootIncomplete)\n    workInProgressRootExitStatus = RootCompleted\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const newProps = workInProgress.pendingProps\n\n  switch (workInProgress.tag) {\n    case HostRoot: {\n      const fiberRoot: FiberRoot = workInProgress.stateNode\n\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext\n        fiberRoot.pendingContext = null\n      }\n\n      if (current === null || current.child === null) {\n        // \u8bbe\u7f6e fiber.flags.\n        workInProgress.flags |= Snapshot\n      }\n\n      return null\n    }\n    case HostComponent: {\n      popHostContext(workInProgress)\n      const rootContainerInstance = getRootHostContainer()\n      const type = workInProgress.type\n      const currentHostContext = getHostContext()\n\n      // 1. \u521b\u5efa DOM \u5bf9\u8c61.\n      const instance = createInstance(\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress\n      )\n\n      // 2. \u628a\u5b50\u6811\u4e2d\u7684 DOM \u5bf9\u8c61 append \u5230\u672c\u8282\u70b9\u7684 DOM \u5bf9\u8c61\u4e4b\u540e.\n      appendAllChildren(instance, workInProgress, false, false)\n\n      // 3. \u8bbe\u7f6e stateNode \u5c5e\u6027, \u6307\u5411 DOM \u5bf9\u8c61.\n      workInProgress.stateNode = instance\n\n      if (\n        // 4. \u8bbe\u7f6eDOM\u5bf9\u8c61\u7684\u5c5e\u6027, \u7ed1\u5b9a\u4e8b\u4ef6\u7b49.\n        finalizeInitialChildren(\n          instance,\n          type,\n          newProps,\n          rootContainerInstance,\n          currentHostContext\n        )\n      ) {\n        // \u8bbe\u7f6e fiber.flags (Update).\n        markUpdate(workInProgress)\n      }\n\n      if (workInProgress.ref !== null) {\n        // \u8bbe\u7f6e fiber.flags (Ref).\n        markRef(workInProgress)\n      }\n\n      return null\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"host-root-fiber-rendering",children:"Host Root Fiber Rendering"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function updateHostRoot(current, workInProgress, renderLanes) {\n  // 1. \u72b6\u6001\u8ba1\u7b97, \u66f4\u65b0\u6574\u5408\u5230 workInProgress.memoizedState.\n  const updateQueue = workInProgress.updateQueue\n  const nextProps = workInProgress.pendingProps\n  const prevState = workInProgress.memoizedState\n  const prevChildren = prevState !== null ? prevState.element : null\n  cloneUpdateQueue(current, workInProgress)\n  // \u904d\u5386 updateQueue.shared.pending, \u63d0\u53d6\u6709\u8db3\u591f\u4f18\u5148\u7ea7\u7684 update\u5bf9\u8c61, \u8ba1\u7b97\u51fa\u6700\u7ec8\u7684\u72b6\u6001 workInProgress.memoizedState.\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes)\n  const nextState = workInProgress.memoizedState\n\n  // 2. \u83b7\u53d6\u4e0b\u7ea7 ReactElement \u5bf9\u8c61.\n  const nextChildren = nextState.element\n  const root: FiberRoot = workInProgress.stateNode\n\n  // 3. \u6839\u636e ReactElement \u5bf9\u8c61, \u8c03\u7528 reconcileChildren \u751f\u6210 Fiber \u5b50\u8282\u70b9 (\u53ea\u751f\u6210\u6b21\u7ea7\u5b50\u8282\u70b9).\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes)\n  return workInProgress.child\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"host-component-fiber-rendering",children:"Host Component Fiber Rendering"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n) {\n  // 1. \u72b6\u6001\u8ba1\u7b97, \u7531\u4e8e HostComponent \u662f\u65e0\u72b6\u6001\u7ec4\u4ef6, \u53ea\u9700\u8981\u6536\u96c6 nextProps.\n  const type = workInProgress.type\n  const nextProps = workInProgress.pendingProps\n  const prevProps = current !== null ? current.memoizedProps : null\n\n  // 2. \u83b7\u53d6\u4e0b\u7ea7 ReactElement \u5bf9\u8c61.\n  let nextChildren = nextProps.children\n  const isDirectTextChild = shouldSetTextContent(type, nextProps)\n\n  if (isDirectTextChild) {\n    // \u5982\u679c\u5b50\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u6587\u672c\u8282\u70b9, \u4e0d\u7528\u518d\u521b\u5efa\u4e00\u4e2a HostText \u7c7b\u578b\u7684 Fiber.\n    nextChildren = null\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // \u8bbe\u7f6e fiber.flags.\n    workInProgress.flags |= ContentReset\n  }\n\n  // \u8bbe\u7f6e fiber.flags.\n  markRef(current, workInProgress)\n\n  // 3. \u6839\u636e ReactElement \u5bf9\u8c61, \u8c03\u7528 reconcileChildren \u751f\u6210 Fiber \u5b50\u8282\u70b9(\u53ea\u751f\u6210\u6b21\u7ea7\u5b50\u8282\u70b9)\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes)\n  return workInProgress.child\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"class-component-fiber-rendering",children:"Class Component Fiber Rendering"}),"\n",(0,s.jsx)(n.h4,{id:"function-component-fiber-rendering",children:"Function Component Fiber Rendering"}),"\n",(0,s.jsx)(n.h3,{id:"reconciler-update-workflow",children:"Reconciler Update Workflow"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js",children:"Update and Update Queue"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"UpdateQueue"})," \u662f\u4e00\u4e2a",(0,s.jsx)(n.strong,{children:"\u5faa\u73af\u961f\u5217"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\u521b\u5efa ",(0,s.jsx)(n.code,{children:"Update"})," \u65f6\u673a (",(0,s.jsx)(n.code,{children:"createUpdate"}),"/",(0,s.jsx)(n.code,{children:"enqueueUpdate"}),"):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactFiberReconciler.updateContainer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactFiberClassComponent.setState"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactFiberHooks.dispatchAction"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Reconciler.Render"})," \u9636\u6bb5, \u8c03\u7528 ",(0,s.jsx)(n.code,{children:"XXXClassInstance"}),"/",(0,s.jsx)(n.code,{children:"useXXX"}),",\n\u904d\u5386\u5904\u7406 Update Queue (",(0,s.jsx)(n.code,{children:"processUpdateQueue"}),"/",(0,s.jsx)(n.code,{children:"HooksDispatcherOnUpdate"}),"), \u8ba1\u7b97\u51fa memoizedState,\n\u5229\u7528 pendingProps \u4e0e memoizedState \u4ea7\u751f\u65b0\u7684 ReactElement (",(0,s.jsx)(n.code,{children:"ClassComponent.render()"}),"/",(0,s.jsx)(n.code,{children:"FunctionComponent()"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface Update<State> {\n  lane: Lane\n  tag: 'UpdateState' | 'ReplaceState' | 'ForceUpdate' | 'CaptureUpdate'\n  payload: any\n  callback: (() => mixed) | null\n  next: Update<State> | null\n  _eventTime: number\n}\n\ninterface SharedQueue<State> {\n  pending: Update<State> | null\n}\n\ninterface UpdateQueue<State> {\n  baseState: State\n  firstBaseUpdate: Update<State> | null\n  lastBaseUpdate: Update<State> | null\n  shared: SharedQueue<State>\n  effects: Array<Update<State>> | null // Updates with `callback`.\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberClassComponent.new.js",children:"ReactFiberClassComponent.setState"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    // 1. \u83b7\u53d6 ClassComponent \u5b9e\u4f8b\u5bf9\u5e94\u7684 Fiber \u8282\u70b9.\n    const fiber = getInstance(inst)\n    // 2. \u521b\u5efa Update \u5bf9\u8c61.\n    const eventTime = requestEventTime()\n    const lane = requestUpdateLane(fiber)\n    const update = createUpdate(eventTime, lane)\n    update.payload = payload\n\n    if (callback !== undefined && callback !== null)\n      update.callback = callback\n\n    // 3. \u5c06 Update \u5bf9\u8c61\u6dfb\u52a0\u5230\u5f53\u524d Fiber \u8282\u70b9\u7684 updateQueue.\n    enqueueUpdate(fiber, update)\n    // 4. \u8bf7\u6c42\u8c03\u5ea6, \u8fdb\u5165 Reconciler.\n    scheduleUpdateOnFiber(fiber, lane, eventTime)\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js",children:"ReactFiberHooks.dispatchAction"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A\n) {\n  // 1. \u521b\u5efa Update \u5bf9\u8c61.\n  const eventTime = requestEventTime()\n  const lane = requestUpdateLane(fiber)\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: null,\n  }\n\n  // 2. \u5c06 Update \u5bf9\u8c61\u6dfb\u52a0\u5230\u5f53\u524d Hook \u5bf9\u8c61\u7684 updateQueue.\n  const pending = queue.pending\n\n  if (pending === null) {\n    update.next = update\n  } else {\n    update.next = pending.next\n    pending.next = update\n  }\n\n  queue.pending = update\n\n  // 3. \u8bf7\u6c42\u8c03\u5ea6, \u8fdb\u5165 Reconciler.\n  scheduleUpdateOnFiber(fiber, lane, eventTime)\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"createUpdate."}),"\n",(0,s.jsx)(n.li,{children:"enqueueUpdate."}),"\n",(0,s.jsx)(n.li,{children:"scheduleUpdateOnFiber."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"markUpdateLaneFromFiberToRoot"}),":\n\u627e\u51fa Fiber \u6811\u4e2d\u53d7\u5230\u672c\u6b21 ",(0,s.jsx)(n.code,{children:"Update"})," \u5f71\u54cd\u7684\u6240\u6709\u8282\u70b9 (\u5b58\u5728\u66f4\u65b0\u53ef\u80fd),\n\u8bbe\u7f6e\u8fd9\u4e9b\u8282\u70b9\u7684 ",(0,s.jsx)(n.code,{children:"fiber.lanes"})," \u6216 ",(0,s.jsx)(n.code,{children:"fiber.childLanes"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"ensureRootIsScheduled."}),"\n",(0,s.jsx)(n.li,{children:"flushSyncCallbacks."}),"\n",(0,s.jsx)(n.li,{children:"performSyncWorkOnRoot / performConcurrentWorkOnRoot."}),"\n",(0,s.jsx)(n.li,{children:"renderRootSync / renderRootConcurrent."}),"\n",(0,s.jsx)(n.li,{children:"workLoopSync / workLoopConcurrent."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"performUnitOfWork(workInProgress)"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"beginWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u82e5\u5224\u65ad\u5f53\u524d Fiber \u8282\u70b9\u65e0\u9700\u66f4\u65b0, \u8c03\u7528 ",(0,s.jsx)(n.code,{children:"bailoutOnAlreadyFinishedWork"})," \u5faa\u73af\u68c0\u6d4b\u5b50\u8282\u70b9\u662f\u5426\u9700\u8981\u66f4\u65b0:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance.shouldComponentUpdate() === false"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"workInProgress.pendingProps === current.memoizedProps"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"hasLegacyContextChange() === false"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"checkIfContextChanged(fiber.dependencies) === false"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"includesSomeLane(fiber.lanes, renderLanes) === false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u82e5\u5224\u65ad\u5f53\u524d Fiber \u8282\u70b9\u9700\u8981\u66f4\u65b0, \u8c03\u7528 ",(0,s.jsx)(n.code,{children:"UpdateXXXComponent"})," \u8fdb\u884c\u66f4\u65b0."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"bailoutOnAlreadyFinishedWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u82e5 ",(0,s.jsx)(n.code,{children:"includesSomeLane(renderLanes, workInProgress.childLanes) === false"}),"\n\u8868\u660e\u5b50\u8282\u70b9\u65e0\u9700\u66f4\u65b0, \u53ef\u76f4\u63a5\u8fdb\u5165\u56de\u6eaf\u9636\u6bb5 (",(0,s.jsx)(n.code,{children:"completeUnitOfWork"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["\u82e5 ",(0,s.jsx)(n.code,{children:"includesSomeLane(renderLanes, workInProgress.childLanes) === true"}),",\n\u8868\u660e\u5b50\u8282\u70b9\u9700\u8981\u66f4\u65b0, clone \u5e76\u8fd4\u56de\u5b50\u8282\u70b9."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"updateHostRoot/updateXXXComponent"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactClassComponent.render()"})," / ",(0,s.jsx)(n.code,{children:"ReactFunctionComponent()"})," / ",(0,s.jsx)(n.code,{children:"ReactDOMComponent.createElement()"}),":\n\u904d\u5386\u5904\u7406 Update Queue (",(0,s.jsx)(n.code,{children:"processUpdateQueue"}),"/",(0,s.jsx)(n.code,{children:"HooksDispatcherOnUpdate"}),"), \u8ba1\u7b97\u51fa memoizedState,\n\u5229\u7528 pendingProps \u4e0e memoizedState \u4ea7\u751f\u65b0\u7684 ReactElement."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"reconcileChildren"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u901a\u8fc7 ReactElement \u4e0e OldFiber, \u4ea7\u751f\u6216\u590d\u7528 ChildFiber."}),"\n",(0,s.jsxs)(n.li,{children:["\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"fiber.flags"}),", \u6807\u8bb0\u526f\u4f5c\u7528: ",(0,s.jsx)(n.code,{children:"Placement"}),"/",(0,s.jsx)(n.code,{children:"Deletion"}),"/etc."]}),"\n",(0,s.jsxs)(n.li,{children:["\u5bf9\u4e8e ",(0,s.jsx)(n.code,{children:"Deletion"})," Fiber, \u5728 ",(0,s.jsx)(n.code,{children:"beginWork"})," \u9636\u6bb5\u63d0\u524d\u5c06\u5176\u6dfb\u52a0\u5230\u7236\u8282\u70b9\u7684 Effects \u961f\u5217\u4e2d\n(\u8be5\u8282\u70b9\u4f1a\u8131\u79bb Fiber \u6811, \u4e0d\u4f1a\u518d\u8fdb\u5165 ",(0,s.jsx)(n.code,{children:"completeWork"})," \u9636\u6bb5, \u65e0\u6cd5\u5728\u6b64\u9636\u6bb5\u6536\u96c6\u6b64\u8282\u70b9\u526f\u4f5c\u7528)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"reconcileChildFibers."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeUnitOfWork"}),": \u6536\u96c6\u526f\u4f5c\u7528."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"completeWork"}),": \u6536\u96c6\u526f\u4f5c\u7528."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// \u6807\u8bb0\u6240\u6709\u53ef\u80fd\u5b58\u5728\u66f4\u65b0\u7684\u8282\u70b9, \u5e76\u8bbe\u7f6e fiber.lanes \u4e0e fiber.childLanes.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber, // \u88ab\u66f4\u65b0\u7684\u8282\u70b9.\n  lane: Lane\n): FiberRoot | null {\n  // \u8bbe\u7f6e sourceFiber.lanes.\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane)\n  let alternate = sourceFiber.alternate\n\n  if (alternate !== null) {\n    // \u540c\u65f6\u8bbe\u7f6e sourceFiber.alternate.lanes.\n    alternate.lanes = mergeLanes(alternate.lanes, lane)\n  }\n\n  // \u4ece sourceFiber \u5f00\u59cb, \u5411\u4e0a\u904d\u5386\u6240\u6709 Fiber, \u76f4\u5230 HostRootFiber.\n  // \u8bbe\u7f6e\u6cbf\u9014\u6240\u6709 fiber.childLanes \u4e0e fiber.alternate.childLanes.\n  let node = sourceFiber\n  let parent = sourceFiber.return\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane)\n    alternate = parent.alternate\n\n    if (alternate !== null)\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane)\n\n    node = parent\n    parent = parent.return\n  }\n\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode\n    return root\n  } else {\n    return null\n  }\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const updateLanes = workInProgress.lanes\n\n  if (current !== null) {\n    // \u8fdb\u5165\u5bf9\u6bd4.\n    const oldProps = current.memoizedProps\n    const newProps = workInProgress.pendingProps\n    if (\n      oldProps !== newProps\n      || hasLegacyContextChanged()\n      || (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      didReceiveUpdate = true\n    } else if (!includesSomeLane(renderLanes, updateLanes)) {\n      // \u5f53\u524d\u6e32\u67d3\u4f18\u5148\u7ea7 renderLanes \u4e0d\u5305\u62ec fiber.lanes, \u8868\u660e\u5f53\u524d Fiber \u8282\u70b9\u65e0\u9700\u66f4\u65b0.\n      didReceiveUpdate = false\n      // \u8c03\u7528 bailoutOnAlreadyFinishedWork \u5faa\u73af\u68c0\u6d4b\u5b50\u8282\u70b9\u662f\u5426\u9700\u8981\u66f4\u65b0.\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    }\n  }\n\n  // \u5f53\u524d\u8282\u70b9\u9700\u8981\u66f4\u65b0.\n  workInProgress.lanes = NoLanes // \u6700\u9ad8\u4f18\u5148\u7ea7\n\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type\n      const unresolvedProps = workInProgress.pendingProps\n      const resolvedProps\n        = workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps)\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      )\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes)\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes)\n    case HostText:\n      return updateHostText(current, workInProgress)\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes)\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // \u6e32\u67d3\u4f18\u5148\u7ea7\u4e0d\u5305\u62ec workInProgress.childLanes, \u8868\u660e\u5b50\u8282\u70b9\u4e5f\u65e0\u9700\u66f4\u65b0.\n    // \u8fd4\u56de null, \u76f4\u63a5\u8fdb\u5165\u56de\u6eaf\u9636\u6bb5.\n    return null\n  } else {\n    // Fiber \u81ea\u8eab\u65e0\u9700\u66f4\u65b0, \u4f46\u5b50\u8282\u70b9\u9700\u8981\u66f4\u65b0, clone \u5e76\u8fd4\u56de\u5b50\u8282\u70b9.\n    cloneChildFibers(current, workInProgress)\n    return workInProgress.child\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const newProps = workInProgress.pendingProps\n\n  switch (workInProgress.tag) {\n    case HostComponent: {\n      // \u975e\u6587\u672c\u8282\u70b9.\n      popHostContext(workInProgress)\n      const rootContainerInstance = getRootHostContainer()\n      const type = workInProgress.type\n\n      if (current !== null && workInProgress.stateNode !== null) {\n        // \u5904\u7406\u6539\u52a8.\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance\n        )\n\n        if (current.ref !== workInProgress.ref)\n          markRef(workInProgress)\n      }\n\n      return null\n    }\n    case HostText: {\n      // \u6587\u672c\u8282\u70b9.\n      const newText = newProps\n\n      if (current !== null && workInProgress.stateNode !== null) {\n        const oldText = current.memoizedProps\n        // \u5904\u7406\u6539\u52a8.\n        updateHostText(current, workInProgress, oldText, newText)\n      }\n\n      return null\n    }\n  }\n}\n\nfunction updateHostComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  type: Type,\n  newProps: Props,\n  rootContainerInstance: Container\n) {\n  const oldProps = current.memoizedProps\n\n  if (oldProps === newProps)\n    return\n\n  const instance: Instance = workInProgress.stateNode\n  const currentHostContext = getHostContext()\n  const updatePayload = prepareUpdate(\n    instance,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n    currentHostContext\n  )\n  workInProgress.updateQueue = updatePayload\n\n  // \u5982\u679c\u6709\u5c5e\u6027\u53d8\u52a8, \u8bbe\u7f6e fiber.flags |= Update, \u7b49\u5f85 Commit \u9636\u6bb5\u5904\u7406.\n  if (updatePayload)\n    markUpdate(workInProgress)\n}\n\nfunction updateHostText(\n  current: Fiber,\n  workInProgress: Fiber,\n  oldText: string,\n  newText: string\n) {\n  // \u5982\u679c\u6709\u5c5e\u6027\u53d8\u52a8, \u8bbe\u7f6e fiber.flags |= Update, \u7b49\u5f85 Commit \u9636\u6bb5\u5904\u7406.\n  if (oldText !== newText)\n    markUpdate(workInProgress)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"reconciler-diff-workflow",children:"Reconciler Diff Workflow"}),"\n",(0,s.jsx)(n.p,{children:"Reconciler:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"O(n) incomplete tree comparison: only compare same level nodes."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReactElement"})," + Old Children Fiber -> New Children Fiber."]}),"\n",(0,s.jsxs)(n.li,{children:["Create new children fiber (non exist/need update),\ndrop useless children fiber,\nreuse old children fiber,\nset ",(0,s.jsx)(n.code,{children:"fiber.flags"}),": ",(0,s.jsx)(n.code,{children:"Placement"}),"/",(0,s.jsx)(n.code,{children:"Deletion"}),".\nprepare for ",(0,s.jsx)(n.code,{children:"Commit"})," stage."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"key"})," prop to hint for Fiber nodes reuse."]}),"\n",(0,s.jsxs)(n.li,{children:["Detailed diff ",(0,s.jsx)(n.a,{href:"https://7kms.github.io/react-illustration-series/algorithm/diff",children:"algorithm"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"different-types-elements",children:"Different Types Elements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Rebuild element and children."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"same-type-dom-elements",children:"Same Type DOM Elements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Only update the changed attributes."}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"key"})," attribute to match children."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Best Practice"}),": give ",(0,s.jsx)(n.code,{children:"key"})," to ",(0,s.jsx)(n.code,{children:"<li>/<tr>/<tc>"})," elements\n(stable, predictable, unique and not array indexed)."]}),"\n",(0,s.jsx)(n.h4,{id:"same-type-component-elements",children:"Same Type Component Elements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Update the props to match the new element."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"reconcile-array-elements",children:"Reconcile Array Elements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u7b2c\u4e00\u6b21\u5faa\u73af: \u6bd4\u8f83\u516c\u5171\u5e8f\u5217:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4ece\u5de6\u5230\u53f3\u9010\u4e00\u904d\u5386, \u9047\u5230\u4e00\u4e2a\u65e0\u6cd5\u590d\u7528\u7684\u8282\u70b9\u5219\u9000\u51fa\u5faa\u73af."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u7b2c\u4e8c\u6b21\u5faa\u73af: \u6bd4\u8f83\u975e\u516c\u5171\u5e8f\u5217","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u7684\u57fa\u7840\u4e0a, \u5982\u679c oldFiber \u961f\u5217\u904d\u5386\u5b8c\u6210, \u8bc1\u660e newChildren \u961f\u5217\u4e2d\u5269\u4f59\u7684\u5bf9\u8c61\u5168\u90e8\u90fd\u662f\u65b0\u589e."}),"\n",(0,s.jsx)(n.li,{children:"\u6b64\u65f6\u7ee7\u7eed\u904d\u5386\u5269\u4f59\u7684 newChildren \u961f\u5217\u5373\u53ef, \u6ca1\u6709\u989d\u5916\u7684 diff \u6bd4\u8f83."}),"\n",(0,s.jsx)(n.li,{children:"\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u7684\u57fa\u7840\u4e0a, \u5982\u679c oldFiber \u961f\u5217\u6ca1\u6709\u904d\u5386\u5b8c,\n\u9700\u8981\u5c06 oldFiber \u961f\u5217\u4e2d\u5269\u4f59\u7684\u5bf9\u8c61\u90fd\u6dfb\u52a0\u5230\u4e00\u4e2a Map \u96c6\u5408\u4e2d, \u4ee5 oldFiber.key \u4f5c\u4e3a\u952e."}),"\n",(0,s.jsx)(n.li,{children:"\u6b64\u65f6\u7ee7\u7eed\u904d\u5386\u5269\u4f59\u7684 newChildren \u961f\u5217, \u9700\u8981\u7528 newChild.key \u5230 Map \u96c6\u5408\u4e2d\u8fdb\u884c\u67e5\u627e,\n\u5c06\u5339\u914d\u4e0a\u7684 oldFiber \u53d6\u51fa\u4e0e newChild \u8fdb\u884c diff \u6bd4\u8f83."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u6e05\u7406\u5de5\u4f5c:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5728\u7b2c\u4e8c\u6b21\u5faa\u73af\u7ed3\u675f\u540e,\n\u82e5 Map \u96c6\u5408\u4e2d\u8fd8\u6709\u5269\u4f59\u7684 oldFiber,\n\u5219\u8bf4\u660e oldFiber \u90fd\u662f\u88ab\u5220\u9664\u7684\u8282\u70b9, \u9700\u8981\u6253\u4e0a\u5220\u9664\u6807\u8bb0 (",(0,s.jsx)(n.code,{children:"Deletion"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"reconciler-commit-workflow",children:"Reconciler Commit Workflow"}),"\n",(0,s.jsx)(n.h4,{id:"renderer-and-hostconfig-protocol",children:"Renderer and HostConfig Protocol"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Renderer"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Implementing ",(0,s.jsx)(n.code,{children:"HostConfig"})," ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/README.md",children:"protocol"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Rendering fiber tree to real contents:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Web: DOM node."}),"\n",(0,s.jsx)(n.li,{children:"Native: native UI."}),"\n",(0,s.jsx)(n.li,{children:"Server: SSR strings."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Real renderer ",(0,s.jsx)(n.a,{href:"https://github.com/sabertazimi/awesome-web/tree/main/packages/react-renderer/src/renderer",children:"demo"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"HostConfig"})," protocol:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isPrimaryRender: true"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"supportsHydration: true"}),": SSR renderer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"supportsMutation: true"}),": React DOM renderer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"supportsPersistence: true"}),": React Native renderer."]}),"\n",(0,s.jsxs)(n.li,{children:["Platform timer functions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"now."}),"\n",(0,s.jsx)(n.li,{children:"scheduleTimeout."}),"\n",(0,s.jsx)(n.li,{children:"cancelTimeout."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Creation operations:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"createInstance."}),"\n",(0,s.jsx)(n.li,{children:"createTextInstance."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["UI tree operations:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"appendInitialChild."}),"\n",(0,s.jsx)(n.li,{children:"appendChild."}),"\n",(0,s.jsx)(n.li,{children:"appendChildToContainer."}),"\n",(0,s.jsx)(n.li,{children:"removeChildFromContainer."}),"\n",(0,s.jsx)(n.li,{children:"removeChild."}),"\n",(0,s.jsx)(n.li,{children:"clearContainer."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Update props operations:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"finalizeInitialChildren."}),"\n",(0,s.jsx)(n.li,{children:"prepareUpdate."}),"\n",(0,s.jsx)(n.li,{children:"commitUpdate."}),"\n",(0,s.jsx)(n.li,{children:"commitTextUpdate."}),"\n",(0,s.jsx)(n.li,{children:"shouldSetTextContent."}),"\n",(0,s.jsx)(n.li,{children:"resetTextContent."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Context and schedule operations:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"getRootHostContext."}),"\n",(0,s.jsx)(n.li,{children:"getChildHostContext."}),"\n",(0,s.jsx)(n.li,{children:"getPublicInstance."}),"\n",(0,s.jsx)(n.li,{children:"prepareForCommit."}),"\n",(0,s.jsx)(n.li,{children:"resetAfterCommit."}),"\n",(0,s.jsx)(n.li,{children:"preparePortalMount."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"commit-root",children:"Commit Root"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FiberRoot.finishedWork"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u526f\u4f5c\u7528\u961f\u5217\u6302\u8f7d\u5728\u6839\u8282\u70b9\u4e0a (",(0,s.jsx)(n.code,{children:"finishedWork.firstEffect"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["\u6700\u65b0 DOM \u5bf9\u8c61\u6302\u8f7d\u5728 HostComponent Fiber \u4e0a (",(0,s.jsx)(n.code,{children:"fiber.stateNode"}),")."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BeforeMutation"})," phase:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read the state of the host tree right before DOM mutation."}),"\n",(0,s.jsxs)(n.li,{children:["Process\n",(0,s.jsx)(n.code,{children:"Passive"}),"/",(0,s.jsx)(n.code,{children:"Snapshot"}),"/",(0,s.jsx)(n.code,{children:"Deletion"}),"\neffects fiber."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance.getSnapshotBeforeUpdate"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Mutation"})," phase.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mutate the host tree, render UI."}),"\n",(0,s.jsxs)(n.li,{children:["Process\n",(0,s.jsx)(n.code,{children:"ContentReset"}),"/",(0,s.jsx)(n.code,{children:"Ref"}),"/",(0,s.jsx)(n.code,{children:"Visibility"}),"/",(0,s.jsx)(n.code,{children:"Placement"}),"/",(0,s.jsx)(n.code,{children:"Update"}),"/",(0,s.jsx)(n.code,{children:"Deletion"}),"/",(0,s.jsx)(n.code,{children:"Hydrating"}),"\neffects fiber."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Layout"})," phase.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"After DOM mutation."}),"\n",(0,s.jsxs)(n.li,{children:["Process ",(0,s.jsx)(n.code,{children:"Update | Callback"})," effects fiber."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance.componentDidMount/componentDidUpdate"})," (",(0,s.jsx)(n.strong,{children:"synchronous"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance"})," callback for ",(0,s.jsx)(n.code,{children:"setState"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useLayoutEffect"})," (",(0,s.jsx)(n.strong,{children:"synchronous"}),")."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CommitEffects"})," functions located in\n",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCommitWork.new.js",children:"ReactFiberCommitWork"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function commitRoot(root: FiberRoot, recoverableErrors: null | Array<mixed>) {\n  const previousUpdateLanePriority = getCurrentUpdatePriority()\n  const prevTransition = ReactCurrentBatchConfig.transition\n\n  try {\n    ReactCurrentBatchConfig.transition = null\n    setCurrentUpdatePriority(DiscreteEventPriority)\n    commitRootImpl(root, recoverableErrors, previousUpdateLanePriority)\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition\n    setCurrentUpdatePriority(previousUpdateLanePriority)\n  }\n\n  return null\n}\n\nfunction commitRootImpl(\n  root: FiberRoot,\n  recoverableErrors: null | Array<mixed>,\n  renderPriorityLevel: EventPriority\n) {\n  do\n    flushPassiveEffects()\n  while (rootWithPendingPassiveEffects !== null)\n\n  flushRenderPhaseStrictModeWarningsInDEV()\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\n    throw new Error('Should not already be working.')\n\n  const finishedWork = root.finishedWork\n  const lanes = root.finishedLanes\n\n  if (finishedWork === null)\n    return null\n\n  // \u6e05\u7a7a FiberRoot \u5bf9\u8c61\u4e0a\u7684\u5c5e\u6027.\n  root.finishedWork = null\n  root.finishedLanes = NoLanes\n  root.callbackNode = null\n  root.callbackPriority = NoLane\n\n  // Update the first and last pending times on this root.\n  // The new first pending time is whatever is left on the root fiber.\n  const remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes)\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null\n    workInProgress = null\n    workInProgressRootRenderLanes = NoLanes\n  }\n\n  // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible before anything else in commit phase.\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags\n    || (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true\n      pendingPassiveEffectsRemainingLanes = remainingLanes\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects()\n        return null\n      })\n    }\n  }\n\n  // Check if there are any effects in the whole tree.\n  const subtreeHasEffects\n    = (finishedWork.subtreeFlags\n      & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask))\n    !== NoFlags\n  const rootHasEffect\n    = (finishedWork.flags\n      & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask))\n    !== NoFlags\n\n  if (subtreeHasEffects || rootHasEffect) {\n    // Store context.\n    const prevTransition = ReactCurrentBatchConfig.transition\n    const previousPriority = getCurrentUpdatePriority()\n    const prevExecutionContext = executionContext\n    ReactCurrentBatchConfig.transition = null\n    setCurrentUpdatePriority(DiscreteEventPriority)\n    executionContext |= CommitContext\n\n    // Reset this to null before calling life cycles.\n    ReactCurrentOwner.current = null\n\n    // `BeforeMutation` phase:\n    // read the state of the host tree right before we mutate it.\n    // `getSnapshotBeforeUpdate` is called.\n    commitBeforeMutationEffects(root, finishedWork)\n\n    // `Mutation` phase:\n    // mutate the host tree.\n    commitMutationEffects(root, finishedWork, lanes)\n\n    resetAfterCommit(root.containerInfo)\n\n    // The workInProgress tree is now the current tree (during `componentDidMount`/`Update`).\n    root.current = finishedWork\n\n    // `Layout` phase:\n    // `useLayoutEffect` is called.\n    commitLayoutEffects(finishedWork, root, lanes)\n\n    // Tell Scheduler to yield at the end of the frame,\n    // so the browser has an opportunity to paint.\n    requestPaint()\n\n    // Restore context.\n    executionContext = prevExecutionContext\n    setCurrentUpdatePriority(previousPriority)\n    ReactCurrentBatchConfig.transition = prevTransition\n  } else {\n    // No effects.\n    root.current = finishedWork\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects:\n    // Stash a reference to them.\n    rootDoesHavePassiveEffects = false\n    rootWithPendingPassiveEffects = root\n    pendingPassiveEffectsLanes = lanes\n  } else {\n    // There were no passive effects:\n    // immediately release the cache pool for this render.\n    releaseRootPooledCache(root, remainingLanes)\n  }\n\n  // Always call this before exiting `commitRoot`,\n  // to ensure that any additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now())\n\n  // If the passive effects are the result of a discrete render,\n  // flush them synchronously at the end of the current task\n  // so that the result is immediately observable.\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane)\n    && root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects()\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbacks()\n\n  return null\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const BeforeMutationMask = Update | Snapshot | ChildDeletion | Visibility\n\nconst MutationMask\n  = Placement\n  | Update\n  | ChildDeletion\n  | ContentReset\n  | Ref\n  | Hydrating\n  | Visibility\n\nconst LayoutMask = Update | Callback | Ref | Visibility\n"})}),"\n",(0,s.jsx)(n.h4,{id:"before-mutation-phase",children:"Before Mutation Phase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Passive"})," effects:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FunctionComponent"})," fiber (hooks):\nIf there are pending passive effects,\nschedule a callback (",(0,s.jsx)(n.strong,{children:"asynchronous"}),") to process them,\n",(0,s.jsx)(n.strong,{children:"as early as possible"})," before anything else in commit phase."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useXXX"})," hooks normally run in ",(0,s.jsx)(n.strong,{children:"asynchronous"})," mode."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useEffect"})," (",(0,s.jsx)(n.strong,{children:"asynchronous"}),") run after ",(0,s.jsx)(n.code,{children:"useLayoutEffect"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Snapshot"})," effects:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HostRoot"})," fiber: ",(0,s.jsx)(n.code,{children:"HostConfig.clearContainer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ClassComponent"})," fiber: ",(0,s.jsx)(n.code,{children:"instance.getSnapShotBeforeUpdate"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Deletion"})," effects: ",(0,s.jsx)(n.code,{children:"commitBeforeMutationEffectsDeletion"})," -> ",(0,s.jsx)(n.code,{children:"HostConfig.beforeActiveInstanceBlur"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// `Passive` effects.\nscheduleCallback(NormalSchedulerPriority, () => {\n  flushPassiveEffects()\n  return null\n})\n\nfunction flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  if (pendingPassiveEffectsRenderPriority !== NoSchedulerPriority) {\n    const priorityLevel\n      = pendingPassiveEffectsRenderPriority > NormalSchedulerPriority\n        ? NormalSchedulerPriority\n        : pendingPassiveEffectsRenderPriority\n    pendingPassiveEffectsRenderPriority = NoSchedulerPriority\n    return runWithPriority(priorityLevel, flushPassiveEffectsImpl)\n  }\n\n  return false\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null)\n    return false\n\n  rootWithPendingPassiveEffects = null\n  pendingPassiveEffectsLanes = NoLanes\n\n  // 1. \u6267\u884c effect.destroy().\n  const unmountEffects = pendingPassiveHookEffectsUnmount\n  pendingPassiveHookEffectsUnmount = []\n\n  for (let i = 0; i < unmountEffects.length; i += 2) {\n    const effect = unmountEffects[i]\n    const fiber = unmountEffects[i + 1]\n    const destroy = effect.destroy\n    effect.destroy = undefined\n\n    if (typeof destroy === 'function')\n      destroy()\n  }\n\n  // 2. \u6267\u884c\u65b0 effect.create(), \u91cd\u65b0\u8d4b\u503c\u5230 effect.destroy.\n  const mountEffects = pendingPassiveHookEffectsMount\n  pendingPassiveHookEffectsMount = []\n\n  for (let i = 0; i < mountEffects.length; i += 2) {\n    const effect = mountEffects[i]\n    const fiber = mountEffects[i + 1]\n    effect.destroy = create()\n  }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// `Snapshot` effects.\nfunction commitBeforeMutationEffects(root: FiberRoot, firstChild: Fiber) {\n  HostConfig.prepareForCommit(root.containerInfo)\n  nextEffect = firstChild\n\n  // DFS traverse.\n  while (nextEffect !== null) {\n    const fiber = nextEffect\n    const deletions = fiber.deletions\n\n    if (deletions !== null) {\n      for (let i = 0; i < deletions.length; i++) {\n        const deletion = deletions[i]\n        commitBeforeMutationEffectsDeletion(deletion)\n      }\n    }\n\n    const child = fiber.child\n\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags\n      && child !== null\n    ) {\n      // 1. Visit children.\n      nextEffect = child\n    } else {\n      while (nextEffect !== null) {\n        const fiber = nextEffect\n        commitBeforeMutationEffectsOnFiber(fiber)\n        const sibling = fiber.sibling\n\n        // 2. Visit sibling.\n        if (sibling !== null) {\n          nextEffect = sibling\n          break\n        }\n\n        nextEffect = fiber.return\n      }\n    }\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork: Fiber) {\n  const current = finishedWork.alternate\n  const flags = finishedWork.flags\n\n  if ((flags & Snapshot) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case ClassComponent: {\n        if (current !== null) {\n          const prevProps = current.memoizedProps\n          const prevState = current.memoizedState\n          const instance = finishedWork.stateNode\n\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState\n          )\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot\n        }\n\n        break\n      }\n      case HostRoot: {\n        if (supportsMutation) {\n          const root = finishedWork.stateNode\n          HostConfig.clearContainer(root.containerInfo)\n        }\n\n        break\n      }\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types.\n        break\n      default: {\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is '\n          + 'likely caused by a bug in React. Please file an issue.'\n        )\n      }\n    }\n  }\n}\n\nfunction commitBeforeMutationEffectsDeletion(deletion: Fiber) {\n  if (doesFiberContain(deletion, focusedInstanceHandle)) {\n    shouldFireAfterActiveInstanceBlur = true\n    beforeActiveInstanceBlur(deletion)\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"mutation-phase",children:"Mutation Phase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ContentReset"})," effects: ",(0,s.jsx)(n.code,{children:"commitResetTextContent"})," -> ",(0,s.jsx)(n.code,{children:"HostConfig.resetTextContext"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Ref"})," effects: ",(0,s.jsx)(n.code,{children:"commitAttachRef"}),"/",(0,s.jsx)(n.code,{children:"commitDetachRef"})," -> ",(0,s.jsx)(n.code,{children:"HostConfig.getPublicInstance"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Visibility"})," effects:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SuspenseComponent"})," fiber:\n",(0,s.jsx)(n.code,{children:"markCommitTimeOfFallback"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OffscreenComponent"})," fiber:\n",(0,s.jsx)(n.code,{children:"hideOrUnhideAllChildren"})," -> ",(0,s.jsx)(n.code,{children:"HostConfig.hideInstance/hideTextInstance/unhideInstance/unhideTextInstance"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Placement"})," effects:\n",(0,s.jsx)(n.code,{children:"commitPlacement"}),"\n-> ",(0,s.jsx)(n.code,{children:"insertOrAppendPlacementNode"}),"/",(0,s.jsx)(n.code,{children:"insertOrAppendPlacementNodeIntoContainer"}),"\n-> ",(0,s.jsx)(n.code,{children:"HostConfig.appendChild/insertBefore/appendChildToContainer/insertInContainerBefore"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Update"})," effects: ",(0,s.jsx)(n.code,{children:"commitWork"})," -> ",(0,s.jsx)(n.code,{children:"HostConfig.commitUpdate/commitTextUpdate/commitHydratedContainer/replaceContainerChildren"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Deletion"})," effects: ",(0,s.jsx)(n.code,{children:"commitDeletion"})," -> ",(0,s.jsx)(n.code,{children:"HostConfig.removeChild/removeChildFromContainer/clearSuspenseBoundaryFromContainer"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Hydrating"})," effects."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export function commitMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n  committedLanes: Lanes\n) {\n  inProgressLanes = committedLanes\n  inProgressRoot = root\n  nextEffect = firstChild\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect\n    const deletions = fiber.deletions\n\n    if (deletions !== null) {\n      for (let i = 0; i < deletions.length; i++) {\n        const childToDelete = deletions[i]\n        commitDeletion(root, childToDelete, fiber)\n      }\n    }\n\n    const child = fiber.child\n\n    if ((fiber.subtreeFlags & MutationMask) !== NoFlags && child !== null) {\n      // 1. Visit children.\n      nextEffect = child\n    } else {\n      while (nextEffect !== null) {\n        const fiber = nextEffect\n        commitMutationEffectsOnFiber(fiber, root, lanes)\n        const sibling = fiber.sibling\n\n        // 2. Visit sibling.\n        if (sibling !== null) {\n          nextEffect = sibling\n          break\n        }\n\n        nextEffect = fiber.return\n      }\n    }\n  }\n\n  inProgressLanes = null\n  inProgressRoot = null\n}\n\nfunction commitMutationEffectsOnFiber(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  lanes: Lanes\n) {\n  const flags = finishedWork.flags\n\n  if (flags & ContentReset)\n    commitResetTextContent(finishedWork)\n\n  if (flags & Ref) {\n    const current = finishedWork.alternate\n\n    if (current !== null) {\n      // \u5148\u6e05\u7a7a ref, \u5728\u7b2c\u4e09\u9636\u6bb5 (Layout), \u518d\u91cd\u65b0\u8d4b\u503c.\n      commitDetachRef(current)\n    }\n\n    if (finishedWork.tag === ScopeComponent)\n      commitAttachRef(finishedWork)\n  }\n\n  if (flags & Visibility) {\n    switch (finishedWork.tag) {\n      case SuspenseComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState\n        const isHidden = newState !== null\n\n        if (isHidden) {\n          const current = finishedWork.alternate\n          const wasHidden = current !== null && current.memoizedState !== null\n\n          if (!wasHidden)\n            markCommitTimeOfFallback()\n        }\n\n        break\n      }\n      case OffscreenComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState\n        const isHidden = newState !== null\n        const current = finishedWork.alternate\n        const wasHidden = current !== null && current.memoizedState !== null\n        const offscreenBoundary: Fiber = finishedWork\n\n        if (supportsMutation)\n          hideOrUnhideAllChildren(offscreenBoundary, isHidden)\n\n        break\n      }\n    }\n  }\n\n  const primaryFlags = flags & (Placement | Update | Hydrating)\n\n  switch (primaryFlags) {\n    case Placement: {\n      // Placement\n      commitPlacement(finishedWork)\n      finishedWork.flags &= ~Placement // Clear bit.\n      break\n    }\n    case PlacementAndUpdate: {\n      // Placement\n      commitPlacement(finishedWork)\n      finishedWork.flags &= ~Placement // Clear bit.\n\n      // Update\n      const current = finishedWork.alternate\n      commitWork(current, finishedWork)\n      break\n    }\n    case Hydrating: {\n      finishedWork.flags &= ~Hydrating // Clear bit.\n      break\n    }\n    case HydratingAndUpdate: {\n      finishedWork.flags &= ~Hydrating // Clear bit.\n\n      // Update\n      const current = finishedWork.alternate\n      commitWork(current, finishedWork)\n      break\n    }\n    case Update: {\n      const current = finishedWork.alternate\n      commitWork(current, finishedWork)\n      break\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"layout-phase",children:"Layout Phase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Update | Callback"})," effects:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance.componentDidMount/componentDidUpdate"})," (",(0,s.jsx)(n.strong,{children:"synchronous"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance"})," callback for ",(0,s.jsx)(n.code,{children:"setState"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useLayoutEffect"})," (",(0,s.jsx)(n.strong,{children:"synchronous"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HostConfig.getPublicInstance/commitMount"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function commitLayoutEffects(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes\n): void {\n  inProgressLanes = committedLanes\n  inProgressRoot = root\n  nextEffect = finishedWork\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect\n    const firstChild = fiber.child\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      // 1. Visit children.\n      nextEffect = firstChild\n    } else {\n      while (nextEffect !== null) {\n        const fiber = nextEffect\n\n        if ((fiber.flags & LayoutMask) !== NoFlags) {\n          const current = fiber.alternate\n          commitLayoutEffectOnFiber(root, current, fiber, committedLanes)\n        }\n\n        // Complete `commitLayoutEffects`.\n        if (fiber === subtreeRoot) {\n          nextEffect = null\n          break\n        }\n\n        const sibling = fiber.sibling\n\n        // 2. Visit sibling.\n        if (sibling !== null) {\n          nextEffect = sibling\n          break\n        }\n\n        nextEffect = fiber.return\n      }\n    }\n  }\n\n  inProgressLanes = null\n  inProgressRoot = null\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes\n): void {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        if (\n          !enableSuspenseLayoutEffectSemantics\n          || !offscreenSubtreeWasHidden\n        ) {\n          commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork)\n        }\n\n        break\n      }\n      case ClassComponent: {\n        const instance = finishedWork.stateNode\n\n        if (finishedWork.flags & Update) {\n          if (!offscreenSubtreeWasHidden) {\n            if (current === null) {\n              instance.componentDidMount()\n            } else {\n              const prevProps\n                = finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps\n                    )\n              const prevState = current.memoizedState\n\n              instance.componentDidUpdate(\n                prevProps,\n                prevState,\n                instance.__reactInternalSnapshotBeforeUpdate\n              )\n            }\n          }\n        }\n\n        const updateQueue = finishedWork.updateQueue\n\n        if (updateQueue !== null) {\n          // \u5904\u7406 update \u56de\u8c03\u51fd\u6570, e.g: `this.setState({}, callback)`.\n          commitUpdateQueue(finishedWork, updateQueue, instance)\n        }\n\n        break\n      }\n      case HostRoot: {\n        const updateQueue = finishedWork.updateQueue\n\n        if (updateQueue !== null) {\n          let instance = null\n\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode)\n                break\n              case ClassComponent:\n                instance = finishedWork.child.stateNode\n                break\n            }\n          }\n\n          // \u5904\u7406 update \u56de\u8c03\u51fd\u6570, e.g: `this.setState({}, callback)`.\n          commitUpdateQueue(finishedWork, updateQueue, instance)\n        }\n\n        break\n      }\n      case HostComponent: {\n        const instance: Instance = finishedWork.stateNode\n\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type\n          const props = finishedWork.memoizedProps\n          commitMount(instance, type, props, finishedWork)\n        }\n\n        break\n      }\n      case SuspenseComponent: {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork)\n        break\n      }\n      case HostText:\n      case HostPortal:\n      case Profiler:\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        break\n      }\n\n      default:\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is '\n          + 'likely caused by a bug in React. Please file an issue.'\n        )\n    }\n  }\n\n  // \u91cd\u65b0\u8bbe\u7f6eref.\n  if (finishedWork.flags & Ref)\n    commitAttachRef(finishedWork)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"reconciler-performance-tips",children:"Reconciler Performance Tips"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Render: \u901a\u8fc7\u4e00\u4e9b\u542f\u53d1\u5f0f\u7b97\u6cd5\u8df3\u8fc7\u6ca1\u6709\u53d1\u751f\u53d8\u66f4\u7684\u5b50\u6811."}),"\n",(0,s.jsxs)(n.li,{children:["Commit:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5217\u8868\u7528\u4e8e\u8bb0\u5f55\u53d8\u5316\u7684 Fiber, \u4e0d\u518d\u8bbf\u95ee\u5176\u4ed6 Fiber."}),"\n",(0,s.jsxs)(n.li,{children:["\u9996\u6b21\u6e32\u67d3 (Mount) \u65f6\u53ea\u6709 ",(0,s.jsx)(n.code,{children:"HostRootFiber.flags"})," \u4f1a\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:"Placement"}),",\n\u5728 Commit \u9636\u6bb5\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u63d2\u5165\u64cd\u4f5c."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["GC:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Reuse ",(0,s.jsx)(n.code,{children:"OldFiber"})," objects when ",(0,s.jsx)(n.code,{children:"Bailout"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"current"})," Fiber tree and ",(0,s.jsx)(n.code,{children:"workInProgress"})," Fiber tree for ",(0,s.jsx)(n.code,{children:"Double Buffering"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"minimal-reconciler-implementation",children:"Minimal Reconciler Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function performWork(deadline) {\n  if (!nextUnitOfWork)\n    resetNextUnitOfWork()\n\n  // whether current status is idle status or not\n  while (nextUnitOfWork && deadline.timeRemaining() > ENOUGH_TIME)\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork)\n\n  if (pendingCommit)\n    commitAllWork(pendingCommit)\n\n  // checks if there's pending work\n  // if exist, performWork in **next frame** when idle\n  if (nextUnitOfWork || updateQueue.length > 0)\n    requestIdleCallback(performWork)\n}\n\nfunction scheduleUpdate(instance, partialState) {\n  updateQueue.push({\n    from: CLASS_COMPONENT,\n    instance,\n    partialState,\n  })\n\n  requestIdleCallback(performWork)\n}\n\n// React.render function\nfunction render(elements, container) {\n  updateQueue.push({\n    from: HOST_ROOT,\n    dom: container,\n    newProps: {\n      children: elements,\n    },\n  })\n\n  requestIdleCallback(performWork)\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9542:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/ReactCorePackages-08e2adc3bb013c66966f9a71e93715c0.png"},7385:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/ReactFiberTrees-c1b57b3b1ce1239d058a44a8d33f0ab4.png"},9541:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/ReactFiberWorkLoop-59263ed5fab0b0ece74a9201cde6ccee.png"},842:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(8101);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);